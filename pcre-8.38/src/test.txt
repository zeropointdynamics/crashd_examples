17:32:43:hooks_____:NOTICE:Couldn't find function calloc
Plugins: asan, dataflow, ida, overlay, runner, syscalllimiter, trace, yarascan, behaviorgraph, call_stack, copyqemu, debugger, doppler, heap_tracker, honeysocket, idaapi, loop_breaker, pcapsockets, rdtsc_manager, reporter, syscallhash, time_leap, yara
[main] [SYSCALL] brk ( addr=0x0 ) -> 90000040
[main] [SYSCALL] openat ( dirfd=0xffffff9c, pathname=0xb229170 ("./pcretest"), flags=0x80000 ) -> 10
[main] [SYSCALL] read ( fd=0x10 (file), buf=0x7f000008e6e8, count=0x340 ) -> 340
[main] [SYSCALL] fstat ( fd=0x10 (file), statbuf=0x7f000008e580 ) -> 0
[main] [SYSCALL] getcwd ( buf=0xb229720, size=0x80 ) -> 16
[main] [SYSCALL] mmap ( addr=0x0, length=0x250bc8, prot=RX, flags=0x802, fd=0x10 (file), offset=0x0 ) -> 1000
[main] [SYSCALL] mprotect ( addr=0x44000, len=0x200000, prot=NONE ) -> 0
[main] [SYSCALL] mmap ( addr=0x244000, length=0x4000, prot=RW, flags=0x812, fd=0x10 (file), offset=0x43000 ) -> 244000
[main] [SYSCALL] mmap ( addr=0x248000, length=0x9bc8, prot=RW, flags=0x32, fd=0xffffffff (unknown), offset=0x0 ) -> 248000
[main] [SYSCALL] close ( fd=0x10 (file) ) -> 0
[main] [SYSCALL] uname ( buf=0x7f000008e8c0 ) -> 0
[main] [SYSCALL] access ( pathname=0xb021082 ("/etc/ld.so.nohwcap"), mode=0x0 ) -> -1
[main] [SYSCALL] access ( pathname=0xb023dd0 ("/etc/ld.so.preload"), mode=0x4 ) -> -1
[main] [SYSCALL] openat ( dirfd=0xffffff9c, pathname=0xb021428 ("/etc/ld.so.cache"), flags=0x80000 ) -> -2
[main] [SYSCALL] openat ( dirfd=0xffffff9c, pathname=0x7f000008e260 ("/lib/x86_64-linux-gnu/tls/x86_64/libc.so.6"), flags=0x80000 ) -> -2
[main] [SYSCALL] stat ( pathname=0x7f000008e260 ("/lib/x86_64-linux-gnu/tls/x86_64"), statbuf=0x7f000008e310 ) -> -1
[main] [SYSCALL] openat ( dirfd=0xffffff9c, pathname=0x7f000008e260 ("/lib/x86_64-linux-gnu/tls/libc.so.6"), flags=0x80000 ) -> -2
[main] [SYSCALL] stat ( pathname=0x7f000008e260 ("/lib/x86_64-linux-gnu/tls"), statbuf=0x7f000008e310 ) -> -1
[main] [SYSCALL] openat ( dirfd=0xffffff9c, pathname=0x7f000008e260 ("/lib/x86_64-linux-gnu/x86_64/libc.so.6"), flags=0x80000 ) -> -2
[main] [SYSCALL] stat ( pathname=0x7f000008e260 ("/lib/x86_64-linux-gnu/x86_64"), statbuf=0x7f000008e310 ) -> -1
[main] [SYSCALL] openat ( dirfd=0xffffff9c, pathname=0x7f000008e260 ("/lib/x86_64-linux-gnu/libc.so.6"), flags=0x80000 ) -> 14
[main] [SYSCALL] read ( fd=0x14 (file), buf=0x7f000008e478, count=0x340 ) -> 340
[main] [SYSCALL] fstat ( fd=0x14 (file), statbuf=0x7f000008e310 ) -> 0
[main] [SYSCALL] mmap ( addr=0x0, length=0x3f0ae0, prot=RX, flags=0x802, fd=0x14 (file), offset=0x0 ) -> 252000
[main] [SYSCALL] mprotect ( addr=0x439000, len=0x200000, prot=NONE ) -> 0
[main] [SYSCALL] mmap ( addr=0x639000, length=0x6000, prot=RW, flags=0x812, fd=0x14 (file), offset=0x1e7000 ) -> 639000
[main] [SYSCALL] mmap ( addr=0x63f000, length=0x3ae0, prot=RW, flags=0x32, fd=0xffffffff (unknown), offset=0x0 ) -> 63f000
[main] [SYSCALL] close ( fd=0x14 (file) ) -> 0
[main] [SYSCALL] mmap ( addr=0x0, length=0x2000, prot=RW, flags=0x22, fd=0xffffffff (unknown), offset=0x0 ) -> 643000
[main] [SYSCALL] arch_prctl ( option=0x1002 (ARCH_SET_FS), addr=0x643f00 ) -> 0
[main] [SYSCALL] mprotect ( addr=0x639000, len=0x4000, prot=READ ) -> 0
[main] [SYSCALL] mprotect ( addr=0x244000, len=0x1000, prot=READ ) -> 0
[main] [SYSCALL] mprotect ( addr=0xb227000, len=0x1000, prot=READ ) -> 0
[main] [SYSCALL] brk ( addr=0x0 ) -> 900187d0
[main] [SYSCALL] brk ( addr=0x900397d0 ) -> 900397d0
[main] [SYSCALL] brk ( addr=0x9003a000 ) -> 9003a000
[main] [SYSCALL] openat ( dirfd=0xffffff9c, pathname=0x7f000008eeae ("afl/queue/id_000002"), flags=0x0 ) -> 18
[main] [SYSCALL] fstat ( fd=0x1 (stdout), statbuf=0x7f000008c170 ) -> 0
IOCTL: 0
[main] [SYSCALL] ioctl ( fd=0x1 (stdout), request=0x5401, data=0x7f000008c0d0 ) -> -1
[main] [SYSCALL] fstat ( fd=0x18 (file), statbuf=0x7f000008c720 ) -> 0
[main] [SYSCALL] read ( fd=0x18 (file), buf=0x90019c70, count=0x1000 ) -> f
[main] [INS] [00362081] cmp	rax, -0x1000                                              ; 0xf vs 0x-1000
[main] [INS] [00362087] ja	0x3620e0
[main] [INS] [00362089] ret	
[main] [INS] [002df148] test	rax, rax                                                 ; 0xf vs 0xf
[main] [INS] [002df14b] jle	0x2df188
[main] [INS] [002df14d] mov	rdx, qword ptr [rbx + 0x90]                               ; rdx = 0xffffffffffffffff
[main] [INS] [002df154] add	qword ptr [rbx + 0x10], rax                               ; store(0x90018a40,0xf)
[main] [INS] [002df158] cmp	rdx, -1                                                   ; 0xffffffffffffffff vs 0x-1
[main] [INS] [002df15c] je	0x2df168
[main] [INS] [002df168] mov	rax, qword ptr [rbx + 8]                                  ; rax = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002df16c] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002df16d] pop	rbp                                                       ; rbp = 0x63a2a0 -> 0
[main] [INS] [002df16e] movzx	eax, byte ptr [rax]                                     ; eax = 0x2f
[main] [INS] [002df171] pop	r12                                                       ; r12 = 0xa
[main] [INS] [002df173] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002df175] pop	r14                                                       ; r14 = 0x90018a30 -> fbad2488
[main] [INS] [002df177] ret	
[main] [INS] [002e03f2] cmp	eax, -1                                                   ; 0x2f vs 0x-1
[main] [INS] [002e03f5] je	0x2e0406
[main] [INS] [002e03f7] mov	rax, qword ptr [rbx + 8]                                  ; rax = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002e03fb] lea	rdx, [rax + 1]                                            ; rdx = 0x90019c71 -> "(?=a\K)a"
[main] [INS] [002e03ff] mov	qword ptr [rbx + 8], rdx                                  ; store(0x90018a38,0x90019c71) -> "(?=a\K)a"
[main] [INS] [002e0403] movzx	eax, byte ptr [rax]                                     ; eax = 0x2f
[main] [INS] [002e0406] add	rsp, 8                                                    ; rsp = 0x7f000008c838 -> 0
[main] [INS] [002e040a] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002e040b] pop	rbp                                                       ; rbp = 0x90000040 -> 0
[main] [INS] [002e040c] ret	
[main] [INS] [002d1e62] cmp	eax, -1                                                   ; 0x2f vs 0x-1
[main] [INS] [002d1e65] je	0x2d1e80
[main] [INS] [002d1e67] cmp	r12d, eax                                                 ; 0xa vs 0x2f
[main] [INS] [002d1e6a] je	0x2d1eed
[main] [INS] [002d1e70] sub	r15, 1                                                    ; r15 = 0xc34e -> e024bc8b4cffffc9
[main] [INS] [002d1e74] mov	byte ptr [rbp], al                                        ; store(0x90000040,0x2f)
[main] [INS] [002d1e77] add	rbp, 1                                                    ; rbp = 0x90000041 -> 0
[main] [INS] [002d1e7b] test	r15, r15                                                 ; 0xc34e vs 0xc34e
[main] [INS] [002d1e7e] jne	0x2d1e4a
[main] [INS] [002d1e4a] mov	r13, qword ptr [r14 + 8]                                  ; r13 = 0x90019c71 -> "(?=a\K)a"
[main] [INS] [002d1e4e] mov	rbx, qword ptr [r14 + 0x10]                               ; rbx = 0x90019c7f -> 0
[main] [INS] [002d1e52] sub	rbx, r13                                                  ; rbx = 0xe
[main] [INS] [002d1e55] test	rbx, rbx                                                 ; 0xe vs 0xe
[main] [INS] [002d1e58] jg	0x2d1e10
[main] [INS] [002d1e10] cmp	rbx, r15                                                  ; 0xe vs 0xc34e
[main] [INS] [002d1e13] mov	esi, r12d                                                 ; esi = 0xa
[main] [INS] [002d1e16] mov	rdi, r13                                                  ; rdi = 0x90019c71 -> "(?=a\K)a"
[main] [INS] [002d1e19] cmovae	rbx, r15                                               ; rbx = 0xe
[main] [INS] [002d1e1d] mov	rdx, rbx                                                  ; rdx = 0xe
[main] [INS] [002d1e20] call	0x2730c0                                                 ; call(0x2730c0)
[main] [INS] [002730c0] jmp	qword ptr [rip + 0x3c9fc2]                                ; jmp(0x2fd970)
[main] [INS] [002fd970] movd	xmm1, esi                                                ; xmm1 = 0xa
[main] [INS] [002fd974] mov	ecx, edi                                                  ; ecx = 0x90019c71 -> "(?=a\K)a"
[main] [INS] [002fd976] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0xa0a
[main] [INS] [002fd97a] test	rdx, rdx                                                 ; 0xe vs 0xe
[main] [INS] [002fd97d] je	0x2fdc90
[main] [INS] [002fd983] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0xa0a0a0a
[main] [INS] [002fd987] and	ecx, 0x3f                                                 ; ecx = 0x31
[main] [INS] [002fd98a] pshufd	xmm1, xmm1, 0
[main] [INS] [002fd98f] cmp	ecx, 0x30                                                 ; 0x31 vs 0x30
[main] [INS] [002fd992] ja	0x2fd9d0
[main] [INS] [002fd9d0] and	ecx, 0xf                                                  ; ecx = 0x1
[main] [INS] [002fd9d3] and	rdi, 0xfffffffffffffff0                                   ; rdi = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002fd9d7] movdqa	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x62610a432f6261294b5c613d3f282f
[main] [INS] [002fd9db] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff000000000000000000000000
[main] [INS] [002fd9df] pmovmskb	eax, xmm0                                            ; eax = 0x1000 -> "ELF"
[main] [INS] [002fd9e3] sar	eax, cl                                                   ; eax = 0x800
[main] [INS] [002fd9e5] test	eax, eax                                                 ; 0x800 vs 0x800
[main] [INS] [002fd9e7] je	0x2fda00
[main] [INS] [002fd9e9] bsf	eax, eax                                                  ; eax = 0xb
[main] [INS] [002fd9ec] sub	rdx, rax                                                  ; rdx = 0x3
[main] [INS] [002fd9ef] jbe	0x2fdc90
[main] [INS] [002fd9f5] add	rax, rdi                                                  ; rax = 0x90019c7b -> "C
ab"
[main] [INS] [002fd9f8] add	rax, rcx                                                  ; rax = 0x90019c7c -> "
ab"
[main] [INS] [002fd9fb] ret	
[main] [INS] [002d1e25] test	rax, rax                                                 ; 0x90019c7c vs 0x90019c7c
[main] [INS] [002d1e28] mov	r8, rax                                                   ; r8 = 0x90019c7c -> "
ab"
[main] [INS] [002d1e2b] jne	0x2d1ea0
[main] [INS] [002d1ea0] mov	r12, rax                                                  ; r12 = 0x90019c7c -> "
ab"
[main] [INS] [002d1ea3] mov	eax, dword ptr [rsp + 0xc]                                ; eax = 0x1
[main] [INS] [002d1ea7] mov	rbx, rbp                                                  ; rbx = 0x90000041 -> 0
[main] [INS] [002d1eaa] sub	r12, r13                                                  ; r12 = 0xb
[main] [INS] [002d1ead] sub	rbx, qword ptr [rsp]                                      ; rbx = 0x1
[main] [INS] [002d1eb1] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [002d1eb3] js	0x2d1ec0
[main] [INS] [002d1eb5] add	r8, 1                                                     ; r8 = 0x90019c7d -> 6261
[main] [INS] [002d1eb9] cmp	eax, 1                                                    ; 0x1 vs 0x1
[main] [INS] [002d1ebc] sbb	r12, -1                                                   ; r12 = 0xc
[main] [INS] [002d1ec0] mov	rdx, r12                                                  ; rdx = 0xc
[main] [INS] [002d1ec3] mov	rsi, r13                                                  ; rsi = 0x90019c71 -> "(?=a\K)a"
[main] [INS] [002d1ec6] mov	rdi, rbp                                                  ; rdi = 0x90000041 -> 0
[main] [INS] [002d1ec9] mov	qword ptr [rsp], r8                                       ; store(0x7f000008c850,0x90019c7d) -> 6261
[main] [INS] [002d1ecd] call	0x273160                                                 ; call(0x273160)
[main] [INS] [00273160] jmp	qword ptr [rip + 0x3c9f72]                                ; jmp(0x3be750)
[main] [INS] [003be750] mov	rax, rdi                                                  ; rax = 0x90000041 -> 0
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0xc vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb1a70
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x90019c7d -> 6261
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x9000004d -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c0930 -> 48fc568bf44e8b48
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c0930)
[main] [INS] [003c0930] mov	rcx, qword ptr [rsi - 0xc]                                ; rcx = 0x61294b5c613d3f28
[main] [INS] [003c0934] mov	edx, dword ptr [rsi - 4]                                  ; edx = 0xa432f62
[main] [INS] [003c0937] mov	qword ptr [rdi - 0xc], rcx                                ; store(0x90000041,0x61294b5c613d3f28)
[main] [INS] [003c093b] mov	dword ptr [rdi - 4], edx                                  ; store(0x90000049,0xa432f62)
[main] [INS] [003c093e] ret	
[main] [INS] [002d1ed2] mov	r8, qword ptr [rsp]                                       ; r8 = 0x90019c7d -> 6261
[main] [INS] [002d1ed6] lea	rax, [rbx + r12]                                          ; rax = 0xd
[main] [INS] [002d1eda] mov	qword ptr [r14 + 8], r8                                   ; store(0x90018a38,0x90019c7d) -> 6261
[main] [INS] [002d1ede] add	rsp, 0x18                                                 ; rsp = 0x7f000008c868 -> 90018a30
[main] [INS] [002d1ee2] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002d1ee3] pop	rbp                                                       ; rbp = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d1ee4] pop	r12                                                       ; r12 = 0x0
[main] [INS] [002d1ee6] pop	r13                                                       ; r13 = 0x7f000008ed78 -> 1c
[main] [INS] [002d1ee8] pop	r14                                                       ; r14 = 0xc350 -> e024bc8b4cff
[main] [INS] [002d1eea] pop	r15                                                       ; r15 = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d1eec] ret	
[main] [INS] [002d0bcd] xor	esi, esi                                                  ; esi = 0x0
[main] [INS] [002d0bcf] test	rax, rax                                                 ; 0xd vs 0xd
[main] [INS] [002d0bd2] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2488
[main] [INS] [002d0bd4] je	0x2d0be8
[main] [INS] [002d0bd6] test	dl, 0x20                                                 ; 0x88 vs 0x20
[main] [INS] [002d0bd9] je	0x2d0c40
[main] [INS] [002d0c40] mov	byte ptr [rbp + rax], 0                                   ; store(0x9000004d,0x0)
[main] [INS] [002d0c45] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2488
[main] [INS] [002d0c47] mov	rsi, rbp                                                  ; rsi = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d0c4a] or	r12d, edx                                                  ; r12d = 0xfbad2488
[main] [INS] [002d0c4d] mov	dword ptr [rbx], r12d                                     ; store(0x90018a30,0xfbad2488)
[main] [INS] [002d0c50] and	r12d, 0x8000                                              ; r12d = 0x0
[main] [INS] [002d0c57] je	0x2d0bf7
[main] [INS] [002d0bf7] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x90018b10 -> 100000001
[main] [INS] [002d0bfe] sub	dword ptr [rdx + 4], 1                                    ; store(0x90018b14,0x1)
[main] [INS] [002d0c02] jne	0x2d0c36
[main] [INS] [002d0c04] mov	qword ptr [rdx + 8], 0                                    ; store(0x90018b18,0x0)
[main] [INS] [002d0c0c] cmp	dword ptr [rip + 0x371ce5], 0                             ; 0x0 vs 0x0
[main] [INS] [002d0c13] je	0x2d0c1c
[main] [INS] [002d0c1c] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [002d0c1e] je	0x2d0c36
[main] [INS] [002d0c36] pop	rbx                                                       ; rbx = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d0c37] mov	rax, rsi                                                  ; rax = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d0c3a] pop	rbp                                                       ; rbp = 0xc350 -> e024bc8b4cff
[main] [INS] [002d0c3b] pop	r12                                                       ; r12 = 0xc350 -> e024bc8b4cff
[main] [INS] [002d0c3d] ret	
[main] [INS] [0000f2ee] add	qword ptr [rip + 0x237faa], 1                             ; store(0x2472a0,0x1)
[main] [INS] [0000f2f6] test	rax, rax                                                 ; 0x90000040 vs 0x90000040
[main] [INS] [0000f2f9] je	0xf438
[main] [INS] [0000f2ff] mov	rdi, rbx                                                  ; rdi = 0x90000040 -> "/(?=a\K)"
[main] [INS] [0000f302] add	qword ptr [rip + 0x237fa6], 1                             ; store(0x2472b0,0x1)
[main] [INS] [0000f30a] call	0x5700                                                   ; call(0x5700)
[main] [INS] [00005700] jmp	qword ptr [rip + 0x23f7ba]                                ; jmp(0x303620)
[main] [INS] [00303620] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [00303624] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [00303628] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [0030362c] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [00303630] mov	rax, rdi                                                  ; rax = 0x90000040 -> "/(?=a\K)"
[main] [INS] [00303633] mov	rcx, rdi                                                  ; rcx = 0x90000040 -> "/(?=a\K)"
[main] [INS] [00303636] and	rcx, 0xfff                                                ; rcx = 0x40
[main] [INS] [0030363d] cmp	rcx, 0xfcf                                                ; 0x40 vs 0xfcf
[main] [INS] [00303644] ja	0x3036b0
[main] [INS] [00303646] movdqu	xmm4, xmmword ptr [rax]                                ; xmm4 = 0xa432f6261294b5c613d3f282f
[main] [INS] [0030364a] pcmpeqb	xmm4, xmm0                                            ; xmm4 = 0xffffff00000000000000000000000000
[main] [INS] [0030364e] pmovmskb	edx, xmm4                                            ; edx = 0xe000 -> 66c35c415d010023
[main] [INS] [00303652] test	edx, edx                                                 ; 0xe000 vs 0xe000
[main] [INS] [00303654] je	0x30365a
[main] [INS] [00303656] bsf	eax, edx                                                  ; eax = 0xd
[main] [INS] [00303659] ret	
[main] [INS] [0000f30f] test	eax, eax                                                 ; 0xd vs 0xd
[main] [INS] [0000f311] movsxd	rdx, eax                                               ; rdx = 0xd
[main] [INS] [0000f314] jle	0xf329
[main] [INS] [0000f316] add	qword ptr [rip + 0x237fa2], 1                             ; store(0x2472c0,0x1)
[main] [INS] [0000f31e] cmp	byte ptr [rbx + rdx - 1], 0xa                             ; 0xa vs 0xa
[main] [INS] [0000f323] je	0xf458
[main] [INS] [0000f458] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x90000040 -> "/(?=a\K)"
[main] [INS] [0000f45d] add	rsp, 0x38                                                 ; rsp = 0x7f000008c8f8 -> 90018a30
[main] [INS] [0000f461] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [0000f462] pop	rbp                                                       ; rbp = 0x2
[main] [INS] [0000f463] pop	r12                                                       ; r12 = 0x90000040 -> "/(?=a\K)"
[main] [INS] [0000f465] pop	r13                                                       ; r13 = 0x7f000008ed78 -> 1c
[main] [INS] [0000f467] pop	r14                                                       ; r14 = 0x7f000008ed80 -> 7f000008eec2
[main] [INS] [0000f469] pop	r15                                                       ; r15 = 0x0
[main] [INS] [0000f46b] ret	
[main] [INS] [00006009] test	rax, rax                                                 ; 0x90000040 vs 0x90000040
[main] [INS] [0000600c] je	0x7086
[main] [INS] [00006012] add	qword ptr [rip + 0x241c56], 1                             ; store(0x247c70,0x1)
[main] [INS] [0000601a] cmp	qword ptr [rip + 0x2411af], rbx                           ; 0x63da00 vs 0x90018a30
[main] [INS] [00006021] mov	rdi, qword ptr [rip + 0x2433f0]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [00006028] je	0x6050
[main] [INS] [0000602a] mov	rsi, rdi                                                  ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000602d] mov	rdi, qword ptr [rip + 0x2433a4]                           ; rdi = 0x90000040 -> "/(?=a\K)"
[main] [INS] [00006034] add	qword ptr [rip + 0x241c3c], 1                             ; store(0x247c78,0x1)
[main] [INS] [0000603c] call	0x5750                                                   ; call(0x5750)
[main] [INS] [00005750] jmp	qword ptr [rip + 0x23f792]                                ; jmp(0x2d11f0)
[main] [INS] [002d11f0] push	r13                                                      ; push(0x7f000008ed78) -> 1c
[main] [INS] [002d11f2] push	r12                                                      ; push(0x90000040) -> "/(?=a\K)"
[main] [INS] [002d11f4] push	rbp                                                      ; push(0x2)
[main] [INS] [002d11f5] push	rbx                                                      ; push(0x90018a30) -> fbad2488
[main] [INS] [002d11f6] mov	rbx, rsi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002d11f9] mov	rbp, rdi                                                  ; rbp = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d11fc] sub	rsp, 8                                                    ; rsp = 0x7f000008c900 -> 2
[main] [INS] [002d1200] call	0x273100                                                 ; call(0x273100)
[main] [INS] [00273100] jmp	qword ptr [rip + 0x3c9fa2]                                ; jmp(0x303620)
[main] [INS] [00303620] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [00303624] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [00303628] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [0030362c] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [00303630] mov	rax, rdi                                                  ; rax = 0x90000040 -> "/(?=a\K)"
[main] [INS] [00303633] mov	rcx, rdi                                                  ; rcx = 0x90000040 -> "/(?=a\K)"
[main] [INS] [00303636] and	rcx, 0xfff                                                ; rcx = 0x40
[main] [INS] [0030363d] cmp	rcx, 0xfcf                                                ; 0x40 vs 0xfcf
[main] [INS] [00303644] ja	0x3036b0
[main] [INS] [00303646] movdqu	xmm4, xmmword ptr [rax]                                ; xmm4 = 0xa432f6261294b5c613d3f282f
[main] [INS] [0030364a] pcmpeqb	xmm4, xmm0                                            ; xmm4 = 0xffffff00000000000000000000000000
[main] [INS] [0030364e] pmovmskb	edx, xmm4                                            ; edx = 0xe000 -> 66c35c415d010023
[main] [INS] [00303652] test	edx, edx                                                 ; 0xe000 vs 0xe000
[main] [INS] [00303654] je	0x30365a
[main] [INS] [00303656] bsf	eax, edx                                                  ; eax = 0xd
[main] [INS] [00303659] ret	
[main] [INS] [002d1205] mov	r12, rax                                                  ; r12 = 0xd
[main] [INS] [002d1208] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002d120a] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [002d120f] jne	0x2d1267
[main] [INS] [002d1211] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [002d1218] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002d1221] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [002d1225] je	0x2d1263
[main] [INS] [002d1227] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [002d122c] cmp	dword ptr [rip + 0x3716c5], 0                             ; 0x0 vs 0x0
[main] [INS] [002d1233] je	0x2d123d
[main] [INS] [002d123d] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [002d1240] je	0x2d1258
[main] [INS] [002d1258] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [002d125f] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [002d1263] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002d1267] mov	eax, dword ptr [rbx + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002d126d] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002d126f] jne	0x2d1310
[main] [INS] [002d1310] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002d1313] je	0x2d127f
[main] [INS] [002d127f] mov	r13, qword ptr [rbx + 0xd8]                               ; r13 = 0x63a2a0 -> 0
[main] [INS] [002d1286] lea	rdx, [rip + 0x3684d3]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002d128d] lea	rax, [rip + 0x369234]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002d1294] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002d1297] mov	rcx, r13                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002d129a] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002d129d] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002d12a0] jbe	0x2d1320
[main] [INS] [002d12a2] mov	rdx, r12                                                  ; rdx = 0xd
[main] [INS] [002d12a5] mov	rsi, rbp                                                  ; rsi = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d12a8] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002d12ab] call	qword ptr [r13 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x0)
[main] [INS] [002dd932] push	r14                                                      ; push(0x7f000008ed80) -> 7f000008eec2
[main] [INS] [002dd934] push	r13                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd936] push	r12                                                      ; push(0xd)
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x90000040) -> "/(?=a\K)"
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008c8b0 -> c350
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0xd vs 0xd
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0xd
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c7e -> 0
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c7e
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfe2
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfe2 vs 0xfe2
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0xd vs 0xfe2
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0xd
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0xd
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0xd
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x9000004d -> 0
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c7e -> 0
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c8b -> 0
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0xd vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb1c60
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x9000004d -> 0
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c8b -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c0b20 -> f8568b48f34e8b48
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c0b20)
[main] [INS] [003c0b20] mov	rcx, qword ptr [rsi - 0xd]                                ; rcx = 0x294b5c613d3f282f
[main] [INS] [003c0b24] mov	rdx, qword ptr [rsi - 8]                                  ; rdx = 0xa432f6261294b5c
[main] [INS] [003c0b28] mov	qword ptr [rdi - 0xd], rcx                                ; store(0x90018c7e,0x294b5c613d3f282f)
[main] [INS] [003c0b2c] mov	qword ptr [rdi - 8], rdx                                  ; store(0x90018c83,0xa432f6261294b5c)
[main] [INS] [003c0b30] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c8b) -> 0
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0xd
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0xd
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008c8c8 -> 63e760
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0xd
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0xd
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x63a2a0 -> 0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x7f000008ed80 -> 7f000008eec2
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002d12af] cmp	r12, rax                                                  ; 0xd vs 0xd
[main] [INS] [002d12b2] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [002d12b7] jne	0x2d1319
[main] [INS] [002d12b9] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002d12bf] jne	0x2d1300
[main] [INS] [002d12c1] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002d12c8] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002d12cc] jne	0x2d1300
[main] [INS] [002d12ce] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [002d12d6] cmp	dword ptr [rip + 0x37161b], 0                             ; 0x0 vs 0x0
[main] [INS] [002d12dd] je	0x2d12e6
[main] [INS] [002d12e6] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [002d12e8] je	0x2d1300
[main] [INS] [002d1300] add	rsp, 8                                                    ; rsp = 0x7f000008c908 -> 90018a30
[main] [INS] [002d1304] mov	eax, esi                                                  ; eax = 0x1
[main] [INS] [002d1306] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002d1307] pop	rbp                                                       ; rbp = 0x2
[main] [INS] [002d1308] pop	r12                                                       ; r12 = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d130a] pop	r13                                                       ; r13 = 0x7f000008ed78 -> 1c
[main] [INS] [002d130c] ret	
[main] [INS] [00006041] add	qword ptr [rip + 0x241c37], 1                             ; store(0x247c80,0x1)
[main] [INS] [00006049] mov	rdi, qword ptr [rip + 0x2433c8]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [00006050] call	0x57f0                                                   ; call(0x57f0)
[main] [INS] [000057f0] jmp	qword ptr [rip + 0x23f742]                                ; jmp(0x2d07e0)
[main] [INS] [002d07e0] test	rdi, rdi                                                 ; 0x63e760 vs 0x63e760
[main] [INS] [002d07e3] je	0x2d08e0
[main] [INS] [002d07e9] push	rbp                                                      ; push(0x2)
[main] [INS] [002d07ea] push	rbx                                                      ; push(0x90018a30) -> fbad2488
[main] [INS] [002d07eb] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002d07ee] sub	rsp, 8                                                    ; rsp = 0x7f000008c910 -> 2
[main] [INS] [002d07f2] mov	eax, dword ptr [rdi]                                      ; eax = 0xfbad2884
[main] [INS] [002d07f4] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [002d07f9] jne	0x2d0854
[main] [INS] [002d07fb] mov	r8, qword ptr [rdi + 0x88]                                ; r8 = 0x63f8c0 -> 0
[main] [INS] [002d0802] mov	r9, qword ptr fs:[0x10]                                   ; r9 = 0x643f00 -> 643f00
[main] [INS] [002d080b] cmp	qword ptr [r8 + 8], r9                                    ; 0x0 vs 0x643f00
[main] [INS] [002d080f] je	0x2d084f
[main] [INS] [002d0811] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [002d0816] cmp	dword ptr [rip + 0x3720db], 0                             ; 0x0 vs 0x0
[main] [INS] [002d081d] je	0x2d0828
[main] [INS] [002d0828] cmpxchg	dword ptr [r8], esi                                   ; store(0x63f8c0,0x1)
[main] [INS] [002d082c] je	0x2d0844
[main] [INS] [002d0844] mov	r8, qword ptr [rbx + 0x88]                                ; r8 = 0x63f8c0 -> 1
[main] [INS] [002d084b] mov	qword ptr [r8 + 8], r9                                    ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [002d084f] add	dword ptr [r8 + 4], 1                                     ; store(0x63f8c4,0x1)
[main] [INS] [002d0854] mov	rbp, qword ptr [rbx + 0xd8]                               ; rbp = 0x63a2a0 -> 0
[main] [INS] [002d085b] lea	rdx, [rip + 0x368efe]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002d0862] lea	rax, [rip + 0x369c5f]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002d0869] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002d086c] mov	rcx, rbp                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002d086f] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002d0872] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002d0875] jbe	0x2d08e8
[main] [INS] [002d0877] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002d087a] call	qword ptr [rbp + 0x60]                                   ; call(0x2dc6d0)
[main] [INS] [002dc6d0] push	rbp                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dc6d1] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dc6d2] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dc6d5] sub	rsp, 0x18                                                 ; rsp = 0x7f000008c8e0 -> 63a2a0
[main] [INS] [002dc6d9] mov	rdx, qword ptr [rdi + 0x28]                               ; rdx = 0x90018c8b -> 0
[main] [INS] [002dc6dd] mov	rsi, qword ptr [rdi + 0x20]                               ; rsi = 0x90018c60 -> "PCRE ver"
[main] [INS] [002dc6e1] cmp	rdx, rsi                                                  ; 0x90018c8b vs 0x90018c60
[main] [INS] [002dc6e4] jbe	0x2dc71c
[main] [INS] [002dc6e6] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002dc6ec] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002dc6ee] jle	0x2dc780
[main] [INS] [002dc780] sub	rdx, rsi                                                  ; rdx = 0x2b
[main] [INS] [002dc783] call	0x2deea0                                                 ; call(0x2deea0)
[main] [INS] [002deea0] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002deea2] test	rdx, rdx                                                 ; 0x2b vs 0x2b
[main] [INS] [002deea5] jne	0x2deeb0
[main] [INS] [002deeb0] push	r15                                                      ; push(0x0)
[main] [INS] [002deeb2] push	r14                                                      ; push(0x7f000008ed80) -> 7f000008eec2
[main] [INS] [002deeb4] lea	r15, [rip + 0x35a8a5]                                     ; r15 = 0x639760 -> 0
[main] [INS] [002deebb] push	r13                                                      ; push(0x7f000008ed78) -> 1c
[main] [INS] [002deebd] push	r12                                                      ; push(0x90000040) -> "/(?=a\K)"
[main] [INS] [002deebf] mov	r13, rsi                                                  ; r13 = 0x90018c60 -> "PCRE ver"
[main] [INS] [002deec2] push	rbp                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002deec3] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002deec4] lea	rbp, [rip + 0x35b5fd]                                     ; rbp = 0x63a4c8 -> 0
[main] [INS] [002deecb] mov	r12, rdx                                                  ; r12 = 0x2b
[main] [INS] [002deece] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002deed1] sub	rsp, 8                                                    ; rsp = 0x7f000008c8a0 -> 90000040
[main] [INS] [002deed5] mov	r14, qword ptr [rdi + 0xd8]                               ; r14 = 0x63a2a0 -> 0
[main] [INS] [002deedc] sub	rbp, r15                                                  ; rbp = 0xd68
[main] [INS] [002deedf] mov	rax, r14                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002deee2] sub	rax, r15                                                  ; rax = 0xb40
[main] [INS] [002deee5] test	dword ptr [rdi], 0x1000                                  ; 0xfbad2884 vs 0x1000
[main] [INS] [002deeeb] jne	0x2defb0
[main] [INS] [002deef1] mov	rdx, qword ptr [rdi + 0x10]                               ; rdx = 0x90018c60 -> "PCRE ver"
[main] [INS] [002deef5] mov	rsi, qword ptr [rdi + 0x20]                               ; rsi = 0x90018c60 -> "PCRE ver"
[main] [INS] [002deef9] cmp	rdx, rsi                                                  ; 0x90018c60 vs 0x90018c60
[main] [INS] [002deefc] je	0x2def3b
[main] [INS] [002def3b] cmp	rbp, rax                                                  ; 0xd68 vs 0xb40
[main] [INS] [002def3e] jbe	0x2deff0
[main] [INS] [002def44] mov	rdx, r12                                                  ; rdx = 0x2b
[main] [INS] [002def47] mov	rsi, r13                                                  ; rsi = 0x90018c60 -> "PCRE ver"
[main] [INS] [002def4a] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002def4d] call	qword ptr [r14 + 0x78]                                   ; call(0x2dd190)
[main] [INS] [002dd190] push	r13                                                      ; push(0x90018c60) -> "PCRE ver"
[main] [INS] [002dd192] push	r12                                                      ; push(0x2b)
[main] [INS] [002dd194] mov	r12, rdi                                                  ; r12 = 0x63e760 -> fbad2884
[main] [INS] [002dd197] push	rbp                                                      ; push(0xd68)
[main] [INS] [002dd198] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd199] sub	rsp, 8                                                    ; rsp = 0x7f000008c870 -> 90000040
[main] [INS] [002dd19d] test	rdx, rdx                                                 ; 0x2b vs 0x2b
[main] [INS] [002dd1a0] jle	0x2dd230
[main] [INS] [002dd1a6] mov	rbp, rsi                                                  ; rbp = 0x90018c60 -> "PCRE ver"
[main] [INS] [002dd1a9] mov	r13, rdx                                                  ; r13 = 0x2b
[main] [INS] [002dd1ac] mov	rbx, rdx                                                  ; rbx = 0x2b
[main] [INS] [002dd1af] jmp	0x2dd1cd                                                  ; jmp(0x2dd1cd)
[main] [INS] [002dd1cd] test	byte ptr [r12 + 0x74], 2                                 ; 0x0 vs 0x2
[main] [INS] [002dd1d3] mov	edi, dword ptr [r12 + 0x70]                               ; edi = 0x1
[main] [INS] [002dd1d8] mov	rdx, rbx                                                  ; rdx = 0x2b
[main] [INS] [002dd1db] mov	rsi, rbp                                                  ; rsi = 0x90018c60 -> "PCRE ver"
[main] [INS] [002dd1de] je	0x2dd1b8
[main] [INS] [002dd1b8] call	0x362140                                                 ; call(0x362140)
[main] [INS] [00362140] lea	rax, [rip + 0x2e07b1]                                     ; rax = 0x6428f8 -> 0
[main] [INS] [00362147] mov	eax, dword ptr [rax]                                      ; eax = 0x0
[main] [INS] [00362149] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0036214b] jne	0x362160
[main] [INS] [0036214d] mov	eax, 1                                                    ; eax = 0x1
[StdOut]: 'b'PCRE version 8.38 2015-11-23\n\n/(?=a\\K)ab/C\n''
[main] [SYSCALL] write ( fd=0x1 (stdout), buf=0x90018c60 ("PCRE version 8.38 2015-11-23\n\n/(?=a\\K)ab/C\n"), count=0x2b ) -> 2b
[main] [INS] [00362154] cmp	rax, -0x1000                                              ; 0x2b vs 0x-1000
[main] [INS] [0036215a] ja	0x3621b0
[main] [INS] [0036215c] ret	
[main] [INS] [002dd1bd] test	rax, rax                                                 ; 0x2b vs 0x2b
[main] [INS] [002dd1c0] js	0x2dd1f0
[main] [INS] [002dd1c2] sub	rbx, rax                                                  ; rbx = 0x0
[main] [INS] [002dd1c5] add	rbp, rax                                                  ; rbp = 0x90018c8b -> 0
[main] [INS] [002dd1c8] test	rbx, rbx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd1cb] jle	0x2dd220
[main] [INS] [002dd220] mov	rax, r13                                                  ; rax = 0x2b
[main] [INS] [002dd223] sub	rax, rbx                                                  ; rax = 0x2b
[main] [INS] [002dd226] jmp	0x2dd1fb                                                  ; jmp(0x2dd1fb)
[main] [INS] [002dd1fb] mov	rdx, qword ptr [r12 + 0x90]                               ; rdx = 0xffffffffffffffff
[main] [INS] [002dd203] test	rdx, rdx                                                 ; 0xffffffffffffffff vs 0xffffffffffffffff
[main] [INS] [002dd206] js	0x2dd213
[main] [INS] [002dd213] add	rsp, 8                                                    ; rsp = 0x7f000008c878 -> 63e760
[main] [INS] [002dd217] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd218] pop	rbp                                                       ; rbp = 0xd68
[main] [INS] [002dd219] pop	r12                                                       ; r12 = 0x2b
[main] [INS] [002dd21b] pop	r13                                                       ; r13 = 0x90018c60 -> "PCRE ver"
[main] [INS] [002dd21d] ret	
[main] [INS] [002def51] mov	rbp, rax                                                  ; rbp = 0x2b
[main] [INS] [002def54] movzx	eax, word ptr [rbx + 0x80]                              ; eax = 0x0
[main] [INS] [002def5b] test	rbp, rbp                                                 ; 0x2b vs 0x2b
[main] [INS] [002def5e] je	0x2def65
[main] [INS] [002def60] test	ax, ax                                                   ; 0x0 vs 0x0
[main] [INS] [002def63] jne	0x2defd0
[main] [INS] [002def65] mov	edx, dword ptr [rbx + 0xc0]                               ; edx = 0xffffffff
[main] [INS] [002def6b] mov	rax, qword ptr [rbx + 0x38]                               ; rax = 0x90018c60 -> "PCRE ver"
[main] [INS] [002def6f] test	edx, edx                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002def71] mov	qword ptr [rbx + 0x18], rax                               ; store(0x63e778,0x90018c60) -> "PCRE ver"
[main] [INS] [002def75] mov	qword ptr [rbx + 8], rax                                  ; store(0x63e768,0x90018c60) -> "PCRE ver"
[main] [INS] [002def79] mov	qword ptr [rbx + 0x10], rax                               ; store(0x63e770,0x90018c60) -> "PCRE ver"
[main] [INS] [002def7d] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c60) -> "PCRE ver"
[main] [INS] [002def81] mov	qword ptr [rbx + 0x20], rax                               ; store(0x63e780,0x90018c60) -> "PCRE ver"
[main] [INS] [002def85] jle	0x2defc0
[main] [INS] [002defc0] test	dword ptr [rbx], 0x202                                   ; 0xfbad2884 vs 0x202
[main] [INS] [002defc6] jne	0x2def8b
[main] [INS] [002defc8] jmp	0x2def87                                                  ; jmp(0x2def87)
[main] [INS] [002def87] mov	rax, qword ptr [rbx + 0x40]                               ; rax = 0x90019c60 -> 0
[main] [INS] [002def8b] mov	qword ptr [rbx + 0x30], rax                               ; store(0x63e790,0x90019c60) -> 0
[main] [INS] [002def8f] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002def91] cmp	r12, rbp                                                  ; 0x2b vs 0x2b
[main] [INS] [002def94] setne	al                                                      ; al = 0x0
[main] [INS] [002def97] neg	eax                                                       ; eax = 0x0
[main] [INS] [002def99] add	rsp, 8                                                    ; rsp = 0x7f000008c8a8 -> 63e760
[main] [INS] [002def9d] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002def9e] pop	rbp                                                       ; rbp = 0x63a2a0 -> 0
[main] [INS] [002def9f] pop	r12                                                       ; r12 = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002defa1] pop	r13                                                       ; r13 = 0x7f000008ed78 -> 1c
[main] [INS] [002defa3] pop	r14                                                       ; r14 = 0x7f000008ed80 -> 7f000008eec2
[main] [INS] [002defa5] pop	r15                                                       ; r15 = 0x0
[main] [INS] [002defa7] ret	
[main] [INS] [002dc788] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002dc78a] setne	al                                                      ; al = 0x0
[main] [INS] [002dc78d] jmp	0x2dc714                                                  ; jmp(0x2dc714)
[main] [INS] [002dc714] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [002dc716] jne	0x2dc79d
[main] [INS] [002dc71c] mov	rsi, qword ptr [rbx + 8]                                  ; rsi = 0x90018c60 -> "PCRE ver"
[main] [INS] [002dc720] sub	rsi, qword ptr [rbx + 0x10]                               ; rsi = 0x0
[main] [INS] [002dc724] je	0x2dc765
[main] [INS] [002dc765] mov	qword ptr [rbx + 0x90], -1                                ; store(0x63e7f0,0x-1)
[main] [INS] [002dc770] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002dc772] add	rsp, 0x18                                                 ; rsp = 0x7f000008c8f8 -> 63e760
[main] [INS] [002dc776] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dc777] pop	rbp                                                       ; rbp = 0x63a2a0 -> 0
[main] [INS] [002dc778] ret	
[main] [INS] [002d087d] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [002d087f] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002d0881] setne	dl                                                      ; dl = 0x0
[main] [INS] [002d0884] neg	edx                                                       ; edx = 0x0
[main] [INS] [002d0886] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002d088c] jne	0x2d08cd
[main] [INS] [002d088e] mov	rsi, qword ptr [rbx + 0x88]                               ; rsi = 0x63f8c0 -> 100000001
[main] [INS] [002d0895] sub	dword ptr [rsi + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002d0899] jne	0x2d08cd
[main] [INS] [002d089b] mov	qword ptr [rsi + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [002d08a3] cmp	dword ptr [rip + 0x37204e], 0                             ; 0x0 vs 0x0
[main] [INS] [002d08aa] je	0x2d08b3
[main] [INS] [002d08b3] dec	dword ptr [rsi]                                           ; mem is (0x0)
[main] [INS] [002d08b5] je	0x2d08cd
[main] [INS] [002d08cd] add	rsp, 8                                                    ; rsp = 0x7f000008c918 -> 90018a30
[main] [INS] [002d08d1] mov	eax, edx                                                  ; eax = 0x0
[main] [INS] [002d08d3] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002d08d4] pop	rbp                                                       ; rbp = 0x2
[main] [INS] [002d08d5] ret	
[main] [INS] [00006055] call	0x5900                                                   ; call(0x5900)
[main] [INS] [00005900] jmp	qword ptr [rip + 0x23f6ba]                                ; jmp(0x282890)
[main] [INS] [00282890] mov	rax, qword ptr [rip + 0x3ba569]                           ; rax = 0xffffffffffffff98
[main] [INS] [00282897] add	rax, qword ptr fs:[0]                                     ; rax = 0x643e98 -> 3f0cc0
[main] [INS] [002828a0] ret	
[main] [INS] [0000605a] mov	r12, qword ptr [rip + 0x243377]                           ; r12 = 0x90000040 -> "/(?=a\K)"
[main] [INS] [00006061] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [00006063] mov	rdx, qword ptr [rip + 0x241c1e]                           ; rdx = 0x0
[main] [INS] [0000606a] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c940,0x643e98) -> 3f0cc0
[main] [INS] [0000606f] mov	r15, qword ptr [rax]                                      ; r15 = 0x3f0cc0 -> 2000200020002
[main] [INS] [00006072] mov	rbp, r12                                                  ; rbp = 0x90000040 -> "/(?=a\K)"
[main] [INS] [00006075] sub	rdx, r12                                                  ; rdx = 0xffffffff6fffffc0
[main] [INS] [00006078] jmp	0x6089                                                    ; jmp(0x6089)
[main] [INS] [00006089] movzx	eax, byte ptr [rbp]                                     ; eax = 0x2f
[main] [INS] [0000608d] lea	rsi, [rdx + rbp]                                          ; rsi = 0x0
[main] [INS] [00006091] movzx	r13d, word ptr [r15 + rax*2]                            ; r13d = 0xc004 -> c0248c2a0f48
[main] [INS] [00006096] mov	r14, rax                                                  ; r14 = 0x2f
[main] [INS] [00006099] test	r13w, 0x2000                                             ; 0xc004 vs 0x2000
[main] [INS] [0000609f] jne	0x6080
[main] [INS] [000060a1] test	cl, cl                                                   ; 0x0 vs 0x0
[main] [INS] [000060a3] jne	0xd6fa
[main] [INS] [000060a9] test	r14b, r14b                                               ; 0x2f vs 0x2f
[main] [INS] [000060ac] je	0x68d8
[main] [INS] [000060b2] add	qword ptr [rip + 0x241bd6], 1                             ; store(0x247c90,0x1)
[main] [INS] [000060ba] cmp	r14b, 0x3c                                                ; 0x2f vs 0x3c
[main] [INS] [000060be] je	0x68f0
[main] [INS] [000060c4] and	r13d, 8                                                   ; r13d = 0x0
[main] [INS] [000060c8] lea	rbx, [rbp + 1]                                            ; rbx = 0x90000041 -> "(?=a\K)a"
[main] [INS] [000060cc] jne	0x60e0
[main] [INS] [000060ce] add	qword ptr [rip + 0x241dd2], 1                             ; store(0x247ea8,0x1)
[main] [INS] [000060d6] cmp	r14b, 0x5c                                                ; 0x2f vs 0x5c
[main] [INS] [000060da] jne	0x6f61
[main] [INS] [00006f61] movzx	edx, byte ptr [rbp + 1]                                 ; edx = 0x28
[main] [INS] [00006f65] jmp	0x6942                                                    ; jmp(0x6942)
[main] [INS] [00006942] mov	r13d, r14d                                                ; r13d = 0x2f
[main] [INS] [00006945] mov	eax, edx                                                  ; eax = 0x28
[main] [INS] [00006947] mov	r15, rbx                                                  ; r15 = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0000694a] lea	rbp, [rip + 0x34a4a]                                      ; rbp = 0x3b39b -> "    > "
[main] [INS] [00006951] mov	r14, qword ptr [rsp]                                      ; r14 = 0x90018a30 -> fbad2488
[main] [INS] [00006955] jmp	0x6993                                                    ; jmp(0x6993)
[main] [INS] [00006993] test	al, al                                                   ; 0x28 vs 0x28
[main] [INS] [00006995] jne	0x6960
[main] [INS] [00006960] add	qword ptr [rip + 0x241568], 1                             ; store(0x247ed0,0x1)
[main] [INS] [00006968] cmp	al, 0x5c                                                  ; 0x28 vs 0x5c
[main] [INS] [0000696a] movzx	edx, byte ptr [r15 + 1]                                 ; edx = 0x3f
[main] [INS] [0000696f] lea	rcx, [r15 + 1]                                            ; rcx = 0x90000042 -> "?=a\K)ab"
[main] [INS] [00006973] je	0x69f0
[main] [INS] [00006975] cmp	r13b, al                                                  ; 0x2f vs 0x28
[main] [INS] [00006978] je	0x6418
[main] [INS] [0000697e] add	qword ptr [rip + 0x24153a], 1                             ; store(0x247ec0,0x1)
[main] [INS] [00006986] mov	eax, edx                                                  ; eax = 0x3f
[main] [INS] [00006988] mov	r15, rcx                                                  ; r15 = 0x90000042 -> "?=a\K)ab"
[main] [INS] [0000698b] add	qword ptr [rip + 0x241535], 1                             ; store(0x247ec8,0x1)
[main] [INS] [00006993] test	al, al                                                   ; 0x3f vs 0x3f
[main] [INS] [00006995] jne	0x6960
[main] [INS] [00006960] add	qword ptr [rip + 0x241568], 1                             ; store(0x247ed0,0x1)
[main] [INS] [00006968] cmp	al, 0x5c                                                  ; 0x3f vs 0x5c
[main] [INS] [0000696a] movzx	edx, byte ptr [r15 + 1]                                 ; edx = 0x3d
[main] [INS] [0000696f] lea	rcx, [r15 + 1]                                            ; rcx = 0x90000043 -> "=a\K)ab/"
[main] [INS] [00006973] je	0x69f0
[main] [INS] [00006975] cmp	r13b, al                                                  ; 0x2f vs 0x3f
[main] [INS] [00006978] je	0x6418
[main] [INS] [0000697e] add	qword ptr [rip + 0x24153a], 1                             ; store(0x247ec0,0x1)
[main] [INS] [00006986] mov	eax, edx                                                  ; eax = 0x3d
[main] [INS] [00006988] mov	r15, rcx                                                  ; r15 = 0x90000043 -> "=a\K)ab/"
[main] [INS] [0000698b] add	qword ptr [rip + 0x241535], 1                             ; store(0x247ec8,0x1)
[main] [INS] [00006993] test	al, al                                                   ; 0x3d vs 0x3d
[main] [INS] [00006995] jne	0x6960
[main] [INS] [00006960] add	qword ptr [rip + 0x241568], 1                             ; store(0x247ed0,0x1)
[main] [INS] [00006968] cmp	al, 0x5c                                                  ; 0x3d vs 0x5c
[main] [INS] [0000696a] movzx	edx, byte ptr [r15 + 1]                                 ; edx = 0x61
[main] [INS] [0000696f] lea	rcx, [r15 + 1]                                            ; rcx = 0x90000044 -> "a\K)ab/C"
[main] [INS] [00006973] je	0x69f0
[main] [INS] [00006975] cmp	r13b, al                                                  ; 0x2f vs 0x3d
[main] [INS] [00006978] je	0x6418
[main] [INS] [0000697e] add	qword ptr [rip + 0x24153a], 1                             ; store(0x247ec0,0x1)
[main] [INS] [00006986] mov	eax, edx                                                  ; eax = 0x61
[main] [INS] [00006988] mov	r15, rcx                                                  ; r15 = 0x90000044 -> "a\K)ab/C"
[main] [INS] [0000698b] add	qword ptr [rip + 0x241535], 1                             ; store(0x247ec8,0x1)
[main] [INS] [00006993] test	al, al                                                   ; 0x61 vs 0x61
[main] [INS] [00006995] jne	0x6960
[main] [INS] [00006960] add	qword ptr [rip + 0x241568], 1                             ; store(0x247ed0,0x1)
[main] [INS] [00006968] cmp	al, 0x5c                                                  ; 0x61 vs 0x5c
[main] [INS] [0000696a] movzx	edx, byte ptr [r15 + 1]                                 ; edx = 0x5c
[main] [INS] [0000696f] lea	rcx, [r15 + 1]                                            ; rcx = 0x90000045 -> "\K)ab/C
"
[main] [INS] [00006973] je	0x69f0
[main] [INS] [00006975] cmp	r13b, al                                                  ; 0x2f vs 0x61
[main] [INS] [00006978] je	0x6418
[main] [INS] [0000697e] add	qword ptr [rip + 0x24153a], 1                             ; store(0x247ec0,0x1)
[main] [INS] [00006986] mov	eax, edx                                                  ; eax = 0x5c
[main] [INS] [00006988] mov	r15, rcx                                                  ; r15 = 0x90000045 -> "\K)ab/C
"
[main] [INS] [0000698b] add	qword ptr [rip + 0x241535], 1                             ; store(0x247ec8,0x1)
[main] [INS] [00006993] test	al, al                                                   ; 0x5c vs 0x5c
[main] [INS] [00006995] jne	0x6960
[main] [INS] [00006960] add	qword ptr [rip + 0x241568], 1                             ; store(0x247ed0,0x1)
[main] [INS] [00006968] cmp	al, 0x5c                                                  ; 0x5c vs 0x5c
[main] [INS] [0000696a] movzx	edx, byte ptr [r15 + 1]                                 ; edx = 0x4b
[main] [INS] [0000696f] lea	rcx, [r15 + 1]                                            ; rcx = 0x90000046 -> "K)ab/C
"
[main] [INS] [00006973] je	0x69f0
[main] [INS] [000069f0] add	qword ptr [rip + 0x2414b8], 1                             ; store(0x247eb0,0x1)
[main] [INS] [000069f8] test	dl, dl                                                   ; 0x4b vs 0x4b
[main] [INS] [000069fa] je	0x697e
[main] [INS] [000069fc] add	qword ptr [rip + 0x2414b4], 1                             ; store(0x247eb8,0x1)
[main] [INS] [00006a04] movzx	edx, byte ptr [r15 + 2]                                 ; edx = 0x29
[main] [INS] [00006a09] lea	rcx, [r15 + 2]                                            ; rcx = 0x90000047 -> ")ab/C
"
[main] [INS] [00006a0d] jmp	0x697e                                                    ; jmp(0x697e)
[main] [INS] [0000697e] add	qword ptr [rip + 0x24153a], 1                             ; store(0x247ec0,0x1)
[main] [INS] [00006986] mov	eax, edx                                                  ; eax = 0x29
[main] [INS] [00006988] mov	r15, rcx                                                  ; r15 = 0x90000047 -> ")ab/C
"
[main] [INS] [0000698b] add	qword ptr [rip + 0x241535], 1                             ; store(0x247ec8,0x1)
[main] [INS] [00006993] test	al, al                                                   ; 0x29 vs 0x29
[main] [INS] [00006995] jne	0x6960
[main] [INS] [00006960] add	qword ptr [rip + 0x241568], 1                             ; store(0x247ed0,0x1)
[main] [INS] [00006968] cmp	al, 0x5c                                                  ; 0x29 vs 0x5c
[main] [INS] [0000696a] movzx	edx, byte ptr [r15 + 1]                                 ; edx = 0x61
[main] [INS] [0000696f] lea	rcx, [r15 + 1]                                            ; rcx = 0x90000048 -> "ab/C
"
[main] [INS] [00006973] je	0x69f0
[main] [INS] [00006975] cmp	r13b, al                                                  ; 0x2f vs 0x29
[main] [INS] [00006978] je	0x6418
[main] [INS] [0000697e] add	qword ptr [rip + 0x24153a], 1                             ; store(0x247ec0,0x1)
[main] [INS] [00006986] mov	eax, edx                                                  ; eax = 0x61
[main] [INS] [00006988] mov	r15, rcx                                                  ; r15 = 0x90000048 -> "ab/C
"
[main] [INS] [0000698b] add	qword ptr [rip + 0x241535], 1                             ; store(0x247ec8,0x1)
[main] [INS] [00006993] test	al, al                                                   ; 0x61 vs 0x61
[main] [INS] [00006995] jne	0x6960
[main] [INS] [00006960] add	qword ptr [rip + 0x241568], 1                             ; store(0x247ed0,0x1)
[main] [INS] [00006968] cmp	al, 0x5c                                                  ; 0x61 vs 0x5c
[main] [INS] [0000696a] movzx	edx, byte ptr [r15 + 1]                                 ; edx = 0x62
[main] [INS] [0000696f] lea	rcx, [r15 + 1]                                            ; rcx = 0x90000049 -> "b/C
"
[main] [INS] [00006973] je	0x69f0
[main] [INS] [00006975] cmp	r13b, al                                                  ; 0x2f vs 0x61
[main] [INS] [00006978] je	0x6418
[main] [INS] [0000697e] add	qword ptr [rip + 0x24153a], 1                             ; store(0x247ec0,0x1)
[main] [INS] [00006986] mov	eax, edx                                                  ; eax = 0x62
[main] [INS] [00006988] mov	r15, rcx                                                  ; r15 = 0x90000049 -> "b/C
"
[main] [INS] [0000698b] add	qword ptr [rip + 0x241535], 1                             ; store(0x247ec8,0x1)
[main] [INS] [00006993] test	al, al                                                   ; 0x62 vs 0x62
[main] [INS] [00006995] jne	0x6960
[main] [INS] [00006960] add	qword ptr [rip + 0x241568], 1                             ; store(0x247ed0,0x1)
[main] [INS] [00006968] cmp	al, 0x5c                                                  ; 0x62 vs 0x5c
[main] [INS] [0000696a] movzx	edx, byte ptr [r15 + 1]                                 ; edx = 0x2f
[main] [INS] [0000696f] lea	rcx, [r15 + 1]                                            ; rcx = 0x9000004a -> "/C
"
[main] [INS] [00006973] je	0x69f0
[main] [INS] [00006975] cmp	r13b, al                                                  ; 0x2f vs 0x62
[main] [INS] [00006978] je	0x6418
[main] [INS] [0000697e] add	qword ptr [rip + 0x24153a], 1                             ; store(0x247ec0,0x1)
[main] [INS] [00006986] mov	eax, edx                                                  ; eax = 0x2f
[main] [INS] [00006988] mov	r15, rcx                                                  ; r15 = 0x9000004a -> "/C
"
[main] [INS] [0000698b] add	qword ptr [rip + 0x241535], 1                             ; store(0x247ec8,0x1)
[main] [INS] [00006993] test	al, al                                                   ; 0x2f vs 0x2f
[main] [INS] [00006995] jne	0x6960
[main] [INS] [00006960] add	qword ptr [rip + 0x241568], 1                             ; store(0x247ed0,0x1)
[main] [INS] [00006968] cmp	al, 0x5c                                                  ; 0x2f vs 0x5c
[main] [INS] [0000696a] movzx	edx, byte ptr [r15 + 1]                                 ; edx = 0x43
[main] [INS] [0000696f] lea	rcx, [r15 + 1]                                            ; rcx = 0x9000004b -> a43
[main] [INS] [00006973] je	0x69f0
[main] [INS] [00006975] cmp	r13b, al                                                  ; 0x2f vs 0x2f
[main] [INS] [00006978] je	0x6418
[main] [INS] [00006418] cmp	dl, 0x5c                                                  ; 0x43 vs 0x5c
[main] [INS] [0000641b] mov	r13, rcx                                                  ; r13 = 0x9000004b -> a43
[main] [INS] [0000641e] mov	rax, qword ptr [rip + 0x242fb3]                           ; rax = 0x90000040 -> "/(?=a\K)"
[main] [INS] [00006425] je	0x79f4
[main] [INS] [0000642b] sub	rbx, r12                                                  ; rbx = 0x1
[main] [INS] [0000642e] mov	rdi, qword ptr [rip + 0x242f9b]                           ; rdi = 0x9000c3a0 -> 0
[main] [INS] [00006435] mov	byte ptr [r15], 0                                         ; store(0x9000004a,0x0)
[main] [INS] [00006439] movsxd	rdx, ebx                                               ; rdx = 0x1
[main] [INS] [0000643c] add	rax, rdx                                                  ; rax = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0000643f] mov	rsi, rax                                                  ; rsi = 0x90000041 -> "(?=a\K)a"
[main] [INS] [00006442] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008ca20,0x90000041) -> "(?=a\K)a"
[main] [INS] [0000644a] call	0x5680                                                   ; call(0x5680)
[main] [INS] [00005680] jmp	qword ptr [rip + 0x23f7fa]                                ; jmp(0x3cd950)
[main] [INS] [003cd950] mov	rcx, rsi                                                  ; rcx = 0x90000041 -> "(?=a\K)a"
[main] [INS] [003cd953] mov	rdx, rdi                                                  ; rdx = 0x9000c3a0 -> 0
[main] [INS] [003cd956] cmp	byte ptr [rcx], 0                                         ; 0x28 vs 0x0
[main] [INS] [003cd959] je	0x3ceff0
[main] [INS] [003cd95f] cmp	byte ptr [rcx + 1], 0                                     ; 0x3f vs 0x0
[main] [INS] [003cd963] je	0x3cf000
[main] [INS] [003cd969] cmp	byte ptr [rcx + 2], 0                                     ; 0x3d vs 0x0
[main] [INS] [003cd96d] je	0x3cf010
[main] [INS] [003cd973] cmp	byte ptr [rcx + 3], 0                                     ; 0x61 vs 0x0
[main] [INS] [003cd977] je	0x3cf020
[main] [INS] [003cd97d] cmp	byte ptr [rcx + 4], 0                                     ; 0x5c vs 0x0
[main] [INS] [003cd981] je	0x3cf030
[main] [INS] [003cd987] cmp	byte ptr [rcx + 5], 0                                     ; 0x4b vs 0x0
[main] [INS] [003cd98b] je	0x3cf040
[main] [INS] [003cd991] cmp	byte ptr [rcx + 6], 0                                     ; 0x29 vs 0x0
[main] [INS] [003cd995] je	0x3cf050
[main] [INS] [003cd99b] cmp	byte ptr [rcx + 7], 0                                     ; 0x61 vs 0x0
[main] [INS] [003cd99f] je	0x3cef80
[main] [INS] [003cd9a5] cmp	byte ptr [rcx + 8], 0                                     ; 0x62 vs 0x0
[main] [INS] [003cd9a9] je	0x3cf060
[main] [INS] [003cd9af] cmp	byte ptr [rcx + 9], 0                                     ; 0x0 vs 0x0
[main] [INS] [003cd9b3] je	0x3cf070
[main] [INS] [003cf070] mov	rax, qword ptr [rcx]                                      ; rax = 0x61294b5c613d3f28
[main] [INS] [003cf073] mov	qword ptr [rdx], rax                                      ; store(0x9000c3a0,0x61294b5c613d3f28)
[main] [INS] [003cf076] mov	eax, dword ptr [rcx + 6]                                  ; eax = 0x626129 -> 0
[main] [INS] [003cf079] mov	dword ptr [rdx + 6], eax                                  ; store(0x9000c3a6,0x626129) -> 0
[main] [INS] [003cf07c] mov	rax, rdi                                                  ; rax = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [003cf07f] ret	
[main] [INS] [0000644f] mov	eax, dword ptr [rsp + 0x64]                               ; eax = 0x0
[main] [INS] [00006453] movzx	ebx, byte ptr [r15 + 1]                                 ; ebx = 0x43
[main] [INS] [00006458] mov	dword ptr [rsp + 0x80], 0                                 ; store(0x7f000008c9b0,0x0)
[main] [INS] [00006463] mov	dword ptr [rsp + 0xa0], 0                                 ; store(0x7f000008c9d0,0x0)
[main] [INS] [0000646e] mov	dword ptr [rsp + 0xb8], 0                                 ; store(0x7f000008c9e8,0x0)
[main] [INS] [00006479] mov	dword ptr [rsp + 0xa4], 0                                 ; store(0x7f000008c9d4,0x0)
[main] [INS] [00006484] mov	dword ptr [rsp + 8], eax                                  ; store(0x7f000008c938,0x0)
[main] [INS] [00006488] mov	eax, dword ptr [rsp + 0x74]                               ; eax = 0x0
[main] [INS] [0000648c] test	bl, bl                                                   ; 0x43 vs 0x43
[main] [INS] [0000648e] mov	dword ptr [rsp + 0xb4], 0                                 ; store(0x7f000008c9e4,0x0)
[main] [INS] [00006499] mov	dword ptr [rsp + 0xd8], 0                                 ; store(0x7f000008ca08,0x0)
[main] [INS] [000064a4] mov	dword ptr [rsp + 0xe8], 0                                 ; store(0x7f000008ca18,0x0)
[main] [INS] [000064af] mov	dword ptr [rsp + 0xe0], 0                                 ; store(0x7f000008ca10,0x0)
[main] [INS] [000064ba] mov	dword ptr [rip + 0x242f54], eax                           ; store(0x249414,0x0)
[main] [INS] [000064c0] mov	eax, dword ptr [rsp + 0x60]                               ; eax = 0x0
[main] [INS] [000064c4] mov	dword ptr [rsp + 0xec], 0                                 ; store(0x7f000008ca1c,0x0)
[main] [INS] [000064cf] mov	qword ptr [rsp + 0x28], 0                                 ; store(0x7f000008c958,0x0)
[main] [INS] [000064d8] mov	qword ptr [rsp + 0x78], 0                                 ; store(0x7f000008c9a8,0x0)
[main] [INS] [000064e1] mov	dword ptr [rsp + 0x90], 0                                 ; store(0x7f000008c9c0,0x0)
[main] [INS] [000064ec] mov	dword ptr [rsp + 0x18], eax                               ; store(0x7f000008c948,0x0)
[main] [INS] [000064f0] mov	eax, dword ptr [rsp + 0x58]                               ; eax = 0x0
[main] [INS] [000064f4] mov	dword ptr [rsp + 0x88], eax                               ; store(0x7f000008c9b8,0x0)
[main] [INS] [000064fb] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x0
[main] [INS] [000064ff] mov	dword ptr [rsp + 0x70], eax                               ; store(0x7f000008c9a0,0x0)
[main] [INS] [00006503] jne	0x6a77
[main] [INS] [00006a77] lea	r15, [rsp + 0x2210]                                       ; r15 = 0x7f000008eb40 -> 0
[main] [INS] [00006a7f] movzx	ebp, bl                                                 ; ebp = 0x43
[main] [INS] [00006a82] mov	rdi, r15                                                  ; rdi = 0x7f000008eb40 -> 0
[main] [INS] [00006a85] add	qword ptr [rip + 0x2416eb], 1                             ; store(0x248178,0x1)
[main] [INS] [00006a8d] mov	esi, ebp                                                  ; esi = 0x43
[main] [INS] [00006a8f] call	0x5730                                                   ; call(0x5730)
[main] [INS] [00005730] jmp	qword ptr [rip + 0x23f7a2]                                ; jmp(0x302f00)
[main] [INS] [00302f00] movd	xmm1, esi                                                ; xmm1 = 0x43
[main] [INS] [00302f04] mov	eax, edi                                                  ; eax = 0x8eb40 -> "nt __c ="
[main] [INS] [00302f06] and	eax, 0xfff                                                ; eax = 0xb40
[main] [INS] [00302f0b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x4343 -> 2451e00000000000
[main] [INS] [00302f0f] cmp	eax, 0xfc0                                                ; 0xb40 vs 0xfc0
[main] [INS] [00302f14] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x43434343
[main] [INS] [00302f18] pshufd	xmm1, xmm1, 0
[main] [INS] [00302f1d] jg	0x303080
[main] [INS] [00302f23] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x0
[main] [INS] [00302f27] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [00302f2b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x0
[main] [INS] [00302f2f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0x0
[main] [INS] [00302f33] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00302f37] por	xmm0, xmm4                                                ; xmm0 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00302f3b] pmovmskb	eax, xmm0                                            ; eax = 0xffff -> 1246c8d41010023
[main] [INS] [00302f3f] test	eax, eax                                                 ; 0xffff vs 0xffff
[main] [INS] [00302f41] je	0x302f58
[main] [INS] [00302f43] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00302f46] mov	edx, 0                                                    ; edx = 0x0
[main] [INS] [00302f4b] lea	rax, [rdi + rax]                                          ; rax = 0x7f000008eb40 -> 0
[main] [INS] [00302f4f] cmp	byte ptr [rax], sil                                       ; 0x0 vs 0x43
[main] [INS] [00302f52] cmovne	rax, rdx                                               ; rax = 0x0
[main] [INS] [00302f56] ret	
[main] [INS] [00006a94] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [00006a97] je	0x6ee0
[main] [INS] [00006ee0] lea	rbx, [r13 + 1]                                            ; rbx = 0x9000004c -> a
[main] [INS] [00006ee4] movzx	edx, byte ptr [r13]                                     ; edx = 0x43
[main] [INS] [00006ee9] lea	eax, [rdx - 0xa]                                          ; eax = 0x39
[main] [INS] [00006eec] cmp	al, 0x6e                                                  ; 0x39 vs 0x6e
[main] [INS] [00006eee] ja	0x786e
[main] [INS] [00006ef4] lea	rsi, [rip + 0x345a5]                                      ; rsi = 0x3b4a0 -> fffcc3cefffcbde5
[main] [INS] [00006efb] movzx	eax, al                                                 ; eax = 0x39
[main] [INS] [00006efe] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xfffffffffffcc2f1
[main] [INS] [00006f02] add	rax, rsi                                                  ; rax = 0x7791 -> 400008244c81
[main] [INS] [00006f05] jmp	rax                                                       ; jmp(0x7791)
[main] [INS] [00007791] or	dword ptr [rsp + 8], 0x4000                                ; store(0x7f000008c938,0x4000) -> 24a880
[main] [INS] [00007799] add	qword ptr [rip + 0x24083f], 1                             ; store(0x247fe0,0x1)
[main] [INS] [000077a1] mov	r13, rbx                                                  ; r13 = 0x9000004c -> a
[main] [INS] [000077a4] jmp	0x7290                                                    ; jmp(0x7290)
[main] [INS] [00007290] movzx	ebx, byte ptr [r13]                                     ; ebx = 0xa
[main] [INS] [00007295] add	qword ptr [rip + 0x240ed3], 1                             ; store(0x248170,0x1)
[main] [INS] [0000729d] test	bl, bl                                                   ; 0xa vs 0xa
[main] [INS] [0000729f] jne	0x6a7f
[main] [INS] [00006a7f] movzx	ebp, bl                                                 ; ebp = 0xa
[main] [INS] [00006a82] mov	rdi, r15                                                  ; rdi = 0x7f000008eb40 -> 0
[main] [INS] [00006a85] add	qword ptr [rip + 0x2416eb], 1                             ; store(0x248178,0x1)
[main] [INS] [00006a8d] mov	esi, ebp                                                  ; esi = 0xa
[main] [INS] [00006a8f] call	0x5730                                                   ; call(0x5730)
[main] [INS] [00005730] jmp	qword ptr [rip + 0x23f7a2]                                ; jmp(0x302f00)
[main] [INS] [00302f00] movd	xmm1, esi                                                ; xmm1 = 0xa
[main] [INS] [00302f04] mov	eax, edi                                                  ; eax = 0x8eb40 -> "nt __c ="
[main] [INS] [00302f06] and	eax, 0xfff                                                ; eax = 0xb40
[main] [INS] [00302f0b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0xa0a
[main] [INS] [00302f0f] cmp	eax, 0xfc0                                                ; 0xb40 vs 0xfc0
[main] [INS] [00302f14] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0xa0a0a0a
[main] [INS] [00302f18] pshufd	xmm1, xmm1, 0
[main] [INS] [00302f1d] jg	0x303080
[main] [INS] [00302f23] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x0
[main] [INS] [00302f27] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [00302f2b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x0
[main] [INS] [00302f2f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0x0
[main] [INS] [00302f33] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00302f37] por	xmm0, xmm4                                                ; xmm0 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00302f3b] pmovmskb	eax, xmm0                                            ; eax = 0xffff -> 1246c8d41010023
[main] [INS] [00302f3f] test	eax, eax                                                 ; 0xffff vs 0xffff
[main] [INS] [00302f41] je	0x302f58
[main] [INS] [00302f43] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00302f46] mov	edx, 0                                                    ; edx = 0x0
[main] [INS] [00302f4b] lea	rax, [rdi + rax]                                          ; rax = 0x7f000008eb40 -> 0
[main] [INS] [00302f4f] cmp	byte ptr [rax], sil                                       ; 0x0 vs 0xa
[main] [INS] [00302f52] cmovne	rax, rdx                                               ; rax = 0x0
[main] [INS] [00302f56] ret	
[main] [INS] [00006a94] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [00006a97] je	0x6ee0
[main] [INS] [00006ee0] lea	rbx, [r13 + 1]                                            ; rbx = 0x9000004d -> 0
[main] [INS] [00006ee4] movzx	edx, byte ptr [r13]                                     ; edx = 0xa
[main] [INS] [00006ee9] lea	eax, [rdx - 0xa]                                          ; eax = 0x0
[main] [INS] [00006eec] cmp	al, 0x6e                                                  ; 0x0 vs 0x6e
[main] [INS] [00006eee] ja	0x786e
[main] [INS] [00006ef4] lea	rsi, [rip + 0x345a5]                                      ; rsi = 0x3b4a0 -> fffcc3cefffcbde5
[main] [INS] [00006efb] movzx	eax, al                                                 ; eax = 0x0
[main] [INS] [00006efe] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xfffffffffffcbde5
[main] [INS] [00006f02] add	rax, rsi                                                  ; rax = 0x7285 -> 841f0fdd8949
[main] [INS] [00006f05] jmp	rax                                                       ; jmp(0x7285)
[main] [INS] [00007285] mov	r13, rbx                                                  ; r13 = 0x9000004d -> 0
[main] [INS] [00007288] nop	dword ptr [rax + rax]                                     ; mem is (0x28ec8348)
[main] [INS] [00007290] movzx	ebx, byte ptr [r13]                                     ; ebx = 0x0
[main] [INS] [00007295] add	qword ptr [rip + 0x240ed3], 1                             ; store(0x248170,0x1)
[main] [INS] [0000729d] test	bl, bl                                                   ; 0x0 vs 0x0
[main] [INS] [0000729f] jne	0x6a7f
[main] [INS] [000072a5] jmp	0x6509                                                    ; jmp(0x6509)
[main] [INS] [00006509] mov	r12d, dword ptr [rsp + 0x90]                              ; r12d = 0x0
[main] [INS] [00006511] or	r12d, dword ptr [rsp + 0x20]                               ; r12d = 0x0
[main] [INS] [00006516] jne	0x7e7f
[main] [INS] [0000651c] add	qword ptr [rip + 0x241c64], 1                             ; store(0x248188,0x1)
[main] [INS] [00006524] cmp	dword ptr [rsp + 0x84], 0                                 ; 0x0 vs 0x0
[main] [INS] [0000652c] jg	0xc149
[main] [INS] [00006532] lea	rbp, [rsp + 0x16c]                                        ; rbp = 0x7f000008ca9c -> 0
[main] [INS] [0000653a] lea	rbx, [rsp + 0x1c0]                                        ; rbx = 0x7f000008caf0 -> 0
[main] [INS] [00006542] mov	r8, qword ptr [rsp + 0x28]                                ; r8 = 0x0
[main] [INS] [00006547] mov	esi, dword ptr [rsp + 8]                                  ; esi = 0x4000 -> 24a880
[main] [INS] [0000654b] mov	rcx, rbp                                                  ; rcx = 0x7f000008ca9c -> 0
[main] [INS] [0000654e] mov	rdi, qword ptr [rsp + 0xf0]                               ; rdi = 0x90000041 -> "(?=a\K)a"
[main] [INS] [00006556] mov	rdx, rbx                                                  ; rdx = 0x7f000008caf0 -> 0
[main] [INS] [00006559] call	0x214b0                                                  ; call(0x214b0)
[main] [INS] [000214b0] sub	rsp, 8                                                    ; rsp = 0x7f000008c920 -> 2
[main] [INS] [000214b4] mov	r9, r8                                                    ; r9 = 0x0
[main] [INS] [000214b7] mov	r8, rcx                                                   ; r8 = 0x7f000008ca9c -> 0
[main] [INS] [000214ba] mov	rcx, rdx                                                  ; rcx = 0x7f000008caf0 -> 0
[main] [INS] [000214bd] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [000214bf] add	qword ptr [rip + 0x22a7e9], 1                             ; store(0x24bcb0,0x1)
[main] [INS] [000214c7] call	0x1f860                                                  ; call(0x1f860)
[main] [INS] [0001f860] push	r15                                                      ; push(0x7f000008eb40) -> 0
[main] [INS] [0001f862] push	r14                                                      ; push(0x90018a30) -> fbad2488
[main] [INS] [0001f864] mov	r14, rdx                                                  ; r14 = 0x0
[main] [INS] [0001f867] push	r13                                                      ; push(0x9000004d) -> 0
[main] [INS] [0001f869] push	r12                                                      ; push(0x0)
[main] [INS] [0001f86b] push	rbp                                                      ; push(0x7f000008ca9c) -> 0
[main] [INS] [0001f86c] push	rbx                                                      ; push(0x7f000008caf0) -> 0
[main] [INS] [0001f86d] sub	rsp, 0x1348                                               ; rsp = 0x7f000008b5a0 -> 0
[main] [INS] [0001f874] mov	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x59424d4f444e4100
[main] [INS] [0001f87d] mov	qword ptr [rsp + 0x1338], rbx                             ; store(0x7f000008c8d8,0x59424d4f444e4100)
[main] [INS] [0001f885] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [0001f887] test	rcx, rcx                                                 ; 0x7f000008caf0 vs 0x7f000008caf0
[main] [INS] [0001f88a] mov	qword ptr [rsp + 0x10], rcx                               ; store(0x7f000008b5b0,0x7f000008caf0) -> 0
[main] [INS] [0001f88f] mov	qword ptr [rsp + 8], r8                                   ; store(0x7f000008b5a8,0x7f000008ca9c) -> 0
[main] [INS] [0001f894] mov	dword ptr [rsp + 0xe4], 1                                 ; store(0x7f000008b684,0x1)
[main] [INS] [0001f89f] mov	dword ptr [rsp + 0xf8], 0                                 ; store(0x7f000008b698,0x0)
[main] [INS] [0001f8aa] mov	qword ptr [rsp + 0x108], rdi                              ; store(0x7f000008b6a8,0x90000041) -> "(?=a\K)a"
[main] [INS] [0001f8b2] je	0x1fab0
[main] [INS] [0001f8b8] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x7f000008caf0 -> 0
[main] [INS] [0001f8bd] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [0001f8c0] mov	r10, rdi                                                  ; r10 = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0001f8c3] mov	r11d, esi                                                 ; r11d = 0x4000 -> 24a880
[main] [INS] [0001f8c6] mov	r13, r9                                                   ; r13 = 0x0
[main] [INS] [0001f8c9] mov	qword ptr [rax], 0                                        ; store(0x7f000008caf0,0x0)
[main] [INS] [0001f8d0] je	0x1f8e0
[main] [INS] [0001f8e0] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008ca9c vs 0x0
[main] [INS] [0001f8e6] je	0x1fa07
[main] [INS] [0001f8ec] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008ca9c -> 0
[main] [INS] [0001f8f1] test	r13, r13                                                 ; 0x0 vs 0x0
[main] [INS] [0001f8f4] mov	dword ptr [rax], 0                                        ; store(0x7f000008ca9c,0x0)
[main] [INS] [0001f8fa] je	0x1fedc
[main] [INS] [0001fedc] add	qword ptr [rip + 0x22bdf4], 1                             ; store(0x24bcd8,0x1)
[main] [INS] [0001fee4] lea	r13, [rip + 0x20855]                                      ; r13 = 0x40740 -> 706050403020100
[main] [INS] [0001feeb] jmp	0x1f900                                                   ; jmp(0x1f900)
[main] [INS] [0001f900] lea	rax, [r13 + 0x100]                                        ; rax = 0x40840 -> 706050403020100
[main] [INS] [0001f907] mov	ebx, r11d                                                 ; ebx = 0x4000 -> 24a880
[main] [INS] [0001f90a] mov	qword ptr [rsp + 0x130], r13                              ; store(0x7f000008b6d0,0x40740) -> 706050403020100
[main] [INS] [0001f912] and	ebx, 0xd8008580                                           ; ebx = 0x0
[main] [INS] [0001f918] mov	qword ptr [rsp + 0x138], rax                              ; store(0x7f000008b6d8,0x40840) -> 706050403020100
[main] [INS] [0001f920] lea	rax, [r13 + 0x200]                                        ; rax = 0x40940 -> 100003e00
[main] [INS] [0001f927] mov	qword ptr [rsp + 0x140], rax                              ; store(0x7f000008b6e0,0x40940) -> 100003e00
[main] [INS] [0001f92f] lea	rax, [r13 + 0x340]                                        ; rax = 0x40a80 -> 80
[main] [INS] [0001f936] mov	qword ptr [rsp + 0x148], rax                              ; store(0x7f000008b6e8,0x40a80) -> 80
[main] [INS] [0001f93e] je	0x1fad0
[main] [INS] [0001fad0] test	r11d, 0x10000                                            ; 0x4000 vs 0x10000
[main] [INS] [0001fad7] mov	byte ptr [rsp + 0x18], 0                                  ; store(0x7f000008b5b8,0x0)
[main] [INS] [0001fadc] jne	0x1fdd7
[main] [INS] [0001fae2] cmp	byte ptr [r10], 0x28                                      ; 0x28 vs 0x28
[main] [INS] [0001fae6] mov	dword ptr [rsp + 0x1c4], 0                                ; store(0x7f000008b764,0x0)
[main] [INS] [0001faf1] mov	eax, 0xffffffff                                           ; eax = 0xffffffff
[main] [INS] [0001faf6] jne	0x2010c
[main] [INS] [0001fafc] mov	rbp, qword ptr [rip + 0x22c2ad]                           ; rbp = 0x0
[main] [INS] [0001fb03] add	rbp, 1                                                    ; rbp = 0x1
[main] [INS] [0001fb07] cmp	byte ptr [r10 + 1], 0x2a                                  ; 0x3f vs 0x2a
[main] [INS] [0001fb0c] mov	qword ptr [rip + 0x22c29d], rbp                           ; store(0x24bdb0,0x1)
[main] [INS] [0001fb13] jne	0x2010c
[main] [INS] [0002010c] mov	dword ptr [rsp + 0x30], eax                               ; store(0x7f000008b5d0,0xffffffff)
[main] [INS] [00020110] mov	dword ptr [rsp + 0x60], eax                               ; store(0x7f000008b600,0xffffffff)
[main] [INS] [00020114] jmp	0x1fd61                                                   ; jmp(0x1fd61)
[main] [INS] [0001fd61] mov	eax, r11d                                                 ; eax = 0x4000 -> 24a880
[main] [INS] [0001fd64] and	eax, 0x800                                                ; eax = 0x0
[main] [INS] [0001fd69] je	0x1fe9a
[main] [INS] [0001fe9a] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0001fe9c] je	0x1ff07
[main] [INS] [0001ff07] test	r11d, 0x20000000                                         ; 0x4000 vs 0x20000000
[main] [INS] [0001ff0e] jne	0x20047
[main] [INS] [0001ff14] mov	eax, r11d                                                 ; eax = 0x4000 -> 24a880
[main] [INS] [0001ff17] and	eax, 0x1800000                                            ; eax = 0x0
[main] [INS] [0001ff1c] cmp	eax, 0x1800000                                            ; 0x0 vs 0x1800000
[main] [INS] [0001ff21] je	0x2012e
[main] [INS] [0001ff27] mov	eax, r11d                                                 ; eax = 0x4000 -> 24a880
[main] [INS] [0001ff2a] and	eax, 0x700000                                             ; eax = 0x0
[main] [INS] [0001ff2f] cmp	eax, 0x200000                                             ; 0x0 vs 0x200000
[main] [INS] [0001ff34] je	0x20d1f
[main] [INS] [0001ff3a] jle	0x209e3
[main] [INS] [000209e3] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [000209e5] je	0x20d1f
[main] [INS] [00020d1f] mov	dword ptr [rsp + 0x1e4], 0                                ; store(0x7f000008b784,0x0)
[main] [INS] [00020d2a] mov	eax, 0xa                                                  ; eax = 0xa
[main] [INS] [00020d2f] jmp	0x20a0e                                                   ; jmp(0x20a0e)
[main] [INS] [00020a0e] mov	dword ptr [rsp + 0x1e8], 1                                ; store(0x7f000008b788,0x1)
[main] [INS] [00020a19] mov	byte ptr [rsp + 0x1ec], al                                ; store(0x7f000008b78c,0xa)
[main] [INS] [00020a20] add	qword ptr [rip + 0x22b3f0], 1                             ; store(0x24be18,0x1)
[main] [INS] [00020a28] jmp	0x20170                                                   ; jmp(0x20170)
[main] [INS] [00020170] lea	rax, [rsp + 0x1f0]                                        ; rax = 0x7f000008b790 -> 0
[main] [INS] [00020178] lea	rbp, [rsp + 0x330]                                        ; rbp = 0x7f000008b8d0 -> 0
[main] [INS] [00020180] mov	rdi, r10                                                  ; rdi = 0x90000041 -> "(?=a\K)a"
[main] [INS] [00020183] movsxd	rbx, ebx                                               ; rbx = 0x0
[main] [INS] [00020186] mov	qword ptr [rsp + 0x180], rax                              ; store(0x7f000008b720,0x7f000008b790) -> 0
[main] [INS] [0002018e] movabs	rax, 0x100000000014                                    ; rax = 0x100000000014
[main] [INS] [00020198] mov	dword ptr [rsp + 0x20], r11d                              ; store(0x7f000008b5c0,0x4000) -> 24a880
[main] [INS] [0002019d] mov	qword ptr [rsp + 0x160], r10                              ; store(0x7f000008b700,0x90000041) -> "(?=a\K)a"
[main] [INS] [000201a5] mov	qword ptr [rsp + 0x18], r10                               ; store(0x7f000008b5b8,0x90000041) -> "(?=a\K)a"
[main] [INS] [000201aa] mov	qword ptr [rsp + 0x1ac], 0                                ; store(0x7f000008b74c,0x0)
[main] [INS] [000201b6] mov	dword ptr [rsp + 0x1b4], 0                                ; store(0x7f000008b754,0x0)
[main] [INS] [000201c1] mov	qword ptr [rsp + 0x158], rbp                              ; store(0x7f000008b6f8,0x7f000008b8d0) -> 0
[main] [INS] [000201c9] mov	qword ptr [rsp + 0x170], rbp                              ; store(0x7f000008b710,0x7f000008b8d0) -> 0
[main] [INS] [000201d1] mov	qword ptr [rsp + 0x1d8], 0                                ; store(0x7f000008b778,0x0)
[main] [INS] [000201dd] mov	dword ptr [rsp + 0x1e0], 0                                ; store(0x7f000008b780,0x0)
[main] [INS] [000201e8] mov	qword ptr [rsp + 0x150], rbp                              ; store(0x7f000008b6f0,0x7f000008b8d0) -> 0
[main] [INS] [000201f0] mov	qword ptr [rsp + 0x188], 0                                ; store(0x7f000008b728,0x0)
[main] [INS] [000201fc] mov	qword ptr [rsp + 0x190], 0                                ; store(0x7f000008b730,0x0)
[main] [INS] [00020208] mov	qword ptr [rsp + 0x198], rax                              ; store(0x7f000008b738,0x100000000014)
[main] [INS] [00020210] mov	qword ptr [rsp + 0x1a0], 0                                ; store(0x7f000008b740,0x0)
[main] [INS] [0002021c] call	0x5700                                                   ; call(0x5700)
[main] [INS] [00005700] jmp	qword ptr [rip + 0x23f7ba]                                ; jmp(0x303620)
[main] [INS] [00303620] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [00303624] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [00303628] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [0030362c] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [00303630] mov	rax, rdi                                                  ; rax = 0x90000041 -> "(?=a\K)a"
[main] [INS] [00303633] mov	rcx, rdi                                                  ; rcx = 0x90000041 -> "(?=a\K)a"
[main] [INS] [00303636] and	rcx, 0xfff                                                ; rcx = 0x41
[main] [INS] [0030363d] cmp	rcx, 0xfcf                                                ; 0x41 vs 0xfcf
[main] [INS] [00303644] ja	0x3036b0
[main] [INS] [00303646] movdqu	xmm4, xmmword ptr [rax]                                ; xmm4 = 0xa43006261294b5c613d3f28
[main] [INS] [0030364a] pcmpeqb	xmm4, xmm0                                            ; xmm4 = 0xffffffff0000ff000000000000000000
[main] [INS] [0030364e] pmovmskb	edx, xmm4                                            ; edx = 0xf200 -> 7d8b49ffff66abe8
[main] [INS] [00303652] test	edx, edx                                                 ; 0xf200 vs 0xf200
[main] [INS] [00303654] je	0x30365a
[main] [INS] [00303656] bsf	eax, edx                                                  ; eax = 0x9
[main] [INS] [00303659] ret	
[main] [INS] [00020221] mov	r10, qword ptr [rsp + 0x18]                               ; r10 = 0x90000041 -> "(?=a\K)a"
[main] [INS] [00020226] mov	r11d, dword ptr [rsp + 0x20]                              ; r11d = 0x4000 -> 24a880
[main] [INS] [0002022b] lea	rcx, [rsp + 0xf8]                                         ; rcx = 0x7f000008b698 -> 0
[main] [INS] [00020233] lea	rdx, [rsp + 0x108]                                        ; rdx = 0x7f000008b6a8 -> 90000041
[main] [INS] [0002023b] lea	rsi, [rsp + 0x100]                                        ; rsi = 0x7f000008b6a0 -> 0
[main] [INS] [00020243] mov	dword ptr [rsp + 0x1c8], 0                                ; store(0x7f000008b768,0x0)
[main] [INS] [0002024e] mov	qword ptr [rsp + 0x1b8], 0                                ; store(0x7f000008b758,0x0)
[main] [INS] [0002025a] mov	dword ptr [rsp + 0x1a8], 0                                ; store(0x7f000008b748,0x0)
[main] [INS] [00020265] sub	rsp, 8                                                    ; rsp = 0x7f000008b598 -> "!"
[main] [INS] [00020269] add	rax, r10                                                  ; rax = 0x9000004a -> a4300
[main] [INS] [0002026c] mov	dword ptr [rsp + 0x1c8], r11d                             ; store(0x7f000008b760,0x4000) -> 24a880
[main] [INS] [00020274] mov	qword ptr [rsp + 0x180], 0                                ; store(0x7f000008b718,0x0)
[main] [INS] [00020280] mov	qword ptr [rsp + 0x170], rax                              ; store(0x7f000008b708,0x9000004a) -> a4300
[main] [INS] [00020288] lea	rax, [r10 + rbx]                                          ; rax = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0002028c] mov	qword ptr [rsp + 0x30], r10                               ; store(0x7f000008b5c8,0x90000041) -> "(?=a\K)a"
[main] [INS] [00020291] mov	qword ptr [rsp + 0x108], rbp                              ; store(0x7f000008b6a0,0x7f000008b8d0) -> 0
[main] [INS] [00020299] mov	byte ptr [rsp + 0x338], 0x83                              ; store(0x7f000008b8d0,0x83)
[main] [INS] [000202a1] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [000202a4] mov	qword ptr [rsp + 0x60], rax                               ; store(0x7f000008b5f8,0x90000041) -> "(?=a\K)a"
[main] [INS] [000202a9] mov	qword ptr [rsp + 0x110], rax                              ; store(0x7f000008b6a8,0x90000041) -> "(?=a\K)a"
[main] [INS] [000202b1] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [000202b4] mov	qword ptr [rsp + 0xa8], rcx                               ; store(0x7f000008b640,0x7f000008b698) -> 0
[main] [INS] [000202bc] mov	qword ptr [rsp + 0xb8], rdx                               ; store(0x7f000008b650,0x7f000008b6a8) -> 90000041
[main] [INS] [000202c4] mov	edi, r11d                                                 ; edi = 0x4000 -> 24a880
[main] [INS] [000202c7] mov	qword ptr [rsp + 0xb0], rsi                               ; store(0x7f000008b648,0x7f000008b6a0) -> 7f000008b8d0
[main] [INS] [000202cf] lea	rax, [rsp + 0xec]                                         ; rax = 0x7f000008b684 -> 1
[main] [INS] [000202d7] push	rax                                                      ; push(0x7f000008b684) -> 1
[main] [INS] [000202d8] lea	rax, [rsp + 0x140]                                        ; rax = 0x7f000008b6d0 -> "@"
[main] [INS] [000202e0] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008b5b8,0x7f000008b6d0) -> "@"
[main] [INS] [000202e5] push	rax                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [000202e6] push	0                                                        ; push(0x0)
[main] [INS] [000202e8] lea	rax, [rsp + 0x10c]                                        ; rax = 0x7f000008b68c -> 0
[main] [INS] [000202f0] mov	qword ptr [rsp + 0xa8], rax                               ; store(0x7f000008b628,0x7f000008b68c) -> 0
[main] [INS] [000202f8] push	rax                                                      ; push(0x7f000008b68c) -> 0
[main] [INS] [000202f9] lea	rax, [rsp + 0x11c]                                        ; rax = 0x7f000008b694 -> 0
[main] [INS] [00020301] mov	qword ptr [rsp + 0xc0], rax                               ; store(0x7f000008b638,0x7f000008b694) -> 0
[main] [INS] [00020309] push	rax                                                      ; push(0x7f000008b694) -> 0
[main] [INS] [0002030a] lea	rax, [rsp + 0x118]                                        ; rax = 0x7f000008b688 -> 0
[main] [INS] [00020312] mov	qword ptr [rsp + 0x80], rax                               ; store(0x7f000008b5f0,0x7f000008b688) -> 0
[main] [INS] [0002031a] push	rax                                                      ; push(0x7f000008b688) -> 0
[main] [INS] [0002031b] lea	rax, [rsp + 0x128]                                        ; rax = 0x7f000008b690 -> 0
[main] [INS] [00020323] mov	qword ptr [rsp + 0xc8], rax                               ; store(0x7f000008b630,0x7f000008b690) -> 0
[main] [INS] [0002032b] push	rax                                                      ; push(0x7f000008b690) -> 0
[main] [INS] [0002032c] push	0                                                        ; push(0x0)
[main] [INS] [0002032e] push	0                                                        ; push(0x0)
[main] [INS] [00020330] mov	dword ptr [rsp + 0x70], r11d                              ; store(0x7f000008b5c0,0x4000) -> 24a880
[main] [INS] [00020335] call	0x18ae0                                                  ; call(0x18ae0)
[main] [INS] [00018ae0] push	r15                                                      ; push(0x7f000008eb40) -> 0
[main] [INS] [00018ae2] push	r14                                                      ; push(0x0)
[main] [INS] [00018ae4] push	r13                                                      ; push(0x40740) -> 706050403020100
[main] [INS] [00018ae6] push	r12                                                      ; push(0x0)
[main] [INS] [00018ae8] push	rbp                                                      ; push(0x7f000008b8d0) -> 83
[main] [INS] [00018ae9] push	rbx                                                      ; push(0x0)
[main] [INS] [00018aea] sub	rsp, 0x228                                                ; rsp = 0x7f000008b2f0 -> 0
[main] [INS] [00018af1] mov	rax, qword ptr [rsp + 0x270]                              ; rax = 0x7f000008b690 -> 0
[main] [INS] [00018af9] mov	dword ptr [rsp + 0x9c], r8d                               ; store(0x7f000008b38c,0x0)
[main] [INS] [00018b01] mov	dword ptr [rsp + 0x30], edi                               ; store(0x7f000008b320,0x4000) -> 24a880
[main] [INS] [00018b05] mov	qword ptr [rsp + 0xc0], rsi                               ; store(0x7f000008b3b0,0x7f000008b6a0) -> 7f000008b8d0
[main] [INS] [00018b0d] mov	qword ptr [rsp + 0xb0], rdx                               ; store(0x7f000008b3a0,0x7f000008b6a8) -> 90000041
[main] [INS] [00018b15] mov	qword ptr [rsp + 0x48], rcx                               ; store(0x7f000008b338,0x7f000008b698) -> 0
[main] [INS] [00018b1a] mov	qword ptr [rsp + 0x138], rax                              ; store(0x7f000008b428,0x7f000008b690) -> 0
[main] [INS] [00018b22] mov	rax, qword ptr [rsp + 0x278]                              ; rax = 0x7f000008b688 -> 0
[main] [INS] [00018b2a] mov	dword ptr [rsp + 0xac], r9d                               ; store(0x7f000008b39c,0x0)
[main] [INS] [00018b32] mov	rbx, qword ptr [rsp + 0x290]                              ; rbx = 0x0
[main] [INS] [00018b3a] mov	r12, qword ptr [rsp + 0x298]                              ; r12 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018b42] mov	r8, qword ptr [rdx]                                       ; r8 = 0x90000041 -> "(?=a\K)a"
[main] [INS] [00018b45] mov	qword ptr [rsp + 0x140], rax                              ; store(0x7f000008b430,0x7f000008b688) -> 0
[main] [INS] [00018b4d] mov	rax, qword ptr [rsp + 0x280]                              ; rax = 0x7f000008b694 -> 0
[main] [INS] [00018b55] mov	qword ptr [rsp + 0x148], rax                              ; store(0x7f000008b438,0x7f000008b694) -> 0
[main] [INS] [00018b5d] mov	rax, qword ptr [rsp + 0x288]                              ; rax = 0x7f000008b68c -> 0
[main] [INS] [00018b65] mov	qword ptr [rsp + 0x150], rax                              ; store(0x7f000008b440,0x7f000008b68c) -> 0
[main] [INS] [00018b6d] mov	rax, qword ptr [rsp + 0x2a0]                              ; rax = 0x7f000008b684 -> 1
[main] [INS] [00018b75] mov	qword ptr [rsp + 0x80], rax                               ; store(0x7f000008b370,0x7f000008b684) -> 1
[main] [INS] [00018b7d] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00018b86] mov	qword ptr [rsp + 0x218], rax                              ; store(0x7f000008b508,0x59424d4f444e4100)
[main] [INS] [00018b8e] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00018b90] mov	rax, qword ptr [rsi]                                      ; rax = 0x7f000008b8d0 -> 83
[main] [INS] [00018b93] mov	qword ptr [rsp + 0xd8], rax                               ; store(0x7f000008b3c8,0x7f000008b8d0) -> 83
[main] [INS] [00018b9b] mov	rax, qword ptr [rip + 0x2375ce]                           ; rax = 0x0
[main] [INS] [00018ba2] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [00018ba5] je	0x18bce
[main] [INS] [00018bce] mov	rax, qword ptr [r12 + 0x40]                               ; rax = 0x7f000008b8d0 -> 83
[main] [INS] [00018bd3] mov	qword ptr [rsp + 0x1c0], rbx                              ; store(0x7f000008b4b0,0x0)
[main] [INS] [00018bdb] mov	rbx, qword ptr [rsp + 0xd8]                               ; rbx = 0x7f000008b8d0 -> 83
[main] [INS] [00018be3] mov	qword ptr [rsp + 0x160], rax                              ; store(0x7f000008b450,0x7f000008b8d0) -> 83
[main] [INS] [00018beb] mov	rax, qword ptr [r12 + 0x20]                               ; rax = 0x7f000008b8d0 -> 83
[main] [INS] [00018bf0] mov	dword ptr [rsp + 0xfc], 0                                 ; store(0x7f000008b3ec,0x0)
[main] [INS] [00018bfb] mov	qword ptr [rsp + 0x1c8], rbx                              ; store(0x7f000008b4b8,0x7f000008b8d0) -> 83
[main] [INS] [00018c03] mov	qword ptr [rsp + 0x168], rax                              ; store(0x7f000008b458,0x7f000008b8d0) -> 83
[main] [INS] [00018c0b] mov	eax, dword ptr [rsp + 0x260]                              ; eax = 0x0
[main] [INS] [00018c12] add	eax, 6                                                    ; eax = 0x6
[main] [INS] [00018c15] cmp	byte ptr [rbx], 0x85                                      ; 0x83 vs 0x85
[main] [INS] [00018c18] mov	dword ptr [rsp + 0x17c], eax                              ; store(0x7f000008b46c,0x6)
[main] [INS] [00018c1f] je	0x1aabe
[main] [INS] [00018c25] mov	eax, dword ptr [rsp + 0x260]                              ; eax = 0x0
[main] [INS] [00018c2c] mov	rbx, qword ptr [rsp + 0xd8]                               ; rbx = 0x7f000008b8d0 -> 83
[main] [INS] [00018c34] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [00018c36] add	qword ptr [rip + 0x232c62], 1                             ; store(0x24b8a0,0x1)
[main] [INS] [00018c3e] lea	rdx, [rsp + 0x17c]                                        ; rdx = 0x7f000008b46c -> 6
[main] [INS] [00018c46] mov	dword ptr [rsp + 0xf8], 0                                 ; store(0x7f000008b3e8,0x0)
[main] [INS] [00018c51] mov	dword ptr [rsp + 0xe4], 0                                 ; store(0x7f000008b3d4,0x0)
[main] [INS] [00018c5c] mov	qword ptr [rsp + 0xc8], 0                                 ; store(0x7f000008b3b8,0x0)
[main] [INS] [00018c68] mov	r13, r12                                                  ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018c6b] add	eax, 3                                                    ; eax = 0x3
[main] [INS] [00018c6e] mov	word ptr [rbx + 1], bp                                    ; store(0x7f000008b8d1,0x0)
[main] [INS] [00018c72] mov	esi, dword ptr [r12 + 0x70]                               ; esi = 0x0
[main] [INS] [00018c77] cdqe	
[main] [INS] [00018c79] mov	qword ptr [rsp + 0xb8], rbx                               ; store(0x7f000008b3a8,0x7f000008b8d0) -> 83
[main] [INS] [00018c81] add	rax, rbx                                                  ; rax = 0x7f000008b8d3 -> 0
[main] [INS] [00018c84] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008b318,0x7f000008b8d3) -> 0
[main] [INS] [00018c89] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00018c8b] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x7f000008b684 vs 0x0
[main] [INS] [00018c94] mov	dword ptr [rsp + 0xd4], esi                               ; store(0x7f000008b3c4,0x0)
[main] [INS] [00018c9b] mov	dword ptr [rsp + 0x94], esi                               ; store(0x7f000008b384,0x0)
[main] [INS] [00018ca2] cmove	rdx, rax                                                ; rdx = 0x7f000008b46c -> 6
[main] [INS] [00018ca6] cmp	rdx, 1                                                    ; 0x7f000008b46c vs 0x1
[main] [INS] [00018caa] mov	r14, rdx                                                  ; r14 = 0x7f000008b46c -> 6
[main] [INS] [00018cad] lea	rdx, [rsp + 0x180]                                        ; rdx = 0x7f000008b470 -> 0
[main] [INS] [00018cb5] sbb	edi, edi                                                  ; edi = 0x0
[main] [INS] [00018cb7] mov	qword ptr [rsp + 8], r14                                  ; store(0x7f000008b2f8,0x7f000008b46c) -> 6
[main] [INS] [00018cbc] and	edi, 0xfffffffe                                           ; edi = 0x0
[main] [INS] [00018cbf] add	edi, 5                                                    ; edi = 0x5
[main] [INS] [00018cc2] test	r14, r14                                                 ; 0x7f000008b46c vs 0x7f000008b46c
[main] [INS] [00018cc5] cmovne	rax, rdx                                               ; rax = 0x7f000008b470 -> 0
[main] [INS] [00018cc9] mov	dword ptr [rsp + 0x15c], edi                              ; store(0x7f000008b44c,0x5)
[main] [INS] [00018cd0] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008b3e0,0x7f000008b470) -> 0
[main] [INS] [00018cd8] mov	eax, 0xfffffffe                                           ; eax = 0xfffffffe
[main] [INS] [00018cdd] mov	dword ptr [rsp + 0xd0], eax                               ; store(0x7f000008b3c0,0xfffffffe)
[main] [INS] [00018ce4] mov	dword ptr [rsp + 0xe0], eax                               ; store(0x7f000008b3d0,0xfffffffe)
[main] [INS] [00018ceb] nop	dword ptr [rax + rax]
[main] [INS] [00018cf0] mov	ebx, dword ptr [rsp + 0xac]                               ; ebx = 0x0
[main] [INS] [00018cf7] test	ebx, ebx                                                 ; 0x0 vs 0x0
[main] [INS] [00018cf9] je	0x18d0e
[main] [INS] [00018d0e] mov	r11d, dword ptr [rsp + 0x9c]                              ; r11d = 0x0
[main] [INS] [00018d16] test	r11d, r11d                                               ; 0x0 vs 0x0
[main] [INS] [00018d19] je	0x18d53
[main] [INS] [00018d53] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x7f000008b684 vs 0x0
[main] [INS] [00018d5c] je	0x1a162
[main] [INS] [00018d62] mov	ebx, dword ptr [rsp + 0x30]                               ; ebx = 0x4000 -> 24a880
[main] [INS] [00018d66] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [00018d68] mov	r12, qword ptr [rsp + 0x28]                               ; r12 = 0x7f000008b8d3 -> 0
[main] [INS] [00018d6d] lea	rsi, [rsp + 0x194]                                        ; rsi = 0x7f000008b484 -> 0
[main] [INS] [00018d75] mov	dword ptr [rsp + 0x180], 0                                ; store(0x7f000008b470,0x0)
[main] [INS] [00018d80] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b490,0x90000041) -> "(?=a\K)a"
[main] [INS] [00018d88] mov	qword ptr [rsp + 0x60], 0                                 ; store(0x7f000008b350,0x0)
[main] [INS] [00018d91] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b328,0x0)
[main] [INS] [00018d9a] mov	r15, r13                                                  ; r15 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018d9d] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00018d9f] mov	qword ptr [rsp + 0x10], r12                               ; store(0x7f000008b300,0x7f000008b8d3) -> 0
[main] [INS] [00018da4] mov	qword ptr [rsp + 0x18], 0                                 ; store(0x7f000008b308,0x0)
[main] [INS] [00018dad] and	eax, 0x200                                                ; eax = 0x0
[main] [INS] [00018db2] mov	dword ptr [rsp + 0x98], 0                                 ; store(0x7f000008b388,0x0)
[main] [INS] [00018dbd] mov	dword ptr [rsp + 0x20], 0                                 ; store(0x7f000008b310,0x0)
[main] [INS] [00018dc5] sete	al                                                       ; al = 0x1
[main] [INS] [00018dc8] setne	cl                                                      ; cl = 0x0
[main] [INS] [00018dcb] and	ebx, 1                                                    ; ebx = 0x0
[main] [INS] [00018dce] movzx	eax, al                                                 ; eax = 0x1
[main] [INS] [00018dd1] mov	dword ptr [rsp + 0x88], ebx                               ; store(0x7f000008b378,0x0)
[main] [INS] [00018dd8] mov	dword ptr [rsp + 0x90], ecx                               ; store(0x7f000008b380,0x0)
[main] [INS] [00018ddf] mov	dword ptr [rsp + 0xa8], eax                               ; store(0x7f000008b398,0x1)
[main] [INS] [00018de6] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [00018de8] mov	rax, qword ptr [r13 + 0x20]                               ; rax = 0x7f000008b8d0 -> 83
[main] [INS] [00018dec] mov	dword ptr [rsp + 0x8c], 0                                 ; store(0x7f000008b37c,0x0)
[main] [INS] [00018df7] mov	dword ptr [rsp + 0x5c], 0xfffffffe                        ; store(0x7f000008b34c,0xfffffffe)
[main] [INS] [00018dff] mov	r14, r12                                                  ; r14 = 0x7f000008b8d3 -> 0
[main] [INS] [00018e02] mov	dword ptr [rsp + 0x70], 0xfffffffe                        ; store(0x7f000008b360,0xfffffffe)
[main] [INS] [00018e0a] mov	dword ptr [rsp + 0x74], 0                                 ; store(0x7f000008b364,0x0)
[main] [INS] [00018e12] mov	dword ptr [rsp + 0x68], 0                                 ; store(0x7f000008b358,0x0)
[main] [INS] [00018e1a] mov	dword ptr [rsp + 0x40], 0xfffffffe                        ; store(0x7f000008b330,0xfffffffe)
[main] [INS] [00018e22] mov	dword ptr [rsp + 0x34], 0xfffffffe                        ; store(0x7f000008b324,0xfffffffe)
[main] [INS] [00018e2a] mov	dword ptr [rsp + 0x44], 0                                 ; store(0x7f000008b334,0x0)
[main] [INS] [00018e32] mov	dword ptr [rsp + 0x58], 0                                 ; store(0x7f000008b348,0x0)
[main] [INS] [00018e3a] mov	qword ptr [rsp + 0xa0], rsi                               ; store(0x7f000008b390,0x7f000008b484) -> 0
[main] [INS] [00018e42] jmp	0x18ea1                                                   ; jmp(0x18ea1)
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x28
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x28 vs 0x28
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b46c vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00018ee1] lea	rax, [rax + rdx - 0x64]                                   ; rax = 0x7f000008c86c -> 9000004000000000
[main] [INS] [00018ee6] cmp	r14, rax                                                  ; 0x7f000008b8d3 vs 0x7f000008c86c
[main] [INS] [00018ee9] ja	0x1a5be
[main] [INS] [00018eef] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x7f000008b8d3 -> 0
[main] [INS] [00018ef4] cmp	r14, rax                                                  ; 0x7f000008b8d3 vs 0x7f000008b8d3
[main] [INS] [00018ef7] jb	0x19a88
[main] [INS] [00018efd] mov	rsi, r14                                                  ; rsi = 0x7f000008b8d3 -> 0
[main] [INS] [00018f00] mov	rdx, r14                                                  ; rdx = 0x7f000008b8d3 -> 0
[main] [INS] [00018f03] sub	rsi, rax                                                  ; rsi = 0x0
[main] [INS] [00018f06] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 6
[main] [INS] [00018f0b] mov	ecx, dword ptr [rax]                                      ; ecx = 0x6
[main] [INS] [00018f0d] mov	eax, 0x7fffffeb                                           ; eax = 0x7fffffeb
[main] [INS] [00018f12] sub	eax, ecx                                                  ; eax = 0x7fffffe5
[main] [INS] [00018f14] cdqe	
[main] [INS] [00018f16] cmp	rax, rsi                                                  ; 0x7fffffe5 vs 0x0
[main] [INS] [00018f19] jl	0x1a5d6
[main] [INS] [00018f1f] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 6
[main] [INS] [00018f24] add	ecx, esi                                                  ; ecx = 0x6
[main] [INS] [00018f26] add	qword ptr [rip + 0x231802], 1                             ; store(0x24a730,0x1)
[main] [INS] [00018f2e] test	rbx, rbx                                                 ; 0x0 vs 0x0
[main] [INS] [00018f31] mov	dword ptr [rax], ecx                                      ; store(0x7f000008b46c,0x6)
[main] [INS] [00018f33] je	0x19b20
[main] [INS] [00019b20] mov	r14, qword ptr [rsp + 0x28]                               ; r14 = 0x7f000008b8d3 -> 0
[main] [INS] [00019b25] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b300,0x7f000008b8d3) -> 0
[main] [INS] [00019b2a] jmp	0x18f51                                                   ; jmp(0x18f51)
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x28 vs 0x28
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b340,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0xfffffffe
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0xfffffffe vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x28 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x28 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [0001e4a7] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [0001e4a9] je	0x18fe0
[main] [INS] [0001e4af] add	qword ptr [rip + 0x22c371], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001e4b7] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [0001e4bd] je	0x1a223
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x7f000008b8d3,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b328,0x7f000008b8d3) -> ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x7f000008b8d9 -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x0
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x7f000008b8d5,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x0
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x7f000008b8d7,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x7f000008b8d6,0x0)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x28 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x28
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc0b7
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x19577 -> 1a024848b48
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x19577)
[main] [INS] [00019577] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0001957f] lea	rdx, [rax + 1]                                            ; rdx = 0x90000042 -> "?=a\K)ab"
[main] [INS] [00019583] mov	qword ptr [rsp + 0x1a0], rdx                              ; store(0x7f000008b490,0x90000042) -> "?=a\K)ab"
[main] [INS] [0001958b] movzx	edx, byte ptr [rax + 1]                                 ; edx = 0x3f
[main] [INS] [0001958f] cmp	dl, 0x3f                                                  ; 0x3f vs 0x3f
[main] [INS] [00019592] je	0x1a5f6
[main] [INS] [0001a5f6] add	qword ptr [rip + 0x230a12], 1                             ; store(0x24b010,0x1)
[main] [INS] [0001a5fe] cmp	byte ptr [rax + 2], 0x23                                  ; 0x3d vs 0x23
[main] [INS] [0001a602] je	0x1ba0a
[main] [INS] [0001a608] lea	r11, [rax + 2]                                            ; r11 = 0x90000043 -> "=a\K)ab"
[main] [INS] [0001a60c] mov	rbp, qword ptr [r15 + 0x40]                               ; rbp = 0x7f000008b8d0 -> ff76000083
[main] [INS] [0001a610] mov	qword ptr [rsp + 0x1a0], r11                              ; store(0x7f000008b490,0x90000043) -> "=a\K)ab"
[main] [INS] [0001a618] movzx	edx, byte ptr [rax + 2]                                 ; edx = 0x3d
[main] [INS] [0001a61c] mov	rbx, rbp                                                  ; rbx = 0x7f000008b8d0 -> ff76000083
[main] [INS] [0001a61f] sub	rbx, qword ptr [r15 + 0x20]                               ; rbx = 0x0
[main] [INS] [0001a623] lea	ecx, [rdx - 0x21]                                         ; ecx = 0x1c
[main] [INS] [0001a626] mov	qword ptr [rsp + 0x60], rbx                               ; store(0x7f000008b350,0x0)
[main] [INS] [0001a62b] cmp	cl, 0x5b                                                  ; 0x1c vs 0x5b
[main] [INS] [0001a62e] ja	0x1bca5
[main] [INS] [0001a634] lea	rsi, [rip + 0x231c5]                                      ; rsi = 0x3d800 -> fffde4a5fffde878
[main] [INS] [0001a63b] movzx	ecx, cl                                                 ; ecx = 0x1c
[main] [INS] [0001a63e] movsxd	rcx, dword ptr [rsi + rcx*4]                           ; rcx = 0xfffffffffffdeb98
[main] [INS] [0001a642] add	rcx, rsi                                                  ; rcx = 0x1c398 -> 8c87834103c08348
[main] [INS] [0001a645] jmp	rcx                                                       ; jmp(0x1c398)
[main] [INS] [0001c398] add	rax, 3                                                    ; rax = 0x90000044 -> "a\K)ab"
[main] [INS] [0001c39c] add	dword ptr [r15 + 0x8c], 1                                 ; store(0x7f000008b75c,0x1)
[main] [INS] [0001c3a4] add	qword ptr [rip + 0x22eec4], 1                             ; store(0x24b270,0x1)
[main] [INS] [0001c3ac] mov	qword ptr [rsp + 0x1a0], rax                              ; store(0x7f000008b490,0x90000044) -> "a\K)ab"
[main] [INS] [0001c3b4] mov	edi, dword ptr [rsp + 0x30]                               ; edi = 0x4000 -> 24a880
[main] [INS] [0001c3b8] xor	r13d, r13d                                                ; r13d = 0x0
[main] [INS] [0001c3bb] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [0001c3be] mov	ebp, 0x7d                                                 ; ebp = 0x7d
[main] [INS] [0001c3c3] jmp	0x1c0ad                                                   ; jmp(0x1c0ad)
[main] [INS] [0001c0ad] add	qword ptr [rip + 0x22f553], 1                             ; store(0x24b608,0x1)
[main] [INS] [0001c0b5] jmp	0x1961f                                                   ; jmp(0x1961f)
[main] [INS] [0001961f] mov	eax, dword ptr [r15 + 0x88]                               ; eax = 0x0
[main] [INS] [00019626] add	eax, 1                                                    ; eax = 0x1
[main] [INS] [00019629] cmp	eax, 0xfa                                                 ; 0x1 vs 0xfa
[main] [INS] [0001962e] mov	dword ptr [r15 + 0x88], eax                               ; store(0x7f000008b758,0x1)
[main] [INS] [00019635] jg	0x1dba1
[main] [INS] [0001963b] lea	r12d, [rbp - 0x7d]                                        ; r12d = 0x0
[main] [INS] [0001963f] cmp	r12d, 3                                                   ; 0x0 vs 0x3
[main] [INS] [00019643] ja	0x1acea
[main] [INS] [00019649] mov	ebx, dword ptr [r15 + 0xb0]                               ; ebx = 0x0
[main] [INS] [00019650] add	qword ptr [rip + 0x231fe0], 1                             ; store(0x24b638,0x1)
[main] [INS] [00019658] test	ebx, ebx                                                 ; 0x0 vs 0x0
[main] [INS] [0001965a] je	0x1acea
[main] [INS] [0001acea] mov	rax, qword ptr [r15 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76000083
[main] [INS] [0001acee] sub	rax, qword ptr [r15 + 0x20]                               ; rax = 0x0
[main] [INS] [0001acf2] mov	rbx, r14                                                  ; rbx = 0x7f000008b8d9 -> 0
[main] [INS] [0001acf5] add	qword ptr [rip + 0x23094b], 1                             ; store(0x24b648,0x1)
[main] [INS] [0001acfd] mov	qword ptr [rsp + 0x60], rax                               ; store(0x7f000008b350,0x0)
[main] [INS] [0001ad02] jmp	0x19675                                                   ; jmp(0x19675)
[main] [INS] [00019675] mov	byte ptr [r14], bpl                                       ; store(0x7f000008b8d9,0x7d)
[main] [INS] [00019678] mov	eax, dword ptr [r15 + 0x98]                               ; eax = 0x0
[main] [INS] [0001967f] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b46c vs 0x0
[main] [INS] [00019685] mov	qword ptr [rsp + 0x198], r14                              ; store(0x7f000008b488,0x7f000008b8d9) -> 7d
[main] [INS] [0001968d] mov	dword ptr [rsp + 0x180], 0                                ; store(0x7f000008b470,0x0)
[main] [INS] [00019698] mov	dword ptr [rsp + 0x78], eax                               ; store(0x7f000008b368,0x0)
[main] [INS] [0001969c] mov	eax, dword ptr [r15 + 0x70]                               ; eax = 0x0
[main] [INS] [000196a0] mov	dword ptr [rsp + 0xe8], eax                               ; store(0x7f000008b3d8,0x0)
[main] [INS] [000196a7] je	0x1b4a4
[main] [INS] [000196ad] lea	eax, [rbp - 0x7f]                                         ; eax = 0xfffffffe
[main] [INS] [000196b0] cmp	ebp, 0x87                                                 ; 0x7d vs 0x87
[main] [INS] [000196b6] lea	rdx, [rsp + 0x1a0]                                        ; rdx = 0x7f000008b490 -> 90000044
[main] [INS] [000196be] sete	byte ptr [rsp + 0x50]                                    ; mem is (0x0)
[main] [INS] [000196c3] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [000196c6] movzx	ecx, byte ptr [rsp + 0x50]                              ; ecx = 0x0
[main] [INS] [000196cb] cmp	eax, 1                                                    ; 0xfffffffe vs 0x1
[main] [INS] [000196ce] lea	rsi, [rsp + 0x198]                                        ; rsi = 0x7f000008b488 -> 7f000008b8d9
[main] [INS] [000196d6] setbe	r8b                                                     ; r8b = 0x0
[main] [INS] [000196da] sub	rsp, 8                                                    ; rsp = 0x7f000008b2e8 -> 0
[main] [INS] [000196de] push	qword ptr [rsp + 0xf8]                                   ; push(0x0)
[main] [INS] [000196e5] push	r15                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [000196e7] lea	rax, [rsp + 0x1d8]                                        ; rax = 0x7f000008b4b0 -> 0
[main] [INS] [000196ef] push	rax                                                      ; push(0x7f000008b4b0) -> 0
[main] [INS] [000196f0] lea	rax, [rsp + 0x1b0]                                        ; rax = 0x7f000008b480 -> 0
[main] [INS] [000196f8] push	rax                                                      ; push(0x7f000008b480) -> 0
[main] [INS] [000196f9] lea	rax, [rsp + 0x1ac]                                        ; rax = 0x7f000008b474 -> 0
[main] [INS] [00019701] push	rax                                                      ; push(0x7f000008b474) -> 0
[main] [INS] [00019702] push	qword ptr [rsp + 0xd0]                                   ; push(0x0)
[main] [INS] [00019709] lea	rax, [rsp + 0x1c0]                                        ; rax = 0x7f000008b478 -> 0
[main] [INS] [00019711] push	rax                                                      ; push(0x7f000008b478) -> 0
[main] [INS] [00019712] movzx	eax, cl                                                 ; eax = 0x0
[main] [INS] [00019715] add	eax, dword ptr [rsp + 0x2a8]                              ; eax = 0x0
[main] [INS] [0001971c] push	rax                                                      ; push(0x0)
[main] [INS] [0001971d] push	r13                                                      ; push(0x0)
[main] [INS] [0001971f] mov	rcx, qword ptr [rsp + 0x98]                               ; rcx = 0x7f000008b698 -> 0
[main] [INS] [00019727] call	0x18ae0                                                  ; call(0x18ae0)
[main] [INS] [00018ae0] push	r15                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [00018ae2] push	r14                                                      ; push(0x7f000008b8d9) -> 7d
[main] [INS] [00018ae4] push	r13                                                      ; push(0x0)
[main] [INS] [00018ae6] push	r12                                                      ; push(0x0)
[main] [INS] [00018ae8] push	rbp                                                      ; push(0x7d)
[main] [INS] [00018ae9] push	rbx                                                      ; push(0x7f000008b8d9) -> 7d
[main] [INS] [00018aea] sub	rsp, 0x228                                                ; rsp = 0x7f000008b040 -> 0
[main] [INS] [00018af1] mov	rax, qword ptr [rsp + 0x270]                              ; rax = 0x7f000008b478 -> 0
[main] [INS] [00018af9] mov	dword ptr [rsp + 0x9c], r8d                               ; store(0x7f000008b0dc,0x0)
[main] [INS] [00018b01] mov	dword ptr [rsp + 0x30], edi                               ; store(0x7f000008b070,0x4000) -> 24a880
[main] [INS] [00018b05] mov	qword ptr [rsp + 0xc0], rsi                               ; store(0x7f000008b100,0x7f000008b488) -> 7f000008b8d9
[main] [INS] [00018b0d] mov	qword ptr [rsp + 0xb0], rdx                               ; store(0x7f000008b0f0,0x7f000008b490) -> 90000044
[main] [INS] [00018b15] mov	qword ptr [rsp + 0x48], rcx                               ; store(0x7f000008b088,0x7f000008b698) -> 0
[main] [INS] [00018b1a] mov	qword ptr [rsp + 0x138], rax                              ; store(0x7f000008b178,0x7f000008b478) -> 0
[main] [INS] [00018b22] mov	rax, qword ptr [rsp + 0x278]                              ; rax = 0x7f000008b484 -> 8b8d900000000
[main] [INS] [00018b2a] mov	dword ptr [rsp + 0xac], r9d                               ; store(0x7f000008b0ec,0x0)
[main] [INS] [00018b32] mov	rbx, qword ptr [rsp + 0x290]                              ; rbx = 0x7f000008b4b0 -> 0
[main] [INS] [00018b3a] mov	r12, qword ptr [rsp + 0x298]                              ; r12 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018b42] mov	r8, qword ptr [rdx]                                       ; r8 = 0x90000044 -> "a\K)ab"
[main] [INS] [00018b45] mov	qword ptr [rsp + 0x140], rax                              ; store(0x7f000008b180,0x7f000008b484) -> 8b8d900000000
[main] [INS] [00018b4d] mov	rax, qword ptr [rsp + 0x280]                              ; rax = 0x7f000008b474 -> 0
[main] [INS] [00018b55] mov	qword ptr [rsp + 0x148], rax                              ; store(0x7f000008b188,0x7f000008b474) -> 0
[main] [INS] [00018b5d] mov	rax, qword ptr [rsp + 0x288]                              ; rax = 0x7f000008b480 -> 0
[main] [INS] [00018b65] mov	qword ptr [rsp + 0x150], rax                              ; store(0x7f000008b190,0x7f000008b480) -> 0
[main] [INS] [00018b6d] mov	rax, qword ptr [rsp + 0x2a0]                              ; rax = 0x7f000008b470 -> 0
[main] [INS] [00018b75] mov	qword ptr [rsp + 0x80], rax                               ; store(0x7f000008b0c0,0x7f000008b470) -> 0
[main] [INS] [00018b7d] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00018b86] mov	qword ptr [rsp + 0x218], rax                              ; store(0x7f000008b258,0x59424d4f444e4100)
[main] [INS] [00018b8e] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00018b90] mov	rax, qword ptr [rsi]                                      ; rax = 0x7f000008b8d9 -> 7d
[main] [INS] [00018b93] mov	qword ptr [rsp + 0xd8], rax                               ; store(0x7f000008b118,0x7f000008b8d9) -> 7d
[main] [INS] [00018b9b] mov	rax, qword ptr [rip + 0x2375ce]                           ; rax = 0x0
[main] [INS] [00018ba2] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [00018ba5] je	0x18bce
[main] [INS] [00018bce] mov	rax, qword ptr [r12 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76000083
[main] [INS] [00018bd3] mov	qword ptr [rsp + 0x1c0], rbx                              ; store(0x7f000008b200,0x7f000008b4b0) -> 0
[main] [INS] [00018bdb] mov	rbx, qword ptr [rsp + 0xd8]                               ; rbx = 0x7f000008b8d9 -> 7d
[main] [INS] [00018be3] mov	qword ptr [rsp + 0x160], rax                              ; store(0x7f000008b1a0,0x7f000008b8d0) -> ff76000083
[main] [INS] [00018beb] mov	rax, qword ptr [r12 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76000083
[main] [INS] [00018bf0] mov	dword ptr [rsp + 0xfc], 0                                 ; store(0x7f000008b13c,0x0)
[main] [INS] [00018bfb] mov	qword ptr [rsp + 0x1c8], rbx                              ; store(0x7f000008b208,0x7f000008b8d9) -> 7d
[main] [INS] [00018c03] mov	qword ptr [rsp + 0x168], rax                              ; store(0x7f000008b1a8,0x7f000008b8d0) -> ff76000083
[main] [INS] [00018c0b] mov	eax, dword ptr [rsp + 0x260]                              ; eax = 0x0
[main] [INS] [00018c12] add	eax, 6                                                    ; eax = 0x6
[main] [INS] [00018c15] cmp	byte ptr [rbx], 0x85                                      ; 0x7d vs 0x85
[main] [INS] [00018c18] mov	dword ptr [rsp + 0x17c], eax                              ; store(0x7f000008b1bc,0x6)
[main] [INS] [00018c1f] je	0x1aabe
[main] [INS] [00018c25] mov	eax, dword ptr [rsp + 0x260]                              ; eax = 0x0
[main] [INS] [00018c2c] mov	rbx, qword ptr [rsp + 0xd8]                               ; rbx = 0x7f000008b8d9 -> 7d
[main] [INS] [00018c34] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [00018c36] add	qword ptr [rip + 0x232c62], 1                             ; store(0x24b8a0,0x1)
[main] [INS] [00018c3e] lea	rdx, [rsp + 0x17c]                                        ; rdx = 0x7f000008b1bc -> 6
[main] [INS] [00018c46] mov	dword ptr [rsp + 0xf8], 0                                 ; store(0x7f000008b138,0x0)
[main] [INS] [00018c51] mov	dword ptr [rsp + 0xe4], 0                                 ; store(0x7f000008b124,0x0)
[main] [INS] [00018c5c] mov	qword ptr [rsp + 0xc8], 0                                 ; store(0x7f000008b108,0x0)
[main] [INS] [00018c68] mov	r13, r12                                                  ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018c6b] add	eax, 3                                                    ; eax = 0x3
[main] [INS] [00018c6e] mov	word ptr [rbx + 1], bp                                    ; store(0x7f000008b8da,0x0)
[main] [INS] [00018c72] mov	esi, dword ptr [r12 + 0x70]                               ; esi = 0x0
[main] [INS] [00018c77] cdqe	
[main] [INS] [00018c79] mov	qword ptr [rsp + 0xb8], rbx                               ; store(0x7f000008b0f8,0x7f000008b8d9) -> 7d
[main] [INS] [00018c81] add	rax, rbx                                                  ; rax = 0x7f000008b8dc -> 0
[main] [INS] [00018c84] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008b068,0x7f000008b8dc) -> 0
[main] [INS] [00018c89] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00018c8b] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x7f000008b470 vs 0x0
[main] [INS] [00018c94] mov	dword ptr [rsp + 0xd4], esi                               ; store(0x7f000008b114,0x0)
[main] [INS] [00018c9b] mov	dword ptr [rsp + 0x94], esi                               ; store(0x7f000008b0d4,0x0)
[main] [INS] [00018ca2] cmove	rdx, rax                                                ; rdx = 0x7f000008b1bc -> 6
[main] [INS] [00018ca6] cmp	rdx, 1                                                    ; 0x7f000008b1bc vs 0x1
[main] [INS] [00018caa] mov	r14, rdx                                                  ; r14 = 0x7f000008b1bc -> 6
[main] [INS] [00018cad] lea	rdx, [rsp + 0x180]                                        ; rdx = 0x7f000008b1c0 -> 0
[main] [INS] [00018cb5] sbb	edi, edi                                                  ; edi = 0x0
[main] [INS] [00018cb7] mov	qword ptr [rsp + 8], r14                                  ; store(0x7f000008b048,0x7f000008b1bc) -> 6
[main] [INS] [00018cbc] and	edi, 0xfffffffe                                           ; edi = 0x0
[main] [INS] [00018cbf] add	edi, 5                                                    ; edi = 0x5
[main] [INS] [00018cc2] test	r14, r14                                                 ; 0x7f000008b1bc vs 0x7f000008b1bc
[main] [INS] [00018cc5] cmovne	rax, rdx                                               ; rax = 0x7f000008b1c0 -> 0
[main] [INS] [00018cc9] mov	dword ptr [rsp + 0x15c], edi                              ; store(0x7f000008b19c,0x5)
[main] [INS] [00018cd0] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008b130,0x7f000008b1c0) -> 0
[main] [INS] [00018cd8] mov	eax, 0xfffffffe                                           ; eax = 0xfffffffe
[main] [INS] [00018cdd] mov	dword ptr [rsp + 0xd0], eax                               ; store(0x7f000008b110,0xfffffffe)
[main] [INS] [00018ce4] mov	dword ptr [rsp + 0xe0], eax                               ; store(0x7f000008b120,0xfffffffe)
[main] [INS] [00018ceb] nop	dword ptr [rax + rax]
[main] [INS] [00018cf0] mov	ebx, dword ptr [rsp + 0xac]                               ; ebx = 0x0
[main] [INS] [00018cf7] test	ebx, ebx                                                 ; 0x0 vs 0x0
[main] [INS] [00018cf9] je	0x18d0e
[main] [INS] [00018d0e] mov	r11d, dword ptr [rsp + 0x9c]                              ; r11d = 0x0
[main] [INS] [00018d16] test	r11d, r11d                                               ; 0x0 vs 0x0
[main] [INS] [00018d19] je	0x18d53
[main] [INS] [00018d53] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x7f000008b470 vs 0x0
[main] [INS] [00018d5c] je	0x1a162
[main] [INS] [00018d62] mov	ebx, dword ptr [rsp + 0x30]                               ; ebx = 0x4000 -> 24a880
[main] [INS] [00018d66] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [00018d68] mov	r12, qword ptr [rsp + 0x28]                               ; r12 = 0x7f000008b8dc -> 0
[main] [INS] [00018d6d] lea	rsi, [rsp + 0x194]                                        ; rsi = 0x7f000008b1d4 -> 0
[main] [INS] [00018d75] mov	dword ptr [rsp + 0x180], 0                                ; store(0x7f000008b1c0,0x0)
[main] [INS] [00018d80] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b1e0,0x90000044) -> "a\K)ab"
[main] [INS] [00018d88] mov	qword ptr [rsp + 0x60], 0                                 ; store(0x7f000008b0a0,0x0)
[main] [INS] [00018d91] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b078,0x0)
[main] [INS] [00018d9a] mov	r15, r13                                                  ; r15 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018d9d] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00018d9f] mov	qword ptr [rsp + 0x10], r12                               ; store(0x7f000008b050,0x7f000008b8dc) -> 0
[main] [INS] [00018da4] mov	qword ptr [rsp + 0x18], 0                                 ; store(0x7f000008b058,0x0)
[main] [INS] [00018dad] and	eax, 0x200                                                ; eax = 0x0
[main] [INS] [00018db2] mov	dword ptr [rsp + 0x98], 0                                 ; store(0x7f000008b0d8,0x0)
[main] [INS] [00018dbd] mov	dword ptr [rsp + 0x20], 0                                 ; store(0x7f000008b060,0x0)
[main] [INS] [00018dc5] sete	al                                                       ; al = 0x1
[main] [INS] [00018dc8] setne	cl                                                      ; cl = 0x0
[main] [INS] [00018dcb] and	ebx, 1                                                    ; ebx = 0x0
[main] [INS] [00018dce] movzx	eax, al                                                 ; eax = 0x1
[main] [INS] [00018dd1] mov	dword ptr [rsp + 0x88], ebx                               ; store(0x7f000008b0c8,0x0)
[main] [INS] [00018dd8] mov	dword ptr [rsp + 0x90], ecx                               ; store(0x7f000008b0d0,0x0)
[main] [INS] [00018ddf] mov	dword ptr [rsp + 0xa8], eax                               ; store(0x7f000008b0e8,0x1)
[main] [INS] [00018de6] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [00018de8] mov	rax, qword ptr [r13 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76000083
[main] [INS] [00018dec] mov	dword ptr [rsp + 0x8c], 0                                 ; store(0x7f000008b0cc,0x0)
[main] [INS] [00018df7] mov	dword ptr [rsp + 0x5c], 0xfffffffe                        ; store(0x7f000008b09c,0xfffffffe)
[main] [INS] [00018dff] mov	r14, r12                                                  ; r14 = 0x7f000008b8dc -> 0
[main] [INS] [00018e02] mov	dword ptr [rsp + 0x70], 0xfffffffe                        ; store(0x7f000008b0b0,0xfffffffe)
[main] [INS] [00018e0a] mov	dword ptr [rsp + 0x74], 0                                 ; store(0x7f000008b0b4,0x0)
[main] [INS] [00018e12] mov	dword ptr [rsp + 0x68], 0                                 ; store(0x7f000008b0a8,0x0)
[main] [INS] [00018e1a] mov	dword ptr [rsp + 0x40], 0xfffffffe                        ; store(0x7f000008b080,0xfffffffe)
[main] [INS] [00018e22] mov	dword ptr [rsp + 0x34], 0xfffffffe                        ; store(0x7f000008b074,0xfffffffe)
[main] [INS] [00018e2a] mov	dword ptr [rsp + 0x44], 0                                 ; store(0x7f000008b084,0x0)
[main] [INS] [00018e32] mov	dword ptr [rsp + 0x58], 0                                 ; store(0x7f000008b098,0x0)
[main] [INS] [00018e3a] mov	qword ptr [rsp + 0xa0], rsi                               ; store(0x7f000008b0e0,0x7f000008b1d4) -> 0
[main] [INS] [00018e42] jmp	0x18ea1                                                   ; jmp(0x18ea1)
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x61
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x61 vs 0x61
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b1bc vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00018ee1] lea	rax, [rax + rdx - 0x64]                                   ; rax = 0x7f000008c86c -> 9000004000000000
[main] [INS] [00018ee6] cmp	r14, rax                                                  ; 0x7f000008b8dc vs 0x7f000008c86c
[main] [INS] [00018ee9] ja	0x1a5be
[main] [INS] [00018eef] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x7f000008b8dc -> 0
[main] [INS] [00018ef4] cmp	r14, rax                                                  ; 0x7f000008b8dc vs 0x7f000008b8dc
[main] [INS] [00018ef7] jb	0x19a88
[main] [INS] [00018efd] mov	rsi, r14                                                  ; rsi = 0x7f000008b8dc -> 0
[main] [INS] [00018f00] mov	rdx, r14                                                  ; rdx = 0x7f000008b8dc -> 0
[main] [INS] [00018f03] sub	rsi, rax                                                  ; rsi = 0x0
[main] [INS] [00018f06] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b1bc -> 6
[main] [INS] [00018f0b] mov	ecx, dword ptr [rax]                                      ; ecx = 0x6
[main] [INS] [00018f0d] mov	eax, 0x7fffffeb                                           ; eax = 0x7fffffeb
[main] [INS] [00018f12] sub	eax, ecx                                                  ; eax = 0x7fffffe5
[main] [INS] [00018f14] cdqe	
[main] [INS] [00018f16] cmp	rax, rsi                                                  ; 0x7fffffe5 vs 0x0
[main] [INS] [00018f19] jl	0x1a5d6
[main] [INS] [00018f1f] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b1bc -> 6
[main] [INS] [00018f24] add	ecx, esi                                                  ; ecx = 0x6
[main] [INS] [00018f26] add	qword ptr [rip + 0x231802], 1                             ; store(0x24a730,0x1)
[main] [INS] [00018f2e] test	rbx, rbx                                                 ; 0x0 vs 0x0
[main] [INS] [00018f31] mov	dword ptr [rax], ecx                                      ; store(0x7f000008b1bc,0x6)
[main] [INS] [00018f33] je	0x19b20
[main] [INS] [00019b20] mov	r14, qword ptr [rsp + 0x28]                               ; r14 = 0x7f000008b8dc -> 0
[main] [INS] [00019b25] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b050,0x7f000008b8dc) -> 0
[main] [INS] [00019b2a] jmp	0x18f51                                                   ; jmp(0x18f51)
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x61 vs 0x61
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b090,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0x37
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0x37 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x61 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x61 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [0001e4a7] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [0001e4a9] je	0x18fe0
[main] [INS] [0001e4af] add	qword ptr [rip + 0x22c371], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001e4b7] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [0001e4bd] je	0x1a223
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000044 -> "a\K)ab"
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x7f000008b8dc,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b078,0x7f000008b8dc) -> ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x7f000008b8e2 -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000044 -> "a\K)ab"
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x3
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x7f000008b8de,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x3
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x7f000008b8e0,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x7f000008b8df,0x3)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x61 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x61
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc4ee
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x199ae -> 4cea89440dfd8041
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x199ae)
[main] [INS] [000199ae] cmp	r13b, 0xd                                                 ; 0x61 vs 0xd
[main] [INS] [000199b2] mov	edx, r13d                                                 ; edx = 0x61
[main] [INS] [000199b5] mov	rbx, r14                                                  ; rbx = 0x7f000008b8e2 -> 0
[main] [INS] [000199b8] sete	al                                                       ; al = 0x0
[main] [INS] [000199bb] cmp	r13b, 0xa                                                 ; 0x61 vs 0xa
[main] [INS] [000199bf] sete	r12b                                                     ; r12b = 0x0
[main] [INS] [000199c3] or	r12d, eax                                                  ; r12d = 0x9b900 -> 61c0000000000000
[main] [INS] [000199c6] nop	word ptr cs:[rax + rax]                                   ; mem is (0x1824) -> 0
[main] [INS] [000199d0] add	qword ptr [rip + 0x231e50], 1                             ; store(0x24b828,0x1)
[main] [INS] [000199d8] mov	rax, qword ptr [r15 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76000083
[main] [INS] [000199dc] sub	rax, qword ptr [r15 + 0x20]                               ; rax = 0x0
[main] [INS] [000199e0] test	byte ptr [rsp + 0x30], 1                                 ; 0x0 vs 0x1
[main] [INS] [000199e5] mov	qword ptr [rsp + 0x60], rax                               ; store(0x7f000008b0a0,0x0)
[main] [INS] [000199ea] mov	eax, 0x1e                                                 ; eax = 0x1e
[main] [INS] [000199ef] jne	0x199fe
[main] [INS] [000199f1] add	qword ptr [rip + 0x231e37], 1                             ; store(0x24b830,0x1)
[main] [INS] [000199f9] mov	eax, 0x1d                                                 ; eax = 0x1d
[main] [INS] [000199fe] add	qword ptr [rip + 0x231e32], 1                             ; store(0x24b838,0x1)
[main] [INS] [00019a06] test	r12b, r12b                                               ; 0x0 vs 0x0
[main] [INS] [00019a09] mov	byte ptr [rbx], al                                        ; store(0x7f000008b8e2,0x1d)
[main] [INS] [00019a0b] lea	r14, [rbx + 2]                                            ; r14 = 0x7f000008b8e4 -> 0
[main] [INS] [00019a0f] mov	byte ptr [rbx + 1], dl                                    ; store(0x7f000008b8e3,0x61)
[main] [INS] [00019a12] je	0x19a27
[main] [INS] [00019a27] cmp	dword ptr [rsp + 0x34], -2                                ; 0xfffffffe vs 0x-2
[main] [INS] [00019a2c] je	0x19ea0
[main] [INS] [00019ea0] movzx	eax, dl                                                 ; eax = 0x61
[main] [INS] [00019ea3] add	qword ptr [rip + 0x23199d], 1                             ; store(0x24b848,0x1)
[main] [INS] [00019eab] mov	r8, qword ptr [rsp + 0x1a0]                               ; r8 = 0x90000044 -> "a\K)ab"
[main] [INS] [00019eb3] mov	dword ptr [rsp + 0x58], eax                               ; store(0x7f000008b098,0x61)
[main] [INS] [00019eb7] mov	eax, dword ptr [rsp + 0x40]                               ; eax = 0xfffffffe
[main] [INS] [00019ebb] mov	dword ptr [rsp + 0x5c], 0xffffffff                        ; store(0x7f000008b09c,0xffffffff)
[main] [INS] [00019ec3] mov	dword ptr [rsp + 0x70], eax                               ; store(0x7f000008b0b0,0xfffffffe)
[main] [INS] [00019ec7] mov	eax, dword ptr [rsp + 0x44]                               ; eax = 0x0
[main] [INS] [00019ecb] mov	dword ptr [rsp + 0x68], eax                               ; store(0x7f000008b0a8,0x0)
[main] [INS] [00019ecf] mov	eax, dword ptr [rsp + 0x88]                               ; eax = 0x0
[main] [INS] [00019ed6] mov	dword ptr [rsp + 0x34], eax                               ; store(0x7f000008b074,0x0)
[main] [INS] [00019eda] jmp	0x194f2                                                   ; jmp(0x194f2)
[main] [INS] [000194f2] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76000083
[main] [INS] [000194f6] jmp	0x18e8d                                                   ; jmp(0x18e8d)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x90000045 -> "\K)ab"
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b1e0,0x90000045) -> "\K)ab"
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x5c
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x5c vs 0x5c
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b1bc vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00018ee1] lea	rax, [rax + rdx - 0x64]                                   ; rax = 0x7f000008c86c -> 9000004000000000
[main] [INS] [00018ee6] cmp	r14, rax                                                  ; 0x7f000008b8e4 vs 0x7f000008c86c
[main] [INS] [00018ee9] ja	0x1a5be
[main] [INS] [00018eef] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x7f000008b8dc -> 611d00000300ff76
[main] [INS] [00018ef4] cmp	r14, rax                                                  ; 0x7f000008b8e4 vs 0x7f000008b8dc
[main] [INS] [00018ef7] jb	0x19a88
[main] [INS] [00018efd] mov	rsi, r14                                                  ; rsi = 0x7f000008b8e4 -> 0
[main] [INS] [00018f00] mov	rdx, r14                                                  ; rdx = 0x7f000008b8e4 -> 0
[main] [INS] [00018f03] sub	rsi, rax                                                  ; rsi = 0x8
[main] [INS] [00018f06] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b1bc -> 6
[main] [INS] [00018f0b] mov	ecx, dword ptr [rax]                                      ; ecx = 0x6
[main] [INS] [00018f0d] mov	eax, 0x7fffffeb                                           ; eax = 0x7fffffeb
[main] [INS] [00018f12] sub	eax, ecx                                                  ; eax = 0x7fffffe5
[main] [INS] [00018f14] cdqe	
[main] [INS] [00018f16] cmp	rax, rsi                                                  ; 0x7fffffe5 vs 0x8
[main] [INS] [00018f19] jl	0x1a5d6
[main] [INS] [00018f1f] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b1bc -> 6
[main] [INS] [00018f24] add	ecx, esi                                                  ; ecx = 0xe
[main] [INS] [00018f26] add	qword ptr [rip + 0x231802], 1                             ; store(0x24a730,0x1)
[main] [INS] [00018f2e] test	rbx, rbx                                                 ; 0x7f000008b8e2 vs 0x7f000008b8e2
[main] [INS] [00018f31] mov	dword ptr [rax], ecx                                      ; store(0x7f000008b1bc,0xe)
[main] [INS] [00018f33] je	0x19b20
[main] [INS] [00018f39] add	qword ptr [rip + 0x2317ff], 1                             ; store(0x24a740,0x1)
[main] [INS] [00018f41] cmp	rbx, qword ptr [rsp + 0x28]                               ; 0x7f000008b8e2 vs 0x7f000008b8dc
[main] [INS] [00018f46] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b050,0x7f000008b8e4) -> 0
[main] [INS] [00018f4b] ja	0x19d10
[main] [INS] [00019d10] mov	rbp, qword ptr [rsp + 0x28]                               ; rbp = 0x7f000008b8dc -> 611d00000300ff76
[main] [INS] [00019d15] sub	rdx, rbx                                                  ; rdx = 0x2
[main] [INS] [00019d18] mov	rsi, rbx                                                  ; rsi = 0x7f000008b8e2 -> 611d
[main] [INS] [00019d1b] sub	rbx, rbp                                                  ; rbx = 0x6
[main] [INS] [00019d1e] mov	rdi, rbp                                                  ; rdi = 0x7f000008b8dc -> 611d00000300ff76
[main] [INS] [00019d21] sub	r14, rbx                                                  ; r14 = 0x7f000008b8de -> 611d00000300
[main] [INS] [00019d24] mov	rbx, rbp                                                  ; rbx = 0x7f000008b8dc -> 611d00000300ff76
[main] [INS] [00019d27] call	0x5860                                                   ; call(0x5860)
[main] [INS] [00005860] jmp	qword ptr [rip + 0x23f70a]                                ; jmp(0x3c1120)
[main] [INS] [003c1120] mov	rax, rdi                                                  ; rax = 0x7f000008b8dc -> 611d00000300ff76
[main] [INS] [003c1123] cmp	rdi, rsi                                                  ; 0x7f000008b8dc vs 0x7f000008b8e2
[main] [INS] [003c1126] jb	0x3c1136
[main] [INS] [003c1136] cmp	rdx, 0x4f                                                 ; 0x2 vs 0x4f
[main] [INS] [003c113a] lea	r11, [rip + 0x4df3f]                                      ; r11 = 0x40f080 -> fffb3cf0fffb3b28
[main] [INS] [003c1141] ja	0x3c1160
[main] [INS] [003c1143] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb3ed0
[main] [INS] [003c1147] add	rsi, rdx                                                  ; rsi = 0x7f000008b8e4 -> 0
[main] [INS] [003c114a] add	rdi, rdx                                                  ; rdi = 0x7f000008b8de -> 611d00000300
[main] [INS] [003c114d] add	r9, r11                                                   ; r9 = 0x3c2f50 -> fe578966fe568b66
[main] [INS] [003c1150] jmp	r9                                                        ; jmp(0x3c2f50)
[main] [INS] [003c2f50] mov	dx, word ptr [rsi - 2]                                    ; dx = 0x611d -> 48b48db31000000
[main] [INS] [003c2f54] mov	word ptr [rdi - 2], dx                                    ; store(0x7f000008b8dc,0x611d) -> 48b48db31000000
[main] [INS] [003c2f58] ret	
[main] [INS] [00019d2c] add	qword ptr [rip + 0x230a14], 1                             ; store(0x24a748,0x1)
[main] [INS] [00019d34] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b050,0x7f000008b8de) -> 611d00000300
[main] [INS] [00019d39] jmp	0x18f51                                                   ; jmp(0x18f51)
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x5c vs 0x5c
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b090,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0x32
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0x32 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x5c vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x5c vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x7f000008b8dc vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0x0
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xffffffff
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b1bc vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001a525] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b078,0x0)
[main] [INS] [0001a52e] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b0cc,0xffffffff)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000045 -> "\K)ab"
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x7f000008b8de,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b078,0x7f000008b8de) -> 611d0000ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x7f000008b8e4 -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000045 -> "\K)ab"
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x4
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x7f000008b8e0,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x4
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x7f000008b8e2,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x7f000008b8e1,0x4)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x5c vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x5c
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdbce0
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x191a0 -> 848b4848246c8b48
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x191a0)
[main] [INS] [000191a0] mov	rbp, qword ptr [rsp + 0x48]                               ; rbp = 0x7f000008b698 -> 0
[main] [INS] [000191a5] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000045 -> "\K)ab"
[main] [INS] [000191ad] lea	rsi, [rsp + 0x18c]                                        ; rsi = 0x7f000008b1cc -> 0
[main] [INS] [000191b5] mov	ecx, dword ptr [r15 + 0x70]                               ; ecx = 0x0
[main] [INS] [000191b9] mov	r8d, dword ptr [rsp + 0x30]                               ; r8d = 0x4000 -> 24a880
[main] [INS] [000191be] lea	rdi, [rsp + 0x1a0]                                        ; rdi = 0x7f000008b1e0 -> 90000045
[main] [INS] [000191c6] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [000191c9] add	qword ptr [rip + 0x231667], 1                             ; store(0x24a838,0x1)
[main] [INS] [000191d1] mov	rdx, rbp                                                  ; rdx = 0x7f000008b698 -> 0
[main] [INS] [000191d4] mov	qword ptr [rsp + 0x1a8], rax                              ; store(0x7f000008b1e8,0x90000045) -> "\K)ab"
[main] [INS] [000191dc] call	0x110c0                                                  ; call(0x110c0)
[main] [INS] [000110c0] push	r15                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [000110c2] push	r14                                                      ; push(0x7f000008b8e4) -> 0
[main] [INS] [000110c4] push	r13                                                      ; push(0x5c)
[main] [INS] [000110c6] push	r12                                                      ; push(0x9b900) -> 61c0000000000000
[main] [INS] [000110c8] push	rbp                                                      ; push(0x7f000008b698) -> 0
[main] [INS] [000110c9] push	rbx                                                      ; push(0x7f000008b8dc) -> 400ff76611d
[main] [INS] [000110ca] mov	rbx, rdi                                                  ; rbx = 0x7f000008b1e0 -> 90000045
[main] [INS] [000110cd] sub	rsp, 0x48                                                 ; rsp = 0x7f000008afc0 -> 0
[main] [INS] [000110d1] mov	rax, qword ptr [rdi]                                      ; rax = 0x90000045 -> "\K)ab"
[main] [INS] [000110d4] movzx	r10d, byte ptr [rax + 1]                                ; r10d = 0x4b
[main] [INS] [000110d9] lea	rbp, [rax + 1]                                            ; rbp = 0x90000046 -> "K)ab"
[main] [INS] [000110dd] test	r10d, r10d                                               ; 0x4b vs 0x4b
[main] [INS] [000110e0] jne	0x11118
[main] [INS] [00011118] lea	edi, [r10 - 0x30]                                         ; edi = 0x1b
[main] [INS] [0001111c] add	qword ptr [rip + 0x238a3c], 1                             ; store(0x249b60,0x1)
[main] [INS] [00011124] cmp	edi, 0x4a                                                 ; 0x1b vs 0x4a
[main] [INS] [00011127] jbe	0x11140
[main] [INS] [00011140] lea	r12, [rip + 0x2dbf9]                                      ; r12 = 0x3ed40 -> 0
[main] [INS] [00011147] mov	r11d, edi                                                 ; r11d = 0x1b
[main] [INS] [0001114a] movsx	r11d, word ptr [r12 + r11*2]                            ; r11d = 0xfffffffd
[main] [INS] [0001114f] cmp	r11d, 0                                                   ; 0xfffffffd vs 0x0
[main] [INS] [00011153] je	0x11170
[main] [INS] [00011155] jle	0x11680
[main] [INS] [00011680] add	qword ptr [rip + 0x2384f0], 1                             ; store(0x249b78,0x1)
[main] [INS] [00011688] neg	r11d                                                      ; r11d = 0x3
[main] [INS] [0001168b] cmp	r11d, 0xc                                                 ; 0x3 vs 0xc
[main] [INS] [0001168f] jne	0x11c84
[main] [INS] [00011c84] and	r8d, 0x20000000                                           ; r8d = 0x0
[main] [INS] [00011c8b] je	0x110fc
[main] [INS] [000110fc] mov	qword ptr [rbx], rbp                                      ; store(0x7f000008b1e0,0x90000046) -> "K)ab"
[main] [INS] [000110ff] mov	eax, r11d                                                 ; eax = 0x3
[main] [INS] [00011102] mov	dword ptr [rsi], r10d                                     ; store(0x7f000008b1cc,0x4b)
[main] [INS] [00011105] add	rsp, 0x48                                                 ; rsp = 0x7f000008b008 -> 7f000008b8dc
[main] [INS] [00011109] pop	rbx                                                       ; rbx = 0x7f000008b8dc -> 400ff76611d
[main] [INS] [0001110a] pop	rbp                                                       ; rbp = 0x7f000008b698 -> 0
[main] [INS] [0001110b] pop	r12                                                       ; r12 = 0x9b900 -> 61c0000000000000
[main] [INS] [0001110d] pop	r13                                                       ; r13 = 0x5c
[main] [INS] [0001110f] pop	r14                                                       ; r14 = 0x7f000008b8e4 -> 0
[main] [INS] [00011111] pop	r15                                                       ; r15 = 0x7f000008b6d0 -> "@"
[main] [INS] [00011113] ret	
[main] [INS] [000191e1] mov	ebp, dword ptr [rbp]                                      ; ebp = 0x0
[main] [INS] [000191e4] add	qword ptr [rip + 0x232524], 1                             ; store(0x24b710,0x1)
[main] [INS] [000191ec] test	ebp, ebp                                                 ; 0x0 vs 0x0
[main] [INS] [000191ee] jne	0x1c90d
[main] [INS] [000191f4] test	eax, eax                                                 ; 0x3 vs 0x3
[main] [INS] [000191f6] je	0x1b6bb
[main] [INS] [000191fc] cmp	eax, 0x1a                                                 ; 0x3 vs 0x1a
[main] [INS] [000191ff] je	0x1b6e2
[main] [INS] [00019205] cmp	eax, 0x19                                                 ; 0x3 vs 0x19
[main] [INS] [00019208] je	0x1b72e
[main] [INS] [0001920e] cmp	dword ptr [rsp + 0x34], -2                                ; 0x0 vs 0x-2
[main] [INS] [00019213] jne	0x1923f
[main] [INS] [0001923f] cmp	eax, 0x1b                                                 ; 0x3 vs 0x1b
[main] [INS] [00019242] je	0x1b4d3
[main] [INS] [00019248] cmp	eax, 0x1c                                                 ; 0x3 vs 0x1c
[main] [INS] [0001924b] je	0x1a8d9
[main] [INS] [00019251] test	eax, eax                                                 ; 0x3 vs 0x3
[main] [INS] [00019253] js	0x1c62a
[main] [INS] [00019259] cmp	eax, 0x16                                                 ; 0x3 vs 0x16
[main] [INS] [0001925c] je	0x19274
[main] [INS] [0001925e] cmp	eax, 0xf                                                  ; 0x3 vs 0xf
[main] [INS] [00019261] je	0x19274
[main] [INS] [00019263] add	qword ptr [rip + 0x232575], 1                             ; store(0x24b7e0,0x1)
[main] [INS] [0001926b] cmp	eax, 0x10                                                 ; 0x3 vs 0x10
[main] [INS] [0001926e] jne	0x1b946
[main] [INS] [0001b946] lea	edx, [rax - 4]                                            ; edx = 0xffffffff
[main] [INS] [0001b949] cmp	edx, 1                                                    ; 0xffffffff vs 0x1
[main] [INS] [0001b94c] jbe	0x1c942
[main] [INS] [0001b952] cmp	eax, 1                                                    ; 0x3 vs 0x1
[main] [INS] [0001b955] je	0x1c942
[main] [INS] [0001b95b] lea	edx, [rax - 6]                                            ; edx = 0xfffffffd
[main] [INS] [0001b95e] mov	rbx, r14                                                  ; rbx = 0x7f000008b8e4 -> 0
[main] [INS] [0001b961] cmp	edx, 0x10                                                 ; 0xfffffffd vs 0x10
[main] [INS] [0001b964] jbe	0x1b970
[main] [INS] [0001b966] add	qword ptr [rip + 0x22fe92], 1                             ; store(0x24b800,0x1)
[main] [INS] [0001b96e] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [0001b970] mov	rdx, qword ptr [r15 + 0x40]                               ; rdx = 0x7f000008b8d0 -> ff76000083
[main] [INS] [0001b974] sub	rdx, qword ptr [r15 + 0x20]                               ; rdx = 0x0
[main] [INS] [0001b978] cmp	eax, 0xe                                                  ; 0x3 vs 0xe
[main] [INS] [0001b97b] mov	qword ptr [rsp + 0x60], rdx                               ; store(0x7f000008b0a0,0x0)
[main] [INS] [0001b980] mov	edx, 0xd                                                  ; edx = 0xd
[main] [INS] [0001b985] je	0x1b991
[main] [INS] [0001b987] add	qword ptr [rip + 0x22fe79], 1                             ; store(0x24b808,0x1)
[main] [INS] [0001b98f] mov	edx, eax                                                  ; edx = 0x3
[main] [INS] [0001b991] mov	eax, dword ptr [rsp + 0x34]                               ; eax = 0x0
[main] [INS] [0001b995] add	qword ptr [rip + 0x22fe73], 1                             ; store(0x24b810,0x1)
[main] [INS] [0001b99d] add	r14, 1                                                    ; r14 = 0x7f000008b8e5 -> 0
[main] [INS] [0001b9a1] mov	byte ptr [r14 - 1], dl                                    ; store(0x7f000008b8e4,0x3)
[main] [INS] [0001b9a5] mov	dword ptr [rsp + 0x5c], eax                               ; store(0x7f000008b09c,0x0)
[main] [INS] [0001b9a9] mov	eax, dword ptr [rsp + 0x40]                               ; eax = 0xfffffffe
[main] [INS] [0001b9ad] mov	dword ptr [rsp + 0x70], eax                               ; store(0x7f000008b0b0,0xfffffffe)
[main] [INS] [0001b9b1] mov	eax, dword ptr [rsp + 0x58]                               ; eax = 0x61
[main] [INS] [0001b9b5] mov	dword ptr [rsp + 0x74], eax                               ; store(0x7f000008b0b4,0x61)
[main] [INS] [0001b9b9] mov	eax, dword ptr [rsp + 0x44]                               ; eax = 0x0
[main] [INS] [0001b9bd] mov	dword ptr [rsp + 0x68], eax                               ; store(0x7f000008b0a8,0x0)
[main] [INS] [0001b9c1] add	qword ptr [rip + 0x22fe4f], 1                             ; store(0x24b818,0x1)
[main] [INS] [0001b9c9] mov	r8, qword ptr [rsp + 0x1a0]                               ; r8 = 0x90000046 -> "K)ab"
[main] [INS] [0001b9d1] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76000083
[main] [INS] [0001b9d5] jmp	0x18e85                                                   ; jmp(0x18e85)
[main] [INS] [00018e85] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b860,0x1)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x90000047 -> ")ab"
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b1e0,0x90000047) -> ")ab"
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x29
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x29 vs 0x29
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b1bc vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00018ee1] lea	rax, [rax + rdx - 0x64]                                   ; rax = 0x7f000008c86c -> 9000004000000000
[main] [INS] [00018ee6] cmp	r14, rax                                                  ; 0x7f000008b8e5 vs 0x7f000008c86c
[main] [INS] [00018ee9] ja	0x1a5be
[main] [INS] [00018eef] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x7f000008b8de -> 300000400ff76
[main] [INS] [00018ef4] cmp	r14, rax                                                  ; 0x7f000008b8e5 vs 0x7f000008b8de
[main] [INS] [00018ef7] jb	0x19a88
[main] [INS] [00018efd] mov	rsi, r14                                                  ; rsi = 0x7f000008b8e5 -> 0
[main] [INS] [00018f00] mov	rdx, r14                                                  ; rdx = 0x7f000008b8e5 -> 0
[main] [INS] [00018f03] sub	rsi, rax                                                  ; rsi = 0x7
[main] [INS] [00018f06] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b1bc -> e
[main] [INS] [00018f0b] mov	ecx, dword ptr [rax]                                      ; ecx = 0xe
[main] [INS] [00018f0d] mov	eax, 0x7fffffeb                                           ; eax = 0x7fffffeb
[main] [INS] [00018f12] sub	eax, ecx                                                  ; eax = 0x7fffffdd
[main] [INS] [00018f14] cdqe	
[main] [INS] [00018f16] cmp	rax, rsi                                                  ; 0x7fffffdd vs 0x7
[main] [INS] [00018f19] jl	0x1a5d6
[main] [INS] [00018f1f] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b1bc -> e
[main] [INS] [00018f24] add	ecx, esi                                                  ; ecx = 0x15
[main] [INS] [00018f26] add	qword ptr [rip + 0x231802], 1                             ; store(0x24a730,0x1)
[main] [INS] [00018f2e] test	rbx, rbx                                                 ; 0x0 vs 0x0
[main] [INS] [00018f31] mov	dword ptr [rax], ecx                                      ; store(0x7f000008b1bc,0x15)
[main] [INS] [00018f33] je	0x19b20
[main] [INS] [00019b20] mov	r14, qword ptr [rsp + 0x28]                               ; r14 = 0x7f000008b8dc -> 400ff76611d
[main] [INS] [00019b25] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b050,0x7f000008b8dc) -> 400ff76611d
[main] [INS] [00019b2a] jmp	0x18f51                                                   ; jmp(0x18f51)
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x29 vs 0x29
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b090,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0xffffffff
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0xffffffff vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x29 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x29 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x7f000008b8de vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0xffffffff
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xfffffffe
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b1bc vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001a525] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b078,0x0)
[main] [INS] [0001a52e] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b0cc,0xfffffffe)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000047 -> ")ab"
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x7f000008b8dc,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b078,0x7f000008b8dc) -> 400ff76ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x7f000008b8e2 -> 30000
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000047 -> ")ab"
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x6
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x7f000008b8de,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x6
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x7f000008b8e0,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x7f000008b8df,0x6)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x29 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x29
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc3d7
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x19897 -> f4894d0824448b48
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x19897)
[main] [INS] [00019897] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b1bc -> 15
[main] [INS] [0001989c] mov	r12, r14                                                  ; r12 = 0x7f000008b8e2 -> 30000
[main] [INS] [0001989f] mov	r13, r15                                                  ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [000198a2] mov	r14, qword ptr [rsp + 0x1a0]                              ; r14 = 0x90000047 -> ")ab"
[main] [INS] [000198aa] test	rax, rax                                                 ; 0x7f000008b1bc vs 0x7f000008b1bc
[main] [INS] [000198ad] je	0x19dd6
[main] [INS] [000198b3] mov	edx, dword ptr [rax]                                      ; edx = 0x15
[main] [INS] [000198b5] mov	rcx, r12                                                  ; rcx = 0x7f000008b8e2 -> 30000
[main] [INS] [000198b8] sub	rcx, qword ptr [rsp + 0x10]                               ; rcx = 0x6
[main] [INS] [000198bd] mov	eax, 0x7fffffeb                                           ; eax = 0x7fffffeb
[main] [INS] [000198c2] sub	eax, edx                                                  ; eax = 0x7fffffd6
[main] [INS] [000198c4] cdqe	
[main] [INS] [000198c6] cmp	rax, rcx                                                  ; 0x7fffffd6 vs 0x6
[main] [INS] [000198c9] jge	0x19dc5
[main] [INS] [00019dc5] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b1bc -> 15
[main] [INS] [00019dca] add	qword ptr [rip + 0x230a7e], 1                             ; store(0x24a850,0x1)
[main] [INS] [00019dd2] add	edx, ecx                                                  ; edx = 0x1b
[main] [INS] [00019dd4] mov	dword ptr [rax], edx                                      ; store(0x7f000008b1bc,0x1b)
[main] [INS] [00019dd6] add	qword ptr [rip + 0x230a7a], 1                             ; store(0x24a858,0x1)
[main] [INS] [00019dde] mov	eax, dword ptr [r13 + 0x70]                               ; eax = 0x0
[main] [INS] [00019de2] cmp	eax, dword ptr [rsp + 0x94]                               ; 0x0 vs 0x0
[main] [INS] [00019de9] jbe	0x19dfa
[main] [INS] [00019dfa] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x7f000008b470 vs 0x0
[main] [INS] [00019e03] je	0x1a16f
[main] [INS] [00019e09] cmp	byte ptr [r14], 0x7c                                      ; 0x29 vs 0x7c
[main] [INS] [00019e0d] jne	0x1b747
[main] [INS] [0001b747] mov	r15, r12                                                  ; r15 = 0x7f000008b8e2 -> 30000
[main] [INS] [0001b74a] add	qword ptr [rip + 0x23020e], 1                             ; store(0x24b960,0x1)
[main] [INS] [0001b752] mov	r11, r14                                                  ; r11 = 0x90000047 -> ")ab"
[main] [INS] [0001b755] lea	rax, [r15 + 3]                                            ; rax = 0x7f000008b8e5 -> 0
[main] [INS] [0001b759] mov	r12, r13                                                  ; r12 = 0x7f000008b6d0 -> "@"
[main] [INS] [0001b75c] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008b068,0x7f000008b8e5) -> 0
[main] [INS] [0001b761] mov	rax, r15                                                  ; rax = 0x7f000008b8e2 -> 30000
[main] [INS] [0001b764] sub	rax, qword ptr [rsp + 0xd8]                               ; rax = 0x9
[main] [INS] [0001b76c] mov	ecx, dword ptr [rsp + 0xfc]                               ; ecx = 0x0
[main] [INS] [0001b773] mov	byte ptr [r15], 0x78                                      ; store(0x7f000008b8e2,0x78)
[main] [INS] [0001b777] mov	edx, eax                                                  ; edx = 0x9
[main] [INS] [0001b779] mov	byte ptr [r15 + 2], al                                    ; store(0x7f000008b8e4,0x9)
[main] [INS] [0001b77d] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001b780] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [0001b782] mov	byte ptr [r15 + 1], dl                                    ; store(0x7f000008b8e3,0x0)
[main] [INS] [0001b786] je	0x1b83f
[main] [INS] [0001b83f] mov	eax, dword ptr [rsp + 0x94]                               ; eax = 0x0
[main] [INS] [0001b846] mov	rbx, qword ptr [rsp + 0x28]                               ; rbx = 0x7f000008b8e5 -> 0
[main] [INS] [0001b84b] mov	dword ptr [r12 + 0x70], eax                               ; store(0x7f000008b740,0x0)
[main] [INS] [0001b850] mov	rax, qword ptr [rsp + 0xc0]                               ; rax = 0x7f000008b488 -> 7f000008b8d9
[main] [INS] [0001b858] mov	qword ptr [rax], rbx                                      ; store(0x7f000008b488,0x7f000008b8e5) -> 0
[main] [INS] [0001b85b] mov	rax, qword ptr [rsp + 0xb0]                               ; rax = 0x7f000008b490 -> 90000044
[main] [INS] [0001b863] mov	ebx, dword ptr [rsp + 0xe4]                               ; ebx = 0x0
[main] [INS] [0001b86a] mov	qword ptr [rax], r11                                      ; store(0x7f000008b490,0x90000047) -> ")ab"
[main] [INS] [0001b86d] mov	rax, qword ptr [rsp + 0x138]                              ; rax = 0x7f000008b478 -> 0
[main] [INS] [0001b875] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b478,0x0)
[main] [INS] [0001b877] mov	rax, qword ptr [rsp + 0x140]                              ; rax = 0x7f000008b484 -> 8b8e500000000
[main] [INS] [0001b87f] mov	ebx, dword ptr [rsp + 0xe0]                               ; ebx = 0xfffffffe
[main] [INS] [0001b886] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b484,0xfffffffe)
[main] [INS] [0001b888] mov	rax, qword ptr [rsp + 0x148]                              ; rax = 0x7f000008b474 -> 0
[main] [INS] [0001b890] mov	ebx, dword ptr [rsp + 0xf8]                               ; ebx = 0x0
[main] [INS] [0001b897] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b474,0x0)
[main] [INS] [0001b899] mov	rax, qword ptr [rsp + 0x150]                              ; rax = 0x7f000008b480 -> fffffffe00000000
[main] [INS] [0001b8a1] mov	ebx, dword ptr [rsp + 0xd0]                               ; ebx = 0xfffffffe
[main] [INS] [0001b8a8] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b480,0xfffffffe)
[main] [INS] [0001b8aa] mov	rbx, qword ptr [rsp + 0x80]                               ; rbx = 0x7f000008b470 -> 0
[main] [INS] [0001b8b2] mov	eax, 1                                                    ; eax = 0x1
[main] [INS] [0001b8b7] test	rbx, rbx                                                 ; 0x7f000008b470 vs 0x7f000008b470
[main] [INS] [0001b8ba] je	0x19905
[main] [INS] [0001b8c0] mov	edx, dword ptr [rbx]                                      ; edx = 0x0
[main] [INS] [0001b8c2] mov	esi, dword ptr [rsp + 0x17c]                              ; esi = 0x1b
[main] [INS] [0001b8c9] mov	ecx, 0x7fffffeb                                           ; ecx = 0x7fffffeb
[main] [INS] [0001b8ce] sub	ecx, edx                                                  ; ecx = 0x7fffffeb
[main] [INS] [0001b8d0] cmp	ecx, esi                                                  ; 0x7fffffeb vs 0x1b
[main] [INS] [0001b8d2] jge	0x1badf
[main] [INS] [0001badf] mov	rbx, qword ptr [rsp + 0x80]                               ; rbx = 0x7f000008b470 -> 0
[main] [INS] [0001bae7] add	edx, esi                                                  ; edx = 0x1b
[main] [INS] [0001bae9] add	qword ptr [rip + 0x22fea7], 1                             ; store(0x24b998,0x1)
[main] [INS] [0001baf1] mov	dword ptr [rbx], edx                                      ; store(0x7f000008b470,0x1b)
[main] [INS] [0001baf3] jmp	0x19905                                                   ; jmp(0x19905)
[main] [INS] [00019905] mov	rbx, qword ptr [rsp + 0x218]                              ; rbx = 0x59424d4f444e4100
[main] [INS] [0001990d] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [00019916] jne	0x1e4a2
[main] [INS] [0001991c] add	rsp, 0x228                                                ; rsp = 0x7f000008b268 -> 7f000008b8d9
[main] [INS] [00019923] pop	rbx                                                       ; rbx = 0x7f000008b8d9 -> 600ff7600007d
[main] [INS] [00019924] pop	rbp                                                       ; rbp = 0x7d
[main] [INS] [00019925] pop	r12                                                       ; r12 = 0x0
[main] [INS] [00019927] pop	r13                                                       ; r13 = 0x0
[main] [INS] [00019929] pop	r14                                                       ; r14 = 0x7f000008b8d9 -> 600ff7600007d
[main] [INS] [0001992b] pop	r15                                                       ; r15 = 0x7f000008b6d0 -> "@"
[main] [INS] [0001992d] ret	
[main] [INS] [0001972c] add	qword ptr [rip + 0x231f24], 1                             ; store(0x24b658,0x1)
[main] [INS] [00019734] add	rsp, 0x50                                                 ; rsp = 0x7f000008b2f0 -> 0
[main] [INS] [00019738] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [0001973a] je	0x1c90d
[main] [INS] [00019740] sub	dword ptr [r15 + 0x88], 1                                 ; store(0x7f000008b758,0x1)
[main] [INS] [00019748] cmp	ebp, 0x81                                                 ; 0x7d vs 0x81
[main] [INS] [0001974e] je	0x1ad07
[main] [INS] [00019754] cmp	r12d, 3                                                   ; 0x0 vs 0x3
[main] [INS] [00019758] jbe	0x1ad2e
[main] [INS] [0001ad2e] sub	dword ptr [r15 + 0x8c], 1                                 ; store(0x7f000008b75c,0x1)
[main] [INS] [0001ad36] add	qword ptr [rip + 0x230932], 1                             ; store(0x24b670,0x1)
[main] [INS] [0001ad3e] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000047 -> ")ab"
[main] [INS] [0001ad46] cmp	byte ptr [rax], 0x29                                      ; 0x29 vs 0x29
[main] [INS] [0001ad49] mov	r8, rax                                                   ; r8 = 0x90000047 -> ")ab"
[main] [INS] [0001ad4c] jne	0x1dd38
[main] [INS] [0001ad52] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b46c vs 0x0
[main] [INS] [0001ad58] je	0x1c3fa
[main] [INS] [0001ad5e] mov	rsi, qword ptr [rsp + 8]                                  ; rsi = 0x7f000008b46c -> 1b00000006
[main] [INS] [0001ad63] mov	edi, dword ptr [rsp + 0x180]                              ; edi = 0x1b
[main] [INS] [0001ad6a] mov	edx, dword ptr [rsi]                                      ; edx = 0x6
[main] [INS] [0001ad6c] lea	ecx, [rdi - 6]                                            ; ecx = 0x15
[main] [INS] [0001ad6f] mov	esi, 0x7fffffeb                                           ; esi = 0x7fffffeb
[main] [INS] [0001ad74] sub	esi, edx                                                  ; esi = 0x7fffffe5
[main] [INS] [0001ad76] cmp	esi, ecx                                                  ; 0x7fffffe5 vs 0x15
[main] [INS] [0001ad78] jl	0x1e511
[main] [INS] [0001ad7e] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 1b00000006
[main] [INS] [0001ad83] add	edx, ecx                                                  ; edx = 0x1b
[main] [INS] [0001ad85] mov	dword ptr [r14 + 1], 0x780300                             ; store(0x7f000008b8da,0x780300)
[main] [INS] [0001ad8d] mov	byte ptr [r14 + 5], 3                                     ; store(0x7f000008b8de,0x3)
[main] [INS] [0001ad92] add	qword ptr [rip + 0x23091e], 1                             ; store(0x24b6b8,0x1)
[main] [INS] [0001ad9a] add	r14, 6                                                    ; r14 = 0x7f000008b8df -> 90078000006
[main] [INS] [0001ad9e] mov	r8, qword ptr [rsp + 0x1a0]                               ; r8 = 0x90000047 -> ")ab"
[main] [INS] [0001ada6] mov	dword ptr [rax], edx                                      ; store(0x7f000008b46c,0x1b)
[main] [INS] [0001ada8] jmp	0x194f2                                                   ; jmp(0x194f2)
[main] [INS] [000194f2] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76000083
[main] [INS] [000194f6] jmp	0x18e8d                                                   ; jmp(0x18e8d)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x90000048 -> a43006261
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b490,0x90000048) -> a43006261
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x61
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x61 vs 0x61
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b46c vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00018ee1] lea	rax, [rax + rdx - 0x64]                                   ; rax = 0x7f000008c86c -> 9000004000000000
[main] [INS] [00018ee6] cmp	r14, rax                                                  ; 0x7f000008b8df vs 0x7f000008c86c
[main] [INS] [00018ee9] ja	0x1a5be
[main] [INS] [00018eef] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x7f000008b8d3 -> 7d00000000ff76
[main] [INS] [00018ef4] cmp	r14, rax                                                  ; 0x7f000008b8df vs 0x7f000008b8d3
[main] [INS] [00018ef7] jb	0x19a88
[main] [INS] [00018efd] mov	rsi, r14                                                  ; rsi = 0x7f000008b8df -> 90078000006
[main] [INS] [00018f00] mov	rdx, r14                                                  ; rdx = 0x7f000008b8df -> 90078000006
[main] [INS] [00018f03] sub	rsi, rax                                                  ; rsi = 0xc
[main] [INS] [00018f06] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 1b0000001b
[main] [INS] [00018f0b] mov	ecx, dword ptr [rax]                                      ; ecx = 0x1b
[main] [INS] [00018f0d] mov	eax, 0x7fffffeb                                           ; eax = 0x7fffffeb
[main] [INS] [00018f12] sub	eax, ecx                                                  ; eax = 0x7fffffd0
[main] [INS] [00018f14] cdqe	
[main] [INS] [00018f16] cmp	rax, rsi                                                  ; 0x7fffffd0 vs 0xc
[main] [INS] [00018f19] jl	0x1a5d6
[main] [INS] [00018f1f] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 1b0000001b
[main] [INS] [00018f24] add	ecx, esi                                                  ; ecx = 0x27
[main] [INS] [00018f26] add	qword ptr [rip + 0x231802], 1                             ; store(0x24a730,0x1)
[main] [INS] [00018f2e] test	rbx, rbx                                                 ; 0x7f000008b8d9 vs 0x7f000008b8d9
[main] [INS] [00018f31] mov	dword ptr [rax], ecx                                      ; store(0x7f000008b46c,0x27)
[main] [INS] [00018f33] je	0x19b20
[main] [INS] [00018f39] add	qword ptr [rip + 0x2317ff], 1                             ; store(0x24a740,0x1)
[main] [INS] [00018f41] cmp	rbx, qword ptr [rsp + 0x28]                               ; 0x7f000008b8d9 vs 0x7f000008b8d3
[main] [INS] [00018f46] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b300,0x7f000008b8df) -> 90078000006
[main] [INS] [00018f4b] ja	0x19d10
[main] [INS] [00019d10] mov	rbp, qword ptr [rsp + 0x28]                               ; rbp = 0x7f000008b8d3 -> 7d00000000ff76
[main] [INS] [00019d15] sub	rdx, rbx                                                  ; rdx = 0x6
[main] [INS] [00019d18] mov	rsi, rbx                                                  ; rsi = 0x7f000008b8d9 -> 603007803007d
[main] [INS] [00019d1b] sub	rbx, rbp                                                  ; rbx = 0x6
[main] [INS] [00019d1e] mov	rdi, rbp                                                  ; rdi = 0x7f000008b8d3 -> 7d00000000ff76
[main] [INS] [00019d21] sub	r14, rbx                                                  ; r14 = 0x7f000008b8d9 -> 603007803007d
[main] [INS] [00019d24] mov	rbx, rbp                                                  ; rbx = 0x7f000008b8d3 -> 7d00000000ff76
[main] [INS] [00019d27] call	0x5860                                                   ; call(0x5860)
[main] [INS] [00005860] jmp	qword ptr [rip + 0x23f70a]                                ; jmp(0x3c1120)
[main] [INS] [003c1120] mov	rax, rdi                                                  ; rax = 0x7f000008b8d3 -> 7d00000000ff76
[main] [INS] [003c1123] cmp	rdi, rsi                                                  ; 0x7f000008b8d3 vs 0x7f000008b8d9
[main] [INS] [003c1126] jb	0x3c1136
[main] [INS] [003c1136] cmp	rdx, 0x4f                                                 ; 0x6 vs 0x4f
[main] [INS] [003c113a] lea	r11, [rip + 0x4df3f]                                      ; r11 = 0x40f080 -> fffb3cf0fffb3b28
[main] [INS] [003c1141] ja	0x3c1160
[main] [INS] [003c1143] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb4690
[main] [INS] [003c1147] add	rsi, rdx                                                  ; rsi = 0x7f000008b8df -> 90078000006
[main] [INS] [003c114a] add	rdi, rdx                                                  ; rdi = 0x7f000008b8d9 -> 603007803007d
[main] [INS] [003c114d] add	r9, r11                                                   ; r9 = 0x3c3710 -> 5789fc4e8bfa568b
[main] [INS] [003c1150] jmp	r9                                                        ; jmp(0x3c3710)
[main] [INS] [003c3710] mov	edx, dword ptr [rsi - 6]                                  ; edx = 0x7803007d
[main] [INS] [003c3713] mov	ecx, dword ptr [rsi - 4]                                  ; ecx = 0x3007803
[main] [INS] [003c3716] mov	dword ptr [rdi - 6], edx                                  ; store(0x7f000008b8d3,0x7803007d)
[main] [INS] [003c3719] mov	dword ptr [rdi - 4], ecx                                  ; store(0x7f000008b8d5,0x3007803)
[main] [INS] [003c371c] ret	
[main] [INS] [00019d2c] add	qword ptr [rip + 0x230a14], 1                             ; store(0x24a748,0x1)
[main] [INS] [00019d34] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b300,0x7f000008b8d9) -> 603007803007d
[main] [INS] [00019d39] jmp	0x18f51                                                   ; jmp(0x18f51)
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x61 vs 0x61
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b340,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0x37
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0x37 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x61 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x61 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x7f000008b8d3 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0x0
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xffffffff
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b46c vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001a525] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b328,0x0)
[main] [INS] [0001a52e] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b37c,0xffffffff)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000048 -> a43006261
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x7f000008b8d9,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b328,0x7f000008b8d9) -> 603007803ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x7f000008b8df -> 90078000006
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000048 -> a43006261
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x7
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x7f000008b8db,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x7
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x7f000008b8dd,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x7f000008b8dc,0x7)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x61 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x61
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc4ee
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x199ae -> 4cea89440dfd8041
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x199ae)
[main] [INS] [000199ae] cmp	r13b, 0xd                                                 ; 0x61 vs 0xd
[main] [INS] [000199b2] mov	edx, r13d                                                 ; edx = 0x61
[main] [INS] [000199b5] mov	rbx, r14                                                  ; rbx = 0x7f000008b8df -> 90078000006
[main] [INS] [000199b8] sete	al                                                       ; al = 0x0
[main] [INS] [000199bb] cmp	r13b, 0xa                                                 ; 0x61 vs 0xa
[main] [INS] [000199bf] sete	r12b                                                     ; r12b = 0x0
[main] [INS] [000199c3] or	r12d, eax                                                  ; r12d = 0x19900 -> 9c8b48c03118894c
[main] [INS] [000199c6] nop	word ptr cs:[rax + rax]                                   ; mem is (0x1824) -> 0
[main] [INS] [000199d0] add	qword ptr [rip + 0x231e50], 1                             ; store(0x24b828,0x1)
[main] [INS] [000199d8] mov	rax, qword ptr [r15 + 0x40]                               ; rax = 0x7f000008b8d0 -> 7803007d000083
[main] [INS] [000199dc] sub	rax, qword ptr [r15 + 0x20]                               ; rax = 0x0
[main] [INS] [000199e0] test	byte ptr [rsp + 0x30], 1                                 ; 0x0 vs 0x1
[main] [INS] [000199e5] mov	qword ptr [rsp + 0x60], rax                               ; store(0x7f000008b350,0x0)
[main] [INS] [000199ea] mov	eax, 0x1e                                                 ; eax = 0x1e
[main] [INS] [000199ef] jne	0x199fe
[main] [INS] [000199f1] add	qword ptr [rip + 0x231e37], 1                             ; store(0x24b830,0x1)
[main] [INS] [000199f9] mov	eax, 0x1d                                                 ; eax = 0x1d
[main] [INS] [000199fe] add	qword ptr [rip + 0x231e32], 1                             ; store(0x24b838,0x1)
[main] [INS] [00019a06] test	r12b, r12b                                               ; 0x0 vs 0x0
[main] [INS] [00019a09] mov	byte ptr [rbx], al                                        ; store(0x7f000008b8df,0x1d)
[main] [INS] [00019a0b] lea	r14, [rbx + 2]                                            ; r14 = 0x7f000008b8e1 -> 9007800
[main] [INS] [00019a0f] mov	byte ptr [rbx + 1], dl                                    ; store(0x7f000008b8e0,0x61)
[main] [INS] [00019a12] je	0x19a27
[main] [INS] [00019a27] cmp	dword ptr [rsp + 0x34], -2                                ; 0xfffffffe vs 0x-2
[main] [INS] [00019a2c] je	0x19ea0
[main] [INS] [00019ea0] movzx	eax, dl                                                 ; eax = 0x61
[main] [INS] [00019ea3] add	qword ptr [rip + 0x23199d], 1                             ; store(0x24b848,0x1)
[main] [INS] [00019eab] mov	r8, qword ptr [rsp + 0x1a0]                               ; r8 = 0x90000048 -> a43006261
[main] [INS] [00019eb3] mov	dword ptr [rsp + 0x58], eax                               ; store(0x7f000008b348,0x61)
[main] [INS] [00019eb7] mov	eax, dword ptr [rsp + 0x40]                               ; eax = 0xfffffffe
[main] [INS] [00019ebb] mov	dword ptr [rsp + 0x5c], 0xffffffff                        ; store(0x7f000008b34c,0xffffffff)
[main] [INS] [00019ec3] mov	dword ptr [rsp + 0x70], eax                               ; store(0x7f000008b360,0xfffffffe)
[main] [INS] [00019ec7] mov	eax, dword ptr [rsp + 0x44]                               ; eax = 0x0
[main] [INS] [00019ecb] mov	dword ptr [rsp + 0x68], eax                               ; store(0x7f000008b358,0x0)
[main] [INS] [00019ecf] mov	eax, dword ptr [rsp + 0x88]                               ; eax = 0x0
[main] [INS] [00019ed6] mov	dword ptr [rsp + 0x34], eax                               ; store(0x7f000008b324,0x0)
[main] [INS] [00019eda] jmp	0x194f2                                                   ; jmp(0x194f2)
[main] [INS] [000194f2] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> 7803007d000083
[main] [INS] [000194f6] jmp	0x18e8d                                                   ; jmp(0x18e8d)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x90000049 -> a430062
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b490,0x90000049) -> a430062
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x62
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x62 vs 0x62
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b46c vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00018ee1] lea	rax, [rax + rdx - 0x64]                                   ; rax = 0x7f000008c86c -> 9000004000000000
[main] [INS] [00018ee6] cmp	r14, rax                                                  ; 0x7f000008b8e1 vs 0x7f000008c86c
[main] [INS] [00018ee9] ja	0x1a5be
[main] [INS] [00018eef] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x7f000008b8d9 -> 611d00000700ff76
[main] [INS] [00018ef4] cmp	r14, rax                                                  ; 0x7f000008b8e1 vs 0x7f000008b8d9
[main] [INS] [00018ef7] jb	0x19a88
[main] [INS] [00018efd] mov	rsi, r14                                                  ; rsi = 0x7f000008b8e1 -> 9007800
[main] [INS] [00018f00] mov	rdx, r14                                                  ; rdx = 0x7f000008b8e1 -> 9007800
[main] [INS] [00018f03] sub	rsi, rax                                                  ; rsi = 0x8
[main] [INS] [00018f06] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 1b00000027
[main] [INS] [00018f0b] mov	ecx, dword ptr [rax]                                      ; ecx = 0x27
[main] [INS] [00018f0d] mov	eax, 0x7fffffeb                                           ; eax = 0x7fffffeb
[main] [INS] [00018f12] sub	eax, ecx                                                  ; eax = 0x7fffffc4
[main] [INS] [00018f14] cdqe	
[main] [INS] [00018f16] cmp	rax, rsi                                                  ; 0x7fffffc4 vs 0x8
[main] [INS] [00018f19] jl	0x1a5d6
[main] [INS] [00018f1f] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 1b00000027
[main] [INS] [00018f24] add	ecx, esi                                                  ; ecx = 0x2f
[main] [INS] [00018f26] add	qword ptr [rip + 0x231802], 1                             ; store(0x24a730,0x1)
[main] [INS] [00018f2e] test	rbx, rbx                                                 ; 0x7f000008b8df vs 0x7f000008b8df
[main] [INS] [00018f31] mov	dword ptr [rax], ecx                                      ; store(0x7f000008b46c,0x2f)
[main] [INS] [00018f33] je	0x19b20
[main] [INS] [00018f39] add	qword ptr [rip + 0x2317ff], 1                             ; store(0x24a740,0x1)
[main] [INS] [00018f41] cmp	rbx, qword ptr [rsp + 0x28]                               ; 0x7f000008b8df vs 0x7f000008b8d3
[main] [INS] [00018f46] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b300,0x7f000008b8e1) -> 9007800
[main] [INS] [00018f4b] ja	0x19d10
[main] [INS] [00019d10] mov	rbp, qword ptr [rsp + 0x28]                               ; rbp = 0x7f000008b8d3 -> ff7603007803007d
[main] [INS] [00019d15] sub	rdx, rbx                                                  ; rdx = 0x2
[main] [INS] [00019d18] mov	rsi, rbx                                                  ; rsi = 0x7f000008b8df -> 9007800611d
[main] [INS] [00019d1b] sub	rbx, rbp                                                  ; rbx = 0xc
[main] [INS] [00019d1e] mov	rdi, rbp                                                  ; rdi = 0x7f000008b8d3 -> ff7603007803007d
[main] [INS] [00019d21] sub	r14, rbx                                                  ; r14 = 0x7f000008b8d5 -> 700ff7603007803
[main] [INS] [00019d24] mov	rbx, rbp                                                  ; rbx = 0x7f000008b8d3 -> ff7603007803007d
[main] [INS] [00019d27] call	0x5860                                                   ; call(0x5860)
[main] [INS] [00005860] jmp	qword ptr [rip + 0x23f70a]                                ; jmp(0x3c1120)
[main] [INS] [003c1120] mov	rax, rdi                                                  ; rax = 0x7f000008b8d3 -> ff7603007803007d
[main] [INS] [003c1123] cmp	rdi, rsi                                                  ; 0x7f000008b8d3 vs 0x7f000008b8df
[main] [INS] [003c1126] jb	0x3c1136
[main] [INS] [003c1136] cmp	rdx, 0x4f                                                 ; 0x2 vs 0x4f
[main] [INS] [003c113a] lea	r11, [rip + 0x4df3f]                                      ; r11 = 0x40f080 -> fffb3cf0fffb3b28
[main] [INS] [003c1141] ja	0x3c1160
[main] [INS] [003c1143] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb3ed0
[main] [INS] [003c1147] add	rsi, rdx                                                  ; rsi = 0x7f000008b8e1 -> 9007800
[main] [INS] [003c114a] add	rdi, rdx                                                  ; rdi = 0x7f000008b8d5 -> 700ff7603007803
[main] [INS] [003c114d] add	r9, r11                                                   ; r9 = 0x3c2f50 -> fe578966fe568b66
[main] [INS] [003c1150] jmp	r9                                                        ; jmp(0x3c2f50)
[main] [INS] [003c2f50] mov	dx, word ptr [rsi - 2]                                    ; dx = 0x611d -> 48b48db31000000
[main] [INS] [003c2f54] mov	word ptr [rdi - 2], dx                                    ; store(0x7f000008b8d3,0x611d) -> 48b48db31000000
[main] [INS] [003c2f58] ret	
[main] [INS] [00019d2c] add	qword ptr [rip + 0x230a14], 1                             ; store(0x24a748,0x1)
[main] [INS] [00019d34] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b300,0x7f000008b8d5) -> 700ff7603007803
[main] [INS] [00019d39] jmp	0x18f51                                                   ; jmp(0x18f51)
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x62 vs 0x62
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b340,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0x38
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0x38 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x62 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x62 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x7f000008b8d9 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0xffffffff
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xfffffffe
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b46c vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001a525] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b328,0x0)
[main] [INS] [0001a52e] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b37c,0xfffffffe)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000049 -> a430062
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x7f000008b8d5,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b328,0x7f000008b8d5) -> 700ff760300ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x7f000008b8db -> 7800611d00000700
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000049 -> a430062
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x8
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x7f000008b8d7,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x8
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x7f000008b8d9,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x7f000008b8d8,0x8)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x62 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x62
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc4ee
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x199ae -> 4cea89440dfd8041
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x199ae)
[main] [INS] [000199ae] cmp	r13b, 0xd                                                 ; 0x62 vs 0xd
[main] [INS] [000199b2] mov	edx, r13d                                                 ; edx = 0x62
[main] [INS] [000199b5] mov	rbx, r14                                                  ; rbx = 0x7f000008b8db -> 7800611d00000700
[main] [INS] [000199b8] sete	al                                                       ; al = 0x0
[main] [INS] [000199bb] cmp	r13b, 0xa                                                 ; 0x62 vs 0xa
[main] [INS] [000199bf] sete	r12b                                                     ; r12b = 0x0
[main] [INS] [000199c3] or	r12d, eax                                                  ; r12d = 0x19900 -> 9c8b48c03118894c
[main] [INS] [000199c6] nop	word ptr cs:[rax + rax]                                   ; mem is (0x1824) -> 0
[main] [INS] [000199d0] add	qword ptr [rip + 0x231e50], 1                             ; store(0x24b828,0x1)
[main] [INS] [000199d8] mov	rax, qword ptr [r15 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76611d000083
[main] [INS] [000199dc] sub	rax, qword ptr [r15 + 0x20]                               ; rax = 0x0
[main] [INS] [000199e0] test	byte ptr [rsp + 0x30], 1                                 ; 0x0 vs 0x1
[main] [INS] [000199e5] mov	qword ptr [rsp + 0x60], rax                               ; store(0x7f000008b350,0x0)
[main] [INS] [000199ea] mov	eax, 0x1e                                                 ; eax = 0x1e
[main] [INS] [000199ef] jne	0x199fe
[main] [INS] [000199f1] add	qword ptr [rip + 0x231e37], 1                             ; store(0x24b830,0x1)
[main] [INS] [000199f9] mov	eax, 0x1d                                                 ; eax = 0x1d
[main] [INS] [000199fe] add	qword ptr [rip + 0x231e32], 1                             ; store(0x24b838,0x1)
[main] [INS] [00019a06] test	r12b, r12b                                               ; 0x0 vs 0x0
[main] [INS] [00019a09] mov	byte ptr [rbx], al                                        ; store(0x7f000008b8db,0x1d)
[main] [INS] [00019a0b] lea	r14, [rbx + 2]                                            ; r14 = 0x7f000008b8dd -> 9007800611d0000
[main] [INS] [00019a0f] mov	byte ptr [rbx + 1], dl                                    ; store(0x7f000008b8dc,0x62)
[main] [INS] [00019a12] je	0x19a27
[main] [INS] [00019a27] cmp	dword ptr [rsp + 0x34], -2                                ; 0x0 vs 0x-2
[main] [INS] [00019a2c] je	0x19ea0
[main] [INS] [00019a32] mov	edi, dword ptr [rsp + 0x34]                               ; edi = 0x0
[main] [INS] [00019a36] movzx	eax, byte ptr [rbx + 1]                                 ; eax = 0x62
[main] [INS] [00019a3a] mov	edx, dword ptr [rsp + 0x88]                               ; edx = 0x0
[main] [INS] [00019a41] or	edx, dword ptr [r15 + 0x98]                                ; edx = 0x0
[main] [INS] [00019a48] mov	ecx, dword ptr [rsp + 0x40]                               ; ecx = 0xfffffffe
[main] [INS] [00019a4c] mov	esi, dword ptr [rsp + 0x58]                               ; esi = 0x61
[main] [INS] [00019a50] mov	dword ptr [rsp + 0x5c], edi                               ; store(0x7f000008b34c,0x0)
[main] [INS] [00019a54] mov	edi, dword ptr [rsp + 0x44]                               ; edi = 0x0
[main] [INS] [00019a58] add	qword ptr [rip + 0x231df0], 1                             ; store(0x24b850,0x1)
[main] [INS] [00019a60] mov	r8, qword ptr [rsp + 0x1a0]                               ; r8 = 0x90000049 -> a430062
[main] [INS] [00019a68] mov	dword ptr [rsp + 0x70], ecx                               ; store(0x7f000008b360,0xfffffffe)
[main] [INS] [00019a6c] mov	dword ptr [rsp + 0x74], esi                               ; store(0x7f000008b364,0x61)
[main] [INS] [00019a70] mov	dword ptr [rsp + 0x68], edi                               ; store(0x7f000008b358,0x0)
[main] [INS] [00019a74] mov	dword ptr [rsp + 0x40], edx                               ; store(0x7f000008b330,0x0)
[main] [INS] [00019a78] mov	dword ptr [rsp + 0x44], eax                               ; store(0x7f000008b334,0x62)
[main] [INS] [00019a7c] jmp	0x194f2                                                   ; jmp(0x194f2)
[main] [INS] [000194f2] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76611d000083
[main] [INS] [000194f6] jmp	0x18e8d                                                   ; jmp(0x18e8d)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x9000004a -> a4300
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b490,0x9000004a) -> a4300
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x0
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018eaa] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x0
[main] [INS] [00018eaf] test	rcx, rcx                                                 ; 0x0 vs 0x0
[main] [INS] [00018eb2] je	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b46c vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00018ee1] lea	rax, [rax + rdx - 0x64]                                   ; rax = 0x7f000008c86c -> 9000004000000000
[main] [INS] [00018ee6] cmp	r14, rax                                                  ; 0x7f000008b8dd vs 0x7f000008c86c
[main] [INS] [00018ee9] ja	0x1a5be
[main] [INS] [00018eef] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x7f000008b8d5 -> 621d00000800ff76
[main] [INS] [00018ef4] cmp	r14, rax                                                  ; 0x7f000008b8dd vs 0x7f000008b8d5
[main] [INS] [00018ef7] jb	0x19a88
[main] [INS] [00018efd] mov	rsi, r14                                                  ; rsi = 0x7f000008b8dd -> 9007800611d0000
[main] [INS] [00018f00] mov	rdx, r14                                                  ; rdx = 0x7f000008b8dd -> 9007800611d0000
[main] [INS] [00018f03] sub	rsi, rax                                                  ; rsi = 0x8
[main] [INS] [00018f06] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 1b0000002f
[main] [INS] [00018f0b] mov	ecx, dword ptr [rax]                                      ; ecx = 0x2f
[main] [INS] [00018f0d] mov	eax, 0x7fffffeb                                           ; eax = 0x7fffffeb
[main] [INS] [00018f12] sub	eax, ecx                                                  ; eax = 0x7fffffbc
[main] [INS] [00018f14] cdqe	
[main] [INS] [00018f16] cmp	rax, rsi                                                  ; 0x7fffffbc vs 0x8
[main] [INS] [00018f19] jl	0x1a5d6
[main] [INS] [00018f1f] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 1b0000002f
[main] [INS] [00018f24] add	ecx, esi                                                  ; ecx = 0x37
[main] [INS] [00018f26] add	qword ptr [rip + 0x231802], 1                             ; store(0x24a730,0x1)
[main] [INS] [00018f2e] test	rbx, rbx                                                 ; 0x7f000008b8db vs 0x7f000008b8db
[main] [INS] [00018f31] mov	dword ptr [rax], ecx                                      ; store(0x7f000008b46c,0x37)
[main] [INS] [00018f33] je	0x19b20
[main] [INS] [00018f39] add	qword ptr [rip + 0x2317ff], 1                             ; store(0x24a740,0x1)
[main] [INS] [00018f41] cmp	rbx, qword ptr [rsp + 0x28]                               ; 0x7f000008b8db vs 0x7f000008b8d3
[main] [INS] [00018f46] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b300,0x7f000008b8dd) -> 9007800611d0000
[main] [INS] [00018f4b] ja	0x19d10
[main] [INS] [00019d10] mov	rbp, qword ptr [rsp + 0x28]                               ; rbp = 0x7f000008b8d3 -> 800ff76611d
[main] [INS] [00019d15] sub	rdx, rbx                                                  ; rdx = 0x2
[main] [INS] [00019d18] mov	rsi, rbx                                                  ; rsi = 0x7f000008b8db -> 7800611d0000621d
[main] [INS] [00019d1b] sub	rbx, rbp                                                  ; rbx = 0x8
[main] [INS] [00019d1e] mov	rdi, rbp                                                  ; rdi = 0x7f000008b8d3 -> 800ff76611d
[main] [INS] [00019d21] sub	r14, rbx                                                  ; r14 = 0x7f000008b8d5 -> 621d00000800ff76
[main] [INS] [00019d24] mov	rbx, rbp                                                  ; rbx = 0x7f000008b8d3 -> 800ff76611d
[main] [INS] [00019d27] call	0x5860                                                   ; call(0x5860)
[main] [INS] [00005860] jmp	qword ptr [rip + 0x23f70a]                                ; jmp(0x3c1120)
[main] [INS] [003c1120] mov	rax, rdi                                                  ; rax = 0x7f000008b8d3 -> 800ff76611d
[main] [INS] [003c1123] cmp	rdi, rsi                                                  ; 0x7f000008b8d3 vs 0x7f000008b8db
[main] [INS] [003c1126] jb	0x3c1136
[main] [INS] [003c1136] cmp	rdx, 0x4f                                                 ; 0x2 vs 0x4f
[main] [INS] [003c113a] lea	r11, [rip + 0x4df3f]                                      ; r11 = 0x40f080 -> fffb3cf0fffb3b28
[main] [INS] [003c1141] ja	0x3c1160
[main] [INS] [003c1143] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb3ed0
[main] [INS] [003c1147] add	rsi, rdx                                                  ; rsi = 0x7f000008b8dd -> 9007800611d0000
[main] [INS] [003c114a] add	rdi, rdx                                                  ; rdi = 0x7f000008b8d5 -> 621d00000800ff76
[main] [INS] [003c114d] add	r9, r11                                                   ; r9 = 0x3c2f50 -> fe578966fe568b66
[main] [INS] [003c1150] jmp	r9                                                        ; jmp(0x3c2f50)
[main] [INS] [003c2f50] mov	dx, word ptr [rsi - 2]                                    ; dx = 0x621d -> 480000000abf0024
[main] [INS] [003c2f54] mov	word ptr [rdi - 2], dx                                    ; store(0x7f000008b8d3,0x621d) -> 480000000abf0024
[main] [INS] [003c2f58] ret	
[main] [INS] [00019d2c] add	qword ptr [rip + 0x230a14], 1                             ; store(0x24a748,0x1)
[main] [INS] [00019d34] mov	qword ptr [rsp + 0x10], r14                               ; store(0x7f000008b300,0x7f000008b8d5) -> 621d00000800ff76
[main] [INS] [00019d39] jmp	0x18f51                                                   ; jmp(0x18f51)
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x0
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b340,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0xffffffd6
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0xffffffd6 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x0 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x0 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x7f000008b8d5 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0xfffffffe
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0xfffffffe vs 0xfffffffe
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xfffffffd
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x7f000008b46c vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001a525] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b328,0x0)
[main] [INS] [0001a52e] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b37c,0xfffffffd)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x9000004a -> a4300
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x7f000008b8d5,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b328,0x7f000008b8d5) -> 621d00000800ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x7f000008b8db -> 7800611d0000621d
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x9000004a -> a4300
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x9
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x7f000008b8d7,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x9
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x7f000008b8d9,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x7f000008b8d8,0x9)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x0 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x0
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc3d7
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x19897 -> f4894d0824448b48
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x19897)
[main] [INS] [00019897] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 1b00000037
[main] [INS] [0001989c] mov	r12, r14                                                  ; r12 = 0x7f000008b8db -> 7800611d0000621d
[main] [INS] [0001989f] mov	r13, r15                                                  ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [000198a2] mov	r14, qword ptr [rsp + 0x1a0]                              ; r14 = 0x9000004a -> a4300
[main] [INS] [000198aa] test	rax, rax                                                 ; 0x7f000008b46c vs 0x7f000008b46c
[main] [INS] [000198ad] je	0x19dd6
[main] [INS] [000198b3] mov	edx, dword ptr [rax]                                      ; edx = 0x37
[main] [INS] [000198b5] mov	rcx, r12                                                  ; rcx = 0x7f000008b8db -> 7800611d0000621d
[main] [INS] [000198b8] sub	rcx, qword ptr [rsp + 0x10]                               ; rcx = 0x6
[main] [INS] [000198bd] mov	eax, 0x7fffffeb                                           ; eax = 0x7fffffeb
[main] [INS] [000198c2] sub	eax, edx                                                  ; eax = 0x7fffffb4
[main] [INS] [000198c4] cdqe	
[main] [INS] [000198c6] cmp	rax, rcx                                                  ; 0x7fffffb4 vs 0x6
[main] [INS] [000198c9] jge	0x19dc5
[main] [INS] [00019dc5] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x7f000008b46c -> 1b00000037
[main] [INS] [00019dca] add	qword ptr [rip + 0x230a7e], 1                             ; store(0x24a850,0x1)
[main] [INS] [00019dd2] add	edx, ecx                                                  ; edx = 0x3d
[main] [INS] [00019dd4] mov	dword ptr [rax], edx                                      ; store(0x7f000008b46c,0x3d)
[main] [INS] [00019dd6] add	qword ptr [rip + 0x230a7a], 1                             ; store(0x24a858,0x1)
[main] [INS] [00019dde] mov	eax, dword ptr [r13 + 0x70]                               ; eax = 0x0
[main] [INS] [00019de2] cmp	eax, dword ptr [rsp + 0x94]                               ; 0x0 vs 0x0
[main] [INS] [00019de9] jbe	0x19dfa
[main] [INS] [00019dfa] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x7f000008b684 vs 0x0
[main] [INS] [00019e03] je	0x1a16f
[main] [INS] [00019e09] cmp	byte ptr [r14], 0x7c                                      ; 0x0 vs 0x7c
[main] [INS] [00019e0d] jne	0x1b747
[main] [INS] [0001b747] mov	r15, r12                                                  ; r15 = 0x7f000008b8db -> 7800611d0000621d
[main] [INS] [0001b74a] add	qword ptr [rip + 0x23020e], 1                             ; store(0x24b960,0x1)
[main] [INS] [0001b752] mov	r11, r14                                                  ; r11 = 0x9000004a -> a4300
[main] [INS] [0001b755] lea	rax, [r15 + 3]                                            ; rax = 0x7f000008b8de -> 9007800611d00
[main] [INS] [0001b759] mov	r12, r13                                                  ; r12 = 0x7f000008b6d0 -> "@"
[main] [INS] [0001b75c] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008b318,0x7f000008b8de) -> 9007800611d00
[main] [INS] [0001b761] mov	rax, r15                                                  ; rax = 0x7f000008b8db -> 7800611d0000621d
[main] [INS] [0001b764] sub	rax, qword ptr [rsp + 0xd8]                               ; rax = 0xb
[main] [INS] [0001b76c] mov	ecx, dword ptr [rsp + 0xfc]                               ; ecx = 0x0
[main] [INS] [0001b773] mov	byte ptr [r15], 0x78                                      ; store(0x7f000008b8db,0x78)
[main] [INS] [0001b777] mov	edx, eax                                                  ; edx = 0xb
[main] [INS] [0001b779] mov	byte ptr [r15 + 2], al                                    ; store(0x7f000008b8dd,0xb)
[main] [INS] [0001b77d] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001b780] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [0001b782] mov	byte ptr [r15 + 1], dl                                    ; store(0x7f000008b8dc,0x0)
[main] [INS] [0001b786] je	0x1b83f
[main] [INS] [0001b83f] mov	eax, dword ptr [rsp + 0x94]                               ; eax = 0x0
[main] [INS] [0001b846] mov	rbx, qword ptr [rsp + 0x28]                               ; rbx = 0x7f000008b8de -> 9007800611d00
[main] [INS] [0001b84b] mov	dword ptr [r12 + 0x70], eax                               ; store(0x7f000008b740,0x0)
[main] [INS] [0001b850] mov	rax, qword ptr [rsp + 0xc0]                               ; rax = 0x7f000008b6a0 -> 7f000008b8d0
[main] [INS] [0001b858] mov	qword ptr [rax], rbx                                      ; store(0x7f000008b6a0,0x7f000008b8de) -> 9007800611d00
[main] [INS] [0001b85b] mov	rax, qword ptr [rsp + 0xb0]                               ; rax = 0x7f000008b6a8 -> 90000041
[main] [INS] [0001b863] mov	ebx, dword ptr [rsp + 0xe4]                               ; ebx = 0x0
[main] [INS] [0001b86a] mov	qword ptr [rax], r11                                      ; store(0x7f000008b6a8,0x9000004a) -> a4300
[main] [INS] [0001b86d] mov	rax, qword ptr [rsp + 0x138]                              ; rax = 0x7f000008b690 -> 0
[main] [INS] [0001b875] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b690,0x0)
[main] [INS] [0001b877] mov	rax, qword ptr [rsp + 0x140]                              ; rax = 0x7f000008b688 -> 0
[main] [INS] [0001b87f] mov	ebx, dword ptr [rsp + 0xe0]                               ; ebx = 0xfffffffe
[main] [INS] [0001b886] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b688,0xfffffffe)
[main] [INS] [0001b888] mov	rax, qword ptr [rsp + 0x148]                              ; rax = 0x7f000008b694 -> 0
[main] [INS] [0001b890] mov	ebx, dword ptr [rsp + 0xf8]                               ; ebx = 0x0
[main] [INS] [0001b897] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b694,0x0)
[main] [INS] [0001b899] mov	rax, qword ptr [rsp + 0x150]                              ; rax = 0x7f000008b68c -> 0
[main] [INS] [0001b8a1] mov	ebx, dword ptr [rsp + 0xd0]                               ; ebx = 0xfffffffe
[main] [INS] [0001b8a8] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b68c,0xfffffffe)
[main] [INS] [0001b8aa] mov	rbx, qword ptr [rsp + 0x80]                               ; rbx = 0x7f000008b684 -> fffffffe00000001
[main] [INS] [0001b8b2] mov	eax, 1                                                    ; eax = 0x1
[main] [INS] [0001b8b7] test	rbx, rbx                                                 ; 0x7f000008b684 vs 0x7f000008b684
[main] [INS] [0001b8ba] je	0x19905
[main] [INS] [0001b8c0] mov	edx, dword ptr [rbx]                                      ; edx = 0x1
[main] [INS] [0001b8c2] mov	esi, dword ptr [rsp + 0x17c]                              ; esi = 0x3d
[main] [INS] [0001b8c9] mov	ecx, 0x7fffffeb                                           ; ecx = 0x7fffffeb
[main] [INS] [0001b8ce] sub	ecx, edx                                                  ; ecx = 0x7fffffea
[main] [INS] [0001b8d0] cmp	ecx, esi                                                  ; 0x7fffffea vs 0x3d
[main] [INS] [0001b8d2] jge	0x1badf
[main] [INS] [0001badf] mov	rbx, qword ptr [rsp + 0x80]                               ; rbx = 0x7f000008b684 -> fffffffe00000001
[main] [INS] [0001bae7] add	edx, esi                                                  ; edx = 0x3e
[main] [INS] [0001bae9] add	qword ptr [rip + 0x22fea7], 1                             ; store(0x24b998,0x1)
[main] [INS] [0001baf1] mov	dword ptr [rbx], edx                                      ; store(0x7f000008b684,0x3e)
[main] [INS] [0001baf3] jmp	0x19905                                                   ; jmp(0x19905)
[main] [INS] [00019905] mov	rbx, qword ptr [rsp + 0x218]                              ; rbx = 0x59424d4f444e4100
[main] [INS] [0001990d] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [00019916] jne	0x1e4a2
[main] [INS] [0001991c] add	rsp, 0x228                                                ; rsp = 0x7f000008b518 -> 0
[main] [INS] [00019923] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [00019924] pop	rbp                                                       ; rbp = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [00019925] pop	r12                                                       ; r12 = 0x0
[main] [INS] [00019927] pop	r13                                                       ; r13 = 0x40740 -> 706050403020100
[main] [INS] [00019929] pop	r14                                                       ; r14 = 0x0
[main] [INS] [0001992b] pop	r15                                                       ; r15 = 0x7f000008eb40 -> 0
[main] [INS] [0001992d] ret	
[main] [INS] [0002033a] mov	ecx, dword ptr [rsp + 0x148]                              ; ecx = 0x0
[main] [INS] [00020341] add	rsp, 0x50                                                 ; rsp = 0x7f000008b5a0 -> 0
[main] [INS] [00020345] mov	r11d, dword ptr [rsp + 0x20]                              ; r11d = 0x4000 -> 24a880
[main] [INS] [0002034a] mov	r10, qword ptr [rsp + 0x28]                               ; r10 = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0002034f] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [00020351] je	0x20390
[main] [INS] [00020390] mov	eax, dword ptr [rsp + 0xe4]                               ; eax = 0x3e
[main] [INS] [00020397] cmp	eax, 0x10000                                              ; 0x3e vs 0x10000
[main] [INS] [0002039c] jg	0x21296
[main] [INS] [000203a2] mov	ebx, dword ptr [rsp + 0x190]                              ; ebx = 0x0
[main] [INS] [000203a9] mov	dword ptr [rsp + 0x38], r11d                              ; store(0x7f000008b5d8,0x4000) -> 24a880
[main] [INS] [000203ae] imul	ebx, dword ptr [rsp + 0x194]                             ; ebx = 0x0
[main] [INS] [000203b6] mov	qword ptr [rsp + 0x28], r10                               ; store(0x7f000008b5c8,0x90000041) -> "(?=a\K)a"
[main] [INS] [000203bb] mov	dword ptr [rsp + 0x20], ecx                               ; store(0x7f000008b5c0,0x0)
[main] [INS] [000203bf] add	qword ptr [rip + 0x22ba61], 1                             ; store(0x24be28,0x1)
[main] [INS] [000203c7] add	ebx, eax                                                  ; ebx = 0x3e
[main] [INS] [000203c9] movsxd	rbx, ebx                                               ; rbx = 0x3e
[main] [INS] [000203cc] add	rbx, 0x40                                                 ; rbx = 0x7e
[main] [INS] [000203d0] mov	rdi, rbx                                                  ; rdi = 0x7e
[main] [INS] [000203d3] call	qword ptr [rip + 0x2264b7]                               ; call(0xe910)
[main] [INS] [0000e910] push	rbp                                                      ; push(0x7f000008b8d0) -> ff76621d000083
[main] [INS] [0000e911] push	rbx                                                      ; push(0x7e)
[main] [INS] [0000e912] mov	rbp, rdi                                                  ; rbp = 0x7e
[main] [INS] [0000e915] sub	rsp, 8                                                    ; rsp = 0x7f000008b580 -> 0
[main] [INS] [0000e919] add	qword ptr [rip + 0x238c6f], 1                             ; store(0x247590,0x1)
[main] [INS] [0000e921] call	0x57e0                                                   ; call(0x57e0)
[main] [INS] [0000e926] mov	rbx, rax                                                  ; rbx = 0x9003a000 -> 0
[main] [INS] [0000e929] mov	eax, dword ptr [rip + 0x23aac1]                           ; eax = 0x0
[main] [INS] [0000e92f] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0000e931] je	0xe962
[main] [INS] [0000e962] add	rsp, 8                                                    ; rsp = 0x7f000008b588 -> 7e
[main] [INS] [0000e966] mov	rax, rbx                                                  ; rax = 0x9003a000 -> 0
[main] [INS] [0000e969] pop	rbx                                                       ; rbx = 0x7e
[main] [INS] [0000e96a] pop	rbp                                                       ; rbp = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [0000e96b] ret	
[main] [INS] [000203d9] test	rax, rax                                                 ; 0x9003a000 vs 0x9003a000
[main] [INS] [000203dc] mov	r15, rax                                                  ; r15 = 0x9003a000 -> 0
[main] [INS] [000203df] mov	ecx, dword ptr [rsp + 0x20]                               ; ecx = 0x0
[main] [INS] [000203e3] mov	r10, qword ptr [rsp + 0x28]                               ; r10 = 0x90000041 -> "(?=a\K)a"
[main] [INS] [000203e8] mov	r11d, dword ptr [rsp + 0x38]                              ; r11d = 0x4000 -> 24a880
[main] [INS] [000203ed] je	0x20b80
[main] [INS] [000203f3] mov	dword ptr [rax + 4], ebx                                  ; store(0x9003a004,0x7e)
[main] [INS] [000203f6] mov	dword ptr [rax], 0x50435245                               ; store(0x9003a000,0x50435245)
[main] [INS] [000203fc] lea	rsi, [rip + 0x2033d]                                      ; rsi = 0x40740 -> 706050403020100
[main] [INS] [00020403] mov	eax, dword ptr [rsp + 0x1c0]                              ; eax = 0x4000 -> 24a880
[main] [INS] [0002040a] mov	edx, dword ptr [rsp + 0x190]                              ; edx = 0x0
[main] [INS] [00020411] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [00020413] add	qword ptr [rip + 0x22ba1d], 1                             ; store(0x24be38,0x1)
[main] [INS] [0002041b] mov	ebx, 0x40                                                 ; ebx = 0x40
[main] [INS] [00020420] cmp	r13, rsi                                                  ; 0x40740 vs 0x40740
[main] [INS] [00020423] mov	dword ptr [r15 + 8], eax                                  ; store(0x9003a008,0x4000) -> 24a880
[main] [INS] [00020427] mov	eax, dword ptr [rsp + 0x1c4]                              ; eax = 0x0
[main] [INS] [0002042e] mov	dword ptr [r15 + 0x18], 0                                 ; store(0x9003a018,0x0)
[main] [INS] [00020436] mov	word ptr [r15 + 0x22], bx                                 ; store(0x9003a022,0x40)
[main] [INS] [0002043b] mov	dword ptr [r15 + 0xc], eax                                ; store(0x9003a00c,0x0)
[main] [INS] [0002043f] mov	eax, dword ptr [rsp + 0x60]                               ; eax = 0xffffffff
[main] [INS] [00020443] mov	dword ptr [r15 + 0x10], eax                               ; store(0x9003a010,0xffffffff)
[main] [INS] [00020447] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0xffffffff
[main] [INS] [0002044b] mov	dword ptr [r15 + 0x14], eax                               ; store(0x9003a014,0xffffffff)
[main] [INS] [0002044f] mov	eax, dword ptr [rsp + 0x194]                              ; eax = 0x0
[main] [INS] [00020456] mov	word ptr [r15 + 0x26], dx                                 ; store(0x9003a026,0x0)
[main] [INS] [0002045b] mov	word ptr [r15 + 0x28], bp                                 ; store(0x9003a028,0x0)
[main] [INS] [00020460] mov	word ptr [r15 + 0x24], ax                                 ; store(0x9003a024,0x0)
[main] [INS] [00020465] jne	0x20472
[main] [INS] [00020467] add	qword ptr [rip + 0x22b9d9], 1                             ; store(0x24be48,0x1)
[main] [INS] [0002046f] xor	r13d, r13d                                                ; r13d = 0x0
[main] [INS] [00020472] mov	esi, dword ptr [rsp + 0x1a0]                              ; esi = 0x0
[main] [INS] [00020479] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [0002047c] mov	qword ptr [r15 + 0x30], r13                               ; store(0x9003a030,0x0)
[main] [INS] [00020480] mov	dword ptr [r15 + 0x2a], 0                                 ; store(0x9003a02a,0x0)
[main] [INS] [00020488] mov	word ptr [r15 + 0x2e], r9w                                ; store(0x9003a02e,0x0)
[main] [INS] [0002048d] movzx	eax, ax                                                 ; eax = 0x0
[main] [INS] [00020490] mov	qword ptr [r15 + 0x38], 0                                 ; store(0x9003a038,0x0)
[main] [INS] [00020498] lea	r12, [r15 + 0x40]                                         ; r12 = 0x9003a040 -> 0
[main] [INS] [0002049c] mov	dword ptr [rsp + 0x1a4], esi                              ; store(0x7f000008b744,0x0)
[main] [INS] [000204a3] movzx	esi, dx                                                 ; esi = 0x0
[main] [INS] [000204a6] imul	eax, esi                                                 ; eax = 0x0
[main] [INS] [000204a9] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [000204ab] mov	qword ptr [rsp + 0x1b8], 0                                ; store(0x7f000008b758,0x0)
[main] [INS] [000204b7] mov	dword ptr [rsp + 0x1a0], 0                                ; store(0x7f000008b740,0x0)
[main] [INS] [000204c2] mov	dword ptr [rsp + 0x1a8], 0                                ; store(0x7f000008b748,0x0)
[main] [INS] [000204cd] mov	qword ptr [rsp + 0x188], r12                              ; store(0x7f000008b728,0x9003a040) -> 0
[main] [INS] [000204d5] mov	dword ptr [rsp + 0x1e0], 0                                ; store(0x7f000008b780,0x0)
[main] [INS] [000204e0] cdqe	
[main] [INS] [000204e2] mov	qword ptr [rsp + 0x1c8], 0                                ; store(0x7f000008b768,0x0)
[main] [INS] [000204ee] mov	qword ptr [rsp + 0x1d0], 0                                ; store(0x7f000008b770,0x0)
[main] [INS] [000204fa] lea	r13, [r12 + rax]                                          ; r13 = 0x9003a040 -> 0
[main] [INS] [000204fe] mov	rax, qword ptr [rsp + 0x150]                              ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [00020506] mov	qword ptr [rsp + 0x178], 0                                ; store(0x7f000008b718,0x0)
[main] [INS] [00020512] mov	qword ptr [rsp + 0x158], r13                              ; store(0x7f000008b6f8,0x9003a040) -> 0
[main] [INS] [0002051a] mov	qword ptr [rsp + 0x170], rax                              ; store(0x7f000008b710,0x7f000008b8d0) -> ff76621d000083
[main] [INS] [00020522] jle	0x207c0
[main] [INS] [000207c0] mov	rax, qword ptr [rsp + 0x58]                               ; rax = 0x90000041 -> "(?=a\K)a"
[main] [INS] [000207c5] sub	rsp, 8                                                    ; rsp = 0x7f000008b598 -> 203d9
[main] [INS] [000207c9] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [000207cc] mov	qword ptr [rsp + 0x108], r13                              ; store(0x7f000008b6a0,0x9003a040) -> 0
[main] [INS] [000207d4] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [000207d7] mov	dword ptr [rsp + 0x30], r11d                              ; store(0x7f000008b5c8,0x4000) -> 24a880
[main] [INS] [000207dc] mov	qword ptr [rsp + 0x110], rax                              ; store(0x7f000008b6a8,0x90000041) -> "(?=a\K)a"
[main] [INS] [000207e4] mov	qword ptr [rsp + 0x28], r10                               ; store(0x7f000008b5c0,0x90000041) -> "(?=a\K)a"
[main] [INS] [000207e9] mov	byte ptr [r13], 0x83                                      ; store(0x9003a040,0x83)
[main] [INS] [000207ee] mov	edi, dword ptr [r15 + 8]                                  ; edi = 0x4000 -> 24a880
[main] [INS] [000207f2] push	0                                                        ; push(0x0)
[main] [INS] [000207f4] push	qword ptr [rsp + 0x28]                                   ; push(0x7f000008caf0) -> 0
[main] [INS] [000207f8] push	0                                                        ; push(0x0)
[main] [INS] [000207fa] push	qword ptr [rsp + 0xa8]                                   ; push(0x0)
[main] [INS] [00020801] push	qword ptr [rsp + 0xc0]                                   ; push(0x7f000008b690) -> 0
[main] [INS] [00020808] push	qword ptr [rsp + 0x80]                                   ; push(0x0)
[main] [INS] [0002080f] push	qword ptr [rsp + 0xc8]                                   ; push(0x7f000008b68c) -> fffffffe
[main] [INS] [00020816] push	0                                                        ; push(0x0)
[main] [INS] [00020818] push	0                                                        ; push(0x0)
[main] [INS] [0002081a] mov	rcx, qword ptr [rsp + 0xf0]                               ; rcx = 0x7f000008b698 -> 0
[main] [INS] [00020822] mov	rdx, qword ptr [rsp + 0x100]                              ; rdx = 0x7f000008b6a8 -> 90000041
[main] [INS] [0002082a] mov	rsi, qword ptr [rsp + 0xf8]                               ; rsi = 0x7f000008b6a0 -> 9003a040
[main] [INS] [00020832] call	0x18ae0                                                  ; call(0x18ae0)
[main] [INS] [00018ae0] push	r15                                                      ; push(0x9003a000) -> "ERCP~"
[main] [INS] [00018ae2] push	r14                                                      ; push(0x0)
[main] [INS] [00018ae4] push	r13                                                      ; push(0x9003a040) -> 83
[main] [INS] [00018ae6] push	r12                                                      ; push(0x9003a040) -> 83
[main] [INS] [00018ae8] push	rbp                                                      ; push(0x0)
[main] [INS] [00018ae9] push	rbx                                                      ; push(0x40)
[main] [INS] [00018aea] sub	rsp, 0x228                                                ; rsp = 0x7f000008b2f0 -> 0
[main] [INS] [00018af1] mov	rax, qword ptr [rsp + 0x270]                              ; rax = 0x7f000008b690 -> 0
[main] [INS] [00018af9] mov	dword ptr [rsp + 0x9c], r8d                               ; store(0x7f000008b38c,0x0)
[main] [INS] [00018b01] mov	dword ptr [rsp + 0x30], edi                               ; store(0x7f000008b320,0x4000) -> 24a880
[main] [INS] [00018b05] mov	qword ptr [rsp + 0xc0], rsi                               ; store(0x7f000008b3b0,0x7f000008b6a0) -> 9003a040
[main] [INS] [00018b0d] mov	qword ptr [rsp + 0xb0], rdx                               ; store(0x7f000008b3a0,0x7f000008b6a8) -> 90000041
[main] [INS] [00018b15] mov	qword ptr [rsp + 0x48], rcx                               ; store(0x7f000008b338,0x7f000008b698) -> 0
[main] [INS] [00018b1a] mov	qword ptr [rsp + 0x138], rax                              ; store(0x7f000008b428,0x7f000008b690) -> 0
[main] [INS] [00018b22] mov	rax, qword ptr [rsp + 0x278]                              ; rax = 0x7f000008b688 -> fffffffefffffffe
[main] [INS] [00018b2a] mov	dword ptr [rsp + 0xac], r9d                               ; store(0x7f000008b39c,0x0)
[main] [INS] [00018b32] mov	rbx, qword ptr [rsp + 0x290]                              ; rbx = 0x0
[main] [INS] [00018b3a] mov	r12, qword ptr [rsp + 0x298]                              ; r12 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018b42] mov	r8, qword ptr [rdx]                                       ; r8 = 0x90000041 -> "(?=a\K)a"
[main] [INS] [00018b45] mov	qword ptr [rsp + 0x140], rax                              ; store(0x7f000008b430,0x7f000008b688) -> fffffffefffffffe
[main] [INS] [00018b4d] mov	rax, qword ptr [rsp + 0x280]                              ; rax = 0x7f000008b694 -> 0
[main] [INS] [00018b55] mov	qword ptr [rsp + 0x148], rax                              ; store(0x7f000008b438,0x7f000008b694) -> 0
[main] [INS] [00018b5d] mov	rax, qword ptr [rsp + 0x288]                              ; rax = 0x7f000008b68c -> fffffffe
[main] [INS] [00018b65] mov	qword ptr [rsp + 0x150], rax                              ; store(0x7f000008b440,0x7f000008b68c) -> fffffffe
[main] [INS] [00018b6d] mov	rax, qword ptr [rsp + 0x2a0]                              ; rax = 0x0
[main] [INS] [00018b75] mov	qword ptr [rsp + 0x80], rax                               ; store(0x7f000008b370,0x0)
[main] [INS] [00018b7d] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00018b86] mov	qword ptr [rsp + 0x218], rax                              ; store(0x7f000008b508,0x59424d4f444e4100)
[main] [INS] [00018b8e] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00018b90] mov	rax, qword ptr [rsi]                                      ; rax = 0x9003a040 -> 83
[main] [INS] [00018b93] mov	qword ptr [rsp + 0xd8], rax                               ; store(0x7f000008b3c8,0x9003a040) -> 83
[main] [INS] [00018b9b] mov	rax, qword ptr [rip + 0x2375ce]                           ; rax = 0x0
[main] [INS] [00018ba2] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [00018ba5] je	0x18bce
[main] [INS] [00018bce] mov	rax, qword ptr [r12 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [00018bd3] mov	qword ptr [rsp + 0x1c0], rbx                              ; store(0x7f000008b4b0,0x0)
[main] [INS] [00018bdb] mov	rbx, qword ptr [rsp + 0xd8]                               ; rbx = 0x9003a040 -> 83
[main] [INS] [00018be3] mov	qword ptr [rsp + 0x160], rax                              ; store(0x7f000008b450,0x7f000008b8d0) -> ff76621d000083
[main] [INS] [00018beb] mov	rax, qword ptr [r12 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [00018bf0] mov	dword ptr [rsp + 0xfc], 0                                 ; store(0x7f000008b3ec,0x0)
[main] [INS] [00018bfb] mov	qword ptr [rsp + 0x1c8], rbx                              ; store(0x7f000008b4b8,0x9003a040) -> 83
[main] [INS] [00018c03] mov	qword ptr [rsp + 0x168], rax                              ; store(0x7f000008b458,0x7f000008b8d0) -> ff76621d000083
[main] [INS] [00018c0b] mov	eax, dword ptr [rsp + 0x260]                              ; eax = 0x0
[main] [INS] [00018c12] add	eax, 6                                                    ; eax = 0x6
[main] [INS] [00018c15] cmp	byte ptr [rbx], 0x85                                      ; 0x83 vs 0x85
[main] [INS] [00018c18] mov	dword ptr [rsp + 0x17c], eax                              ; store(0x7f000008b46c,0x6)
[main] [INS] [00018c1f] je	0x1aabe
[main] [INS] [00018c25] mov	eax, dword ptr [rsp + 0x260]                              ; eax = 0x0
[main] [INS] [00018c2c] mov	rbx, qword ptr [rsp + 0xd8]                               ; rbx = 0x9003a040 -> 83
[main] [INS] [00018c34] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [00018c36] add	qword ptr [rip + 0x232c62], 1                             ; store(0x24b8a0,0x1)
[main] [INS] [00018c3e] lea	rdx, [rsp + 0x17c]                                        ; rdx = 0x7f000008b46c -> 1b00000006
[main] [INS] [00018c46] mov	dword ptr [rsp + 0xf8], 0                                 ; store(0x7f000008b3e8,0x0)
[main] [INS] [00018c51] mov	dword ptr [rsp + 0xe4], 0                                 ; store(0x7f000008b3d4,0x0)
[main] [INS] [00018c5c] mov	qword ptr [rsp + 0xc8], 0                                 ; store(0x7f000008b3b8,0x0)
[main] [INS] [00018c68] mov	r13, r12                                                  ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018c6b] add	eax, 3                                                    ; eax = 0x3
[main] [INS] [00018c6e] mov	word ptr [rbx + 1], bp                                    ; store(0x9003a041,0x0)
[main] [INS] [00018c72] mov	esi, dword ptr [r12 + 0x70]                               ; esi = 0x0
[main] [INS] [00018c77] cdqe	
[main] [INS] [00018c79] mov	qword ptr [rsp + 0xb8], rbx                               ; store(0x7f000008b3a8,0x9003a040) -> 83
[main] [INS] [00018c81] add	rax, rbx                                                  ; rax = 0x9003a043 -> 0
[main] [INS] [00018c84] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008b318,0x9003a043) -> 0
[main] [INS] [00018c89] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00018c8b] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018c94] mov	dword ptr [rsp + 0xd4], esi                               ; store(0x7f000008b3c4,0x0)
[main] [INS] [00018c9b] mov	dword ptr [rsp + 0x94], esi                               ; store(0x7f000008b384,0x0)
[main] [INS] [00018ca2] cmove	rdx, rax                                                ; rdx = 0x0
[main] [INS] [00018ca6] cmp	rdx, 1                                                    ; 0x0 vs 0x1
[main] [INS] [00018caa] mov	r14, rdx                                                  ; r14 = 0x0
[main] [INS] [00018cad] lea	rdx, [rsp + 0x180]                                        ; rdx = 0x7f000008b470 -> 1b
[main] [INS] [00018cb5] sbb	edi, edi                                                  ; edi = 0xffffffff
[main] [INS] [00018cb7] mov	qword ptr [rsp + 8], r14                                  ; store(0x7f000008b2f8,0x0)
[main] [INS] [00018cbc] and	edi, 0xfffffffe                                           ; edi = 0xfffffffe
[main] [INS] [00018cbf] add	edi, 5                                                    ; edi = 0x3
[main] [INS] [00018cc2] test	r14, r14                                                 ; 0x0 vs 0x0
[main] [INS] [00018cc5] cmovne	rax, rdx                                               ; rax = 0x0
[main] [INS] [00018cc9] mov	dword ptr [rsp + 0x15c], edi                              ; store(0x7f000008b44c,0x3)
[main] [INS] [00018cd0] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008b3e0,0x0)
[main] [INS] [00018cd8] mov	eax, 0xfffffffe                                           ; eax = 0xfffffffe
[main] [INS] [00018cdd] mov	dword ptr [rsp + 0xd0], eax                               ; store(0x7f000008b3c0,0xfffffffe)
[main] [INS] [00018ce4] mov	dword ptr [rsp + 0xe0], eax                               ; store(0x7f000008b3d0,0xfffffffe)
[main] [INS] [00018ceb] nop	dword ptr [rax + rax]
[main] [INS] [00018cf0] mov	ebx, dword ptr [rsp + 0xac]                               ; ebx = 0x0
[main] [INS] [00018cf7] test	ebx, ebx                                                 ; 0x0 vs 0x0
[main] [INS] [00018cf9] je	0x18d0e
[main] [INS] [00018d0e] mov	r11d, dword ptr [rsp + 0x9c]                              ; r11d = 0x0
[main] [INS] [00018d16] test	r11d, r11d                                               ; 0x0 vs 0x0
[main] [INS] [00018d19] je	0x18d53
[main] [INS] [00018d53] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018d5c] je	0x1a162
[main] [INS] [0001a162] add	qword ptr [rip + 0x23174e], 1                             ; store(0x24b8b8,0x1)
[main] [INS] [0001a16a] jmp	0x18d62                                                   ; jmp(0x18d62)
[main] [INS] [00018d62] mov	ebx, dword ptr [rsp + 0x30]                               ; ebx = 0x4000 -> 24a880
[main] [INS] [00018d66] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [00018d68] mov	r12, qword ptr [rsp + 0x28]                               ; r12 = 0x9003a043 -> 0
[main] [INS] [00018d6d] lea	rsi, [rsp + 0x194]                                        ; rsi = 0x7f000008b484 -> 8b8e5fffffffe
[main] [INS] [00018d75] mov	dword ptr [rsp + 0x180], 0                                ; store(0x7f000008b470,0x0)
[main] [INS] [00018d80] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b490,0x90000041) -> "(?=a\K)a"
[main] [INS] [00018d88] mov	qword ptr [rsp + 0x60], 0                                 ; store(0x7f000008b350,0x0)
[main] [INS] [00018d91] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b328,0x0)
[main] [INS] [00018d9a] mov	r15, r13                                                  ; r15 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018d9d] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00018d9f] mov	qword ptr [rsp + 0x10], r12                               ; store(0x7f000008b300,0x9003a043) -> 0
[main] [INS] [00018da4] mov	qword ptr [rsp + 0x18], 0                                 ; store(0x7f000008b308,0x0)
[main] [INS] [00018dad] and	eax, 0x200                                                ; eax = 0x0
[main] [INS] [00018db2] mov	dword ptr [rsp + 0x98], 0                                 ; store(0x7f000008b388,0x0)
[main] [INS] [00018dbd] mov	dword ptr [rsp + 0x20], 0                                 ; store(0x7f000008b310,0x0)
[main] [INS] [00018dc5] sete	al                                                       ; al = 0x1
[main] [INS] [00018dc8] setne	cl                                                      ; cl = 0x0
[main] [INS] [00018dcb] and	ebx, 1                                                    ; ebx = 0x0
[main] [INS] [00018dce] movzx	eax, al                                                 ; eax = 0x1
[main] [INS] [00018dd1] mov	dword ptr [rsp + 0x88], ebx                               ; store(0x7f000008b378,0x0)
[main] [INS] [00018dd8] mov	dword ptr [rsp + 0x90], ecx                               ; store(0x7f000008b380,0x0)
[main] [INS] [00018ddf] mov	dword ptr [rsp + 0xa8], eax                               ; store(0x7f000008b398,0x1)
[main] [INS] [00018de6] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [00018de8] mov	rax, qword ptr [r13 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [00018dec] mov	dword ptr [rsp + 0x8c], 0                                 ; store(0x7f000008b37c,0x0)
[main] [INS] [00018df7] mov	dword ptr [rsp + 0x5c], 0xfffffffe                        ; store(0x7f000008b34c,0xfffffffe)
[main] [INS] [00018dff] mov	r14, r12                                                  ; r14 = 0x9003a043 -> 0
[main] [INS] [00018e02] mov	dword ptr [rsp + 0x70], 0xfffffffe                        ; store(0x7f000008b360,0xfffffffe)
[main] [INS] [00018e0a] mov	dword ptr [rsp + 0x74], 0                                 ; store(0x7f000008b364,0x0)
[main] [INS] [00018e12] mov	dword ptr [rsp + 0x68], 0                                 ; store(0x7f000008b358,0x0)
[main] [INS] [00018e1a] mov	dword ptr [rsp + 0x40], 0xfffffffe                        ; store(0x7f000008b330,0xfffffffe)
[main] [INS] [00018e22] mov	dword ptr [rsp + 0x34], 0xfffffffe                        ; store(0x7f000008b324,0xfffffffe)
[main] [INS] [00018e2a] mov	dword ptr [rsp + 0x44], 0                                 ; store(0x7f000008b334,0x0)
[main] [INS] [00018e32] mov	dword ptr [rsp + 0x58], 0                                 ; store(0x7f000008b348,0x0)
[main] [INS] [00018e3a] mov	qword ptr [rsp + 0xa0], rsi                               ; store(0x7f000008b390,0x7f000008b484) -> 8b8e5fffffffe
[main] [INS] [00018e42] jmp	0x18ea1                                                   ; jmp(0x18ea1)
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x28
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x28 vs 0x28
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00019aa0] add	rax, rdx                                                  ; rax = 0x7f000008c8d0 -> 0
[main] [INS] [00019aa3] cmp	qword ptr [r15 + 0x40], rax                               ; 0x7f000008b8d0 vs 0x7f000008c8d0
[main] [INS] [00019aa7] jbe	0x18f51
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x28 vs 0x28
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b340,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0xfffffffe
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0xfffffffe vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x28 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x28 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [0001e4a7] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [0001e4a9] je	0x18fe0
[main] [INS] [0001e4af] add	qword ptr [rip + 0x22c371], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001e4b7] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [0001e4bd] je	0x1a223
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x9003a043,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b328,0x9003a043) -> ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x9003a049 -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x0
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x9003a045,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x0
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x9003a047,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x9003a046,0x0)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x28 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x28
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc0b7
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x19577 -> 1a024848b48
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x19577)
[main] [INS] [00019577] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0001957f] lea	rdx, [rax + 1]                                            ; rdx = 0x90000042 -> "?=a\K)ab"
[main] [INS] [00019583] mov	qword ptr [rsp + 0x1a0], rdx                              ; store(0x7f000008b490,0x90000042) -> "?=a\K)ab"
[main] [INS] [0001958b] movzx	edx, byte ptr [rax + 1]                                 ; edx = 0x3f
[main] [INS] [0001958f] cmp	dl, 0x3f                                                  ; 0x3f vs 0x3f
[main] [INS] [00019592] je	0x1a5f6
[main] [INS] [0001a5f6] add	qword ptr [rip + 0x230a12], 1                             ; store(0x24b010,0x1)
[main] [INS] [0001a5fe] cmp	byte ptr [rax + 2], 0x23                                  ; 0x3d vs 0x23
[main] [INS] [0001a602] je	0x1ba0a
[main] [INS] [0001a608] lea	r11, [rax + 2]                                            ; r11 = 0x90000043 -> "=a\K)ab"
[main] [INS] [0001a60c] mov	rbp, qword ptr [r15 + 0x40]                               ; rbp = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [0001a610] mov	qword ptr [rsp + 0x1a0], r11                              ; store(0x7f000008b490,0x90000043) -> "=a\K)ab"
[main] [INS] [0001a618] movzx	edx, byte ptr [rax + 2]                                 ; edx = 0x3d
[main] [INS] [0001a61c] mov	rbx, rbp                                                  ; rbx = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [0001a61f] sub	rbx, qword ptr [r15 + 0x20]                               ; rbx = 0x0
[main] [INS] [0001a623] lea	ecx, [rdx - 0x21]                                         ; ecx = 0x1c
[main] [INS] [0001a626] mov	qword ptr [rsp + 0x60], rbx                               ; store(0x7f000008b350,0x0)
[main] [INS] [0001a62b] cmp	cl, 0x5b                                                  ; 0x1c vs 0x5b
[main] [INS] [0001a62e] ja	0x1bca5
[main] [INS] [0001a634] lea	rsi, [rip + 0x231c5]                                      ; rsi = 0x3d800 -> fffde4a5fffde878
[main] [INS] [0001a63b] movzx	ecx, cl                                                 ; ecx = 0x1c
[main] [INS] [0001a63e] movsxd	rcx, dword ptr [rsi + rcx*4]                           ; rcx = 0xfffffffffffdeb98
[main] [INS] [0001a642] add	rcx, rsi                                                  ; rcx = 0x1c398 -> 8c87834103c08348
[main] [INS] [0001a645] jmp	rcx                                                       ; jmp(0x1c398)
[main] [INS] [0001c398] add	rax, 3                                                    ; rax = 0x90000044 -> "a\K)ab"
[main] [INS] [0001c39c] add	dword ptr [r15 + 0x8c], 1                                 ; store(0x7f000008b75c,0x1)
[main] [INS] [0001c3a4] add	qword ptr [rip + 0x22eec4], 1                             ; store(0x24b270,0x1)
[main] [INS] [0001c3ac] mov	qword ptr [rsp + 0x1a0], rax                              ; store(0x7f000008b490,0x90000044) -> "a\K)ab"
[main] [INS] [0001c3b4] mov	edi, dword ptr [rsp + 0x30]                               ; edi = 0x4000 -> 24a880
[main] [INS] [0001c3b8] xor	r13d, r13d                                                ; r13d = 0x0
[main] [INS] [0001c3bb] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [0001c3be] mov	ebp, 0x7d                                                 ; ebp = 0x7d
[main] [INS] [0001c3c3] jmp	0x1c0ad                                                   ; jmp(0x1c0ad)
[main] [INS] [0001c0ad] add	qword ptr [rip + 0x22f553], 1                             ; store(0x24b608,0x1)
[main] [INS] [0001c0b5] jmp	0x1961f                                                   ; jmp(0x1961f)
[main] [INS] [0001961f] mov	eax, dword ptr [r15 + 0x88]                               ; eax = 0x0
[main] [INS] [00019626] add	eax, 1                                                    ; eax = 0x1
[main] [INS] [00019629] cmp	eax, 0xfa                                                 ; 0x1 vs 0xfa
[main] [INS] [0001962e] mov	dword ptr [r15 + 0x88], eax                               ; store(0x7f000008b758,0x1)
[main] [INS] [00019635] jg	0x1dba1
[main] [INS] [0001963b] lea	r12d, [rbp - 0x7d]                                        ; r12d = 0x0
[main] [INS] [0001963f] cmp	r12d, 3                                                   ; 0x0 vs 0x3
[main] [INS] [00019643] ja	0x1acea
[main] [INS] [00019649] mov	ebx, dword ptr [r15 + 0xb0]                               ; ebx = 0x0
[main] [INS] [00019650] add	qword ptr [rip + 0x231fe0], 1                             ; store(0x24b638,0x1)
[main] [INS] [00019658] test	ebx, ebx                                                 ; 0x0 vs 0x0
[main] [INS] [0001965a] je	0x1acea
[main] [INS] [0001acea] mov	rax, qword ptr [r15 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [0001acee] sub	rax, qword ptr [r15 + 0x20]                               ; rax = 0x0
[main] [INS] [0001acf2] mov	rbx, r14                                                  ; rbx = 0x9003a049 -> 0
[main] [INS] [0001acf5] add	qword ptr [rip + 0x23094b], 1                             ; store(0x24b648,0x1)
[main] [INS] [0001acfd] mov	qword ptr [rsp + 0x60], rax                               ; store(0x7f000008b350,0x0)
[main] [INS] [0001ad02] jmp	0x19675                                                   ; jmp(0x19675)
[main] [INS] [00019675] mov	byte ptr [r14], bpl                                       ; store(0x9003a049,0x7d)
[main] [INS] [00019678] mov	eax, dword ptr [r15 + 0x98]                               ; eax = 0x0
[main] [INS] [0001967f] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [00019685] mov	qword ptr [rsp + 0x198], r14                              ; store(0x7f000008b488,0x9003a049) -> 7d
[main] [INS] [0001968d] mov	dword ptr [rsp + 0x180], 0                                ; store(0x7f000008b470,0x0)
[main] [INS] [00019698] mov	dword ptr [rsp + 0x78], eax                               ; store(0x7f000008b368,0x0)
[main] [INS] [0001969c] mov	eax, dword ptr [r15 + 0x70]                               ; eax = 0x0
[main] [INS] [000196a0] mov	dword ptr [rsp + 0xe8], eax                               ; store(0x7f000008b3d8,0x0)
[main] [INS] [000196a7] je	0x1b4a4
[main] [INS] [0001b4a4] add	qword ptr [rip + 0x2301a4], 1                             ; store(0x24b650,0x1)
[main] [INS] [0001b4ac] jmp	0x196ad                                                   ; jmp(0x196ad)
[main] [INS] [000196ad] lea	eax, [rbp - 0x7f]                                         ; eax = 0xfffffffe
[main] [INS] [000196b0] cmp	ebp, 0x87                                                 ; 0x7d vs 0x87
[main] [INS] [000196b6] lea	rdx, [rsp + 0x1a0]                                        ; rdx = 0x7f000008b490 -> 90000044
[main] [INS] [000196be] sete	byte ptr [rsp + 0x50]                                    ; mem is (0x0)
[main] [INS] [000196c3] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [000196c6] movzx	ecx, byte ptr [rsp + 0x50]                              ; ecx = 0x0
[main] [INS] [000196cb] cmp	eax, 1                                                    ; 0xfffffffe vs 0x1
[main] [INS] [000196ce] lea	rsi, [rsp + 0x198]                                        ; rsi = 0x7f000008b488 -> 9003a049
[main] [INS] [000196d6] setbe	r8b                                                     ; r8b = 0x0
[main] [INS] [000196da] sub	rsp, 8                                                    ; rsp = 0x7f000008b2e8 -> 19d2c
[main] [INS] [000196de] push	qword ptr [rsp + 0xf8]                                   ; push(0x0)
[main] [INS] [000196e5] push	r15                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [000196e7] lea	rax, [rsp + 0x1d8]                                        ; rax = 0x7f000008b4b0 -> 0
[main] [INS] [000196ef] push	rax                                                      ; push(0x7f000008b4b0) -> 0
[main] [INS] [000196f0] lea	rax, [rsp + 0x1b0]                                        ; rax = 0x7f000008b480 -> fffffffefffffffe
[main] [INS] [000196f8] push	rax                                                      ; push(0x7f000008b480) -> fffffffefffffffe
[main] [INS] [000196f9] lea	rax, [rsp + 0x1ac]                                        ; rax = 0x7f000008b474 -> 0
[main] [INS] [00019701] push	rax                                                      ; push(0x7f000008b474) -> 0
[main] [INS] [00019702] push	qword ptr [rsp + 0xd0]                                   ; push(0x0)
[main] [INS] [00019709] lea	rax, [rsp + 0x1c0]                                        ; rax = 0x7f000008b478 -> 0
[main] [INS] [00019711] push	rax                                                      ; push(0x7f000008b478) -> 0
[main] [INS] [00019712] movzx	eax, cl                                                 ; eax = 0x0
[main] [INS] [00019715] add	eax, dword ptr [rsp + 0x2a8]                              ; eax = 0x0
[main] [INS] [0001971c] push	rax                                                      ; push(0x0)
[main] [INS] [0001971d] push	r13                                                      ; push(0x0)
[main] [INS] [0001971f] mov	rcx, qword ptr [rsp + 0x98]                               ; rcx = 0x7f000008b698 -> 0
[main] [INS] [00019727] call	0x18ae0                                                  ; call(0x18ae0)
[main] [INS] [00018ae0] push	r15                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [00018ae2] push	r14                                                      ; push(0x9003a049) -> 7d
[main] [INS] [00018ae4] push	r13                                                      ; push(0x0)
[main] [INS] [00018ae6] push	r12                                                      ; push(0x0)
[main] [INS] [00018ae8] push	rbp                                                      ; push(0x7d)
[main] [INS] [00018ae9] push	rbx                                                      ; push(0x9003a049) -> 7d
[main] [INS] [00018aea] sub	rsp, 0x228                                                ; rsp = 0x7f000008b040 -> 0
[main] [INS] [00018af1] mov	rax, qword ptr [rsp + 0x270]                              ; rax = 0x7f000008b478 -> 0
[main] [INS] [00018af9] mov	dword ptr [rsp + 0x9c], r8d                               ; store(0x7f000008b0dc,0x0)
[main] [INS] [00018b01] mov	dword ptr [rsp + 0x30], edi                               ; store(0x7f000008b070,0x4000) -> 24a880
[main] [INS] [00018b05] mov	qword ptr [rsp + 0xc0], rsi                               ; store(0x7f000008b100,0x7f000008b488) -> 9003a049
[main] [INS] [00018b0d] mov	qword ptr [rsp + 0xb0], rdx                               ; store(0x7f000008b0f0,0x7f000008b490) -> 90000044
[main] [INS] [00018b15] mov	qword ptr [rsp + 0x48], rcx                               ; store(0x7f000008b088,0x7f000008b698) -> 0
[main] [INS] [00018b1a] mov	qword ptr [rsp + 0x138], rax                              ; store(0x7f000008b178,0x7f000008b478) -> 0
[main] [INS] [00018b22] mov	rax, qword ptr [rsp + 0x278]                              ; rax = 0x7f000008b484 -> 9003a049fffffffe
[main] [INS] [00018b2a] mov	dword ptr [rsp + 0xac], r9d                               ; store(0x7f000008b0ec,0x0)
[main] [INS] [00018b32] mov	rbx, qword ptr [rsp + 0x290]                              ; rbx = 0x7f000008b4b0 -> 0
[main] [INS] [00018b3a] mov	r12, qword ptr [rsp + 0x298]                              ; r12 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018b42] mov	r8, qword ptr [rdx]                                       ; r8 = 0x90000044 -> "a\K)ab"
[main] [INS] [00018b45] mov	qword ptr [rsp + 0x140], rax                              ; store(0x7f000008b180,0x7f000008b484) -> 9003a049fffffffe
[main] [INS] [00018b4d] mov	rax, qword ptr [rsp + 0x280]                              ; rax = 0x7f000008b474 -> 0
[main] [INS] [00018b55] mov	qword ptr [rsp + 0x148], rax                              ; store(0x7f000008b188,0x7f000008b474) -> 0
[main] [INS] [00018b5d] mov	rax, qword ptr [rsp + 0x288]                              ; rax = 0x7f000008b480 -> fffffffefffffffe
[main] [INS] [00018b65] mov	qword ptr [rsp + 0x150], rax                              ; store(0x7f000008b190,0x7f000008b480) -> fffffffefffffffe
[main] [INS] [00018b6d] mov	rax, qword ptr [rsp + 0x2a0]                              ; rax = 0x0
[main] [INS] [00018b75] mov	qword ptr [rsp + 0x80], rax                               ; store(0x7f000008b0c0,0x0)
[main] [INS] [00018b7d] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00018b86] mov	qword ptr [rsp + 0x218], rax                              ; store(0x7f000008b258,0x59424d4f444e4100)
[main] [INS] [00018b8e] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00018b90] mov	rax, qword ptr [rsi]                                      ; rax = 0x9003a049 -> 7d
[main] [INS] [00018b93] mov	qword ptr [rsp + 0xd8], rax                               ; store(0x7f000008b118,0x9003a049) -> 7d
[main] [INS] [00018b9b] mov	rax, qword ptr [rip + 0x2375ce]                           ; rax = 0x0
[main] [INS] [00018ba2] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [00018ba5] je	0x18bce
[main] [INS] [00018bce] mov	rax, qword ptr [r12 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [00018bd3] mov	qword ptr [rsp + 0x1c0], rbx                              ; store(0x7f000008b200,0x7f000008b4b0) -> 0
[main] [INS] [00018bdb] mov	rbx, qword ptr [rsp + 0xd8]                               ; rbx = 0x9003a049 -> 7d
[main] [INS] [00018be3] mov	qword ptr [rsp + 0x160], rax                              ; store(0x7f000008b1a0,0x7f000008b8d0) -> ff76621d000083
[main] [INS] [00018beb] mov	rax, qword ptr [r12 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [00018bf0] mov	dword ptr [rsp + 0xfc], 0                                 ; store(0x7f000008b13c,0x0)
[main] [INS] [00018bfb] mov	qword ptr [rsp + 0x1c8], rbx                              ; store(0x7f000008b208,0x9003a049) -> 7d
[main] [INS] [00018c03] mov	qword ptr [rsp + 0x168], rax                              ; store(0x7f000008b1a8,0x7f000008b8d0) -> ff76621d000083
[main] [INS] [00018c0b] mov	eax, dword ptr [rsp + 0x260]                              ; eax = 0x0
[main] [INS] [00018c12] add	eax, 6                                                    ; eax = 0x6
[main] [INS] [00018c15] cmp	byte ptr [rbx], 0x85                                      ; 0x7d vs 0x85
[main] [INS] [00018c18] mov	dword ptr [rsp + 0x17c], eax                              ; store(0x7f000008b1bc,0x6)
[main] [INS] [00018c1f] je	0x1aabe
[main] [INS] [00018c25] mov	eax, dword ptr [rsp + 0x260]                              ; eax = 0x0
[main] [INS] [00018c2c] mov	rbx, qword ptr [rsp + 0xd8]                               ; rbx = 0x9003a049 -> 7d
[main] [INS] [00018c34] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [00018c36] add	qword ptr [rip + 0x232c62], 1                             ; store(0x24b8a0,0x1)
[main] [INS] [00018c3e] lea	rdx, [rsp + 0x17c]                                        ; rdx = 0x7f000008b1bc -> 6
[main] [INS] [00018c46] mov	dword ptr [rsp + 0xf8], 0                                 ; store(0x7f000008b138,0x0)
[main] [INS] [00018c51] mov	dword ptr [rsp + 0xe4], 0                                 ; store(0x7f000008b124,0x0)
[main] [INS] [00018c5c] mov	qword ptr [rsp + 0xc8], 0                                 ; store(0x7f000008b108,0x0)
[main] [INS] [00018c68] mov	r13, r12                                                  ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018c6b] add	eax, 3                                                    ; eax = 0x3
[main] [INS] [00018c6e] mov	word ptr [rbx + 1], bp                                    ; store(0x9003a04a,0x0)
[main] [INS] [00018c72] mov	esi, dword ptr [r12 + 0x70]                               ; esi = 0x0
[main] [INS] [00018c77] cdqe	
[main] [INS] [00018c79] mov	qword ptr [rsp + 0xb8], rbx                               ; store(0x7f000008b0f8,0x9003a049) -> 7d
[main] [INS] [00018c81] add	rax, rbx                                                  ; rax = 0x9003a04c -> 0
[main] [INS] [00018c84] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008b068,0x9003a04c) -> 0
[main] [INS] [00018c89] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00018c8b] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018c94] mov	dword ptr [rsp + 0xd4], esi                               ; store(0x7f000008b114,0x0)
[main] [INS] [00018c9b] mov	dword ptr [rsp + 0x94], esi                               ; store(0x7f000008b0d4,0x0)
[main] [INS] [00018ca2] cmove	rdx, rax                                                ; rdx = 0x0
[main] [INS] [00018ca6] cmp	rdx, 1                                                    ; 0x0 vs 0x1
[main] [INS] [00018caa] mov	r14, rdx                                                  ; r14 = 0x0
[main] [INS] [00018cad] lea	rdx, [rsp + 0x180]                                        ; rdx = 0x7f000008b1c0 -> 0
[main] [INS] [00018cb5] sbb	edi, edi                                                  ; edi = 0xffffffff
[main] [INS] [00018cb7] mov	qword ptr [rsp + 8], r14                                  ; store(0x7f000008b048,0x0)
[main] [INS] [00018cbc] and	edi, 0xfffffffe                                           ; edi = 0xfffffffe
[main] [INS] [00018cbf] add	edi, 5                                                    ; edi = 0x3
[main] [INS] [00018cc2] test	r14, r14                                                 ; 0x0 vs 0x0
[main] [INS] [00018cc5] cmovne	rax, rdx                                               ; rax = 0x0
[main] [INS] [00018cc9] mov	dword ptr [rsp + 0x15c], edi                              ; store(0x7f000008b19c,0x3)
[main] [INS] [00018cd0] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008b130,0x0)
[main] [INS] [00018cd8] mov	eax, 0xfffffffe                                           ; eax = 0xfffffffe
[main] [INS] [00018cdd] mov	dword ptr [rsp + 0xd0], eax                               ; store(0x7f000008b110,0xfffffffe)
[main] [INS] [00018ce4] mov	dword ptr [rsp + 0xe0], eax                               ; store(0x7f000008b120,0xfffffffe)
[main] [INS] [00018ceb] nop	dword ptr [rax + rax]
[main] [INS] [00018cf0] mov	ebx, dword ptr [rsp + 0xac]                               ; ebx = 0x0
[main] [INS] [00018cf7] test	ebx, ebx                                                 ; 0x0 vs 0x0
[main] [INS] [00018cf9] je	0x18d0e
[main] [INS] [00018d0e] mov	r11d, dword ptr [rsp + 0x9c]                              ; r11d = 0x0
[main] [INS] [00018d16] test	r11d, r11d                                               ; 0x0 vs 0x0
[main] [INS] [00018d19] je	0x18d53
[main] [INS] [00018d53] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018d5c] je	0x1a162
[main] [INS] [0001a162] add	qword ptr [rip + 0x23174e], 1                             ; store(0x24b8b8,0x1)
[main] [INS] [0001a16a] jmp	0x18d62                                                   ; jmp(0x18d62)
[main] [INS] [00018d62] mov	ebx, dword ptr [rsp + 0x30]                               ; ebx = 0x4000 -> 24a880
[main] [INS] [00018d66] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [00018d68] mov	r12, qword ptr [rsp + 0x28]                               ; r12 = 0x9003a04c -> 0
[main] [INS] [00018d6d] lea	rsi, [rsp + 0x194]                                        ; rsi = 0x7f000008b1d4 -> 0
[main] [INS] [00018d75] mov	dword ptr [rsp + 0x180], 0                                ; store(0x7f000008b1c0,0x0)
[main] [INS] [00018d80] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b1e0,0x90000044) -> "a\K)ab"
[main] [INS] [00018d88] mov	qword ptr [rsp + 0x60], 0                                 ; store(0x7f000008b0a0,0x0)
[main] [INS] [00018d91] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b078,0x0)
[main] [INS] [00018d9a] mov	r15, r13                                                  ; r15 = 0x7f000008b6d0 -> "@"
[main] [INS] [00018d9d] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00018d9f] mov	qword ptr [rsp + 0x10], r12                               ; store(0x7f000008b050,0x9003a04c) -> 0
[main] [INS] [00018da4] mov	qword ptr [rsp + 0x18], 0                                 ; store(0x7f000008b058,0x0)
[main] [INS] [00018dad] and	eax, 0x200                                                ; eax = 0x0
[main] [INS] [00018db2] mov	dword ptr [rsp + 0x98], 0                                 ; store(0x7f000008b0d8,0x0)
[main] [INS] [00018dbd] mov	dword ptr [rsp + 0x20], 0                                 ; store(0x7f000008b060,0x0)
[main] [INS] [00018dc5] sete	al                                                       ; al = 0x1
[main] [INS] [00018dc8] setne	cl                                                      ; cl = 0x0
[main] [INS] [00018dcb] and	ebx, 1                                                    ; ebx = 0x0
[main] [INS] [00018dce] movzx	eax, al                                                 ; eax = 0x1
[main] [INS] [00018dd1] mov	dword ptr [rsp + 0x88], ebx                               ; store(0x7f000008b0c8,0x0)
[main] [INS] [00018dd8] mov	dword ptr [rsp + 0x90], ecx                               ; store(0x7f000008b0d0,0x0)
[main] [INS] [00018ddf] mov	dword ptr [rsp + 0xa8], eax                               ; store(0x7f000008b0e8,0x1)
[main] [INS] [00018de6] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [00018de8] mov	rax, qword ptr [r13 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [00018dec] mov	dword ptr [rsp + 0x8c], 0                                 ; store(0x7f000008b0cc,0x0)
[main] [INS] [00018df7] mov	dword ptr [rsp + 0x5c], 0xfffffffe                        ; store(0x7f000008b09c,0xfffffffe)
[main] [INS] [00018dff] mov	r14, r12                                                  ; r14 = 0x9003a04c -> 0
[main] [INS] [00018e02] mov	dword ptr [rsp + 0x70], 0xfffffffe                        ; store(0x7f000008b0b0,0xfffffffe)
[main] [INS] [00018e0a] mov	dword ptr [rsp + 0x74], 0                                 ; store(0x7f000008b0b4,0x0)
[main] [INS] [00018e12] mov	dword ptr [rsp + 0x68], 0                                 ; store(0x7f000008b0a8,0x0)
[main] [INS] [00018e1a] mov	dword ptr [rsp + 0x40], 0xfffffffe                        ; store(0x7f000008b080,0xfffffffe)
[main] [INS] [00018e22] mov	dword ptr [rsp + 0x34], 0xfffffffe                        ; store(0x7f000008b074,0xfffffffe)
[main] [INS] [00018e2a] mov	dword ptr [rsp + 0x44], 0                                 ; store(0x7f000008b084,0x0)
[main] [INS] [00018e32] mov	dword ptr [rsp + 0x58], 0                                 ; store(0x7f000008b098,0x0)
[main] [INS] [00018e3a] mov	qword ptr [rsp + 0xa0], rsi                               ; store(0x7f000008b0e0,0x7f000008b1d4) -> 0
[main] [INS] [00018e42] jmp	0x18ea1                                                   ; jmp(0x18ea1)
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x61
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x61 vs 0x61
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00019aa0] add	rax, rdx                                                  ; rax = 0x7f000008c8d0 -> 0
[main] [INS] [00019aa3] cmp	qword ptr [r15 + 0x40], rax                               ; 0x7f000008b8d0 vs 0x7f000008c8d0
[main] [INS] [00019aa7] jbe	0x18f51
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x61 vs 0x61
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b090,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0x37
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0x37 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x61 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x61 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [0001e4a7] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [0001e4a9] je	0x18fe0
[main] [INS] [0001e4af] add	qword ptr [rip + 0x22c371], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001e4b7] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [0001e4bd] je	0x1a223
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000044 -> "a\K)ab"
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x9003a04c,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b078,0x9003a04c) -> ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x9003a052 -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000044 -> "a\K)ab"
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x3
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x9003a04e,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x3
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x9003a050,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x9003a04f,0x3)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x61 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x61
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc4ee
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x199ae -> 4cea89440dfd8041
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x199ae)
[main] [INS] [000199ae] cmp	r13b, 0xd                                                 ; 0x61 vs 0xd
[main] [INS] [000199b2] mov	edx, r13d                                                 ; edx = 0x61
[main] [INS] [000199b5] mov	rbx, r14                                                  ; rbx = 0x9003a052 -> 0
[main] [INS] [000199b8] sete	al                                                       ; al = 0x0
[main] [INS] [000199bb] cmp	r13b, 0xa                                                 ; 0x61 vs 0xa
[main] [INS] [000199bf] sete	r12b                                                     ; r12b = 0x0
[main] [INS] [000199c3] or	r12d, eax                                                  ; r12d = 0x9003b900 -> 0
[main] [INS] [000199c6] nop	word ptr cs:[rax + rax]                                   ; mem is (0x1824) -> 0
[main] [INS] [000199d0] add	qword ptr [rip + 0x231e50], 1                             ; store(0x24b828,0x1)
[main] [INS] [000199d8] mov	rax, qword ptr [r15 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [000199dc] sub	rax, qword ptr [r15 + 0x20]                               ; rax = 0x0
[main] [INS] [000199e0] test	byte ptr [rsp + 0x30], 1                                 ; 0x0 vs 0x1
[main] [INS] [000199e5] mov	qword ptr [rsp + 0x60], rax                               ; store(0x7f000008b0a0,0x0)
[main] [INS] [000199ea] mov	eax, 0x1e                                                 ; eax = 0x1e
[main] [INS] [000199ef] jne	0x199fe
[main] [INS] [000199f1] add	qword ptr [rip + 0x231e37], 1                             ; store(0x24b830,0x1)
[main] [INS] [000199f9] mov	eax, 0x1d                                                 ; eax = 0x1d
[main] [INS] [000199fe] add	qword ptr [rip + 0x231e32], 1                             ; store(0x24b838,0x1)
[main] [INS] [00019a06] test	r12b, r12b                                               ; 0x0 vs 0x0
[main] [INS] [00019a09] mov	byte ptr [rbx], al                                        ; store(0x9003a052,0x1d)
[main] [INS] [00019a0b] lea	r14, [rbx + 2]                                            ; r14 = 0x9003a054 -> 0
[main] [INS] [00019a0f] mov	byte ptr [rbx + 1], dl                                    ; store(0x9003a053,0x61)
[main] [INS] [00019a12] je	0x19a27
[main] [INS] [00019a27] cmp	dword ptr [rsp + 0x34], -2                                ; 0xfffffffe vs 0x-2
[main] [INS] [00019a2c] je	0x19ea0
[main] [INS] [00019ea0] movzx	eax, dl                                                 ; eax = 0x61
[main] [INS] [00019ea3] add	qword ptr [rip + 0x23199d], 1                             ; store(0x24b848,0x1)
[main] [INS] [00019eab] mov	r8, qword ptr [rsp + 0x1a0]                               ; r8 = 0x90000044 -> "a\K)ab"
[main] [INS] [00019eb3] mov	dword ptr [rsp + 0x58], eax                               ; store(0x7f000008b098,0x61)
[main] [INS] [00019eb7] mov	eax, dword ptr [rsp + 0x40]                               ; eax = 0xfffffffe
[main] [INS] [00019ebb] mov	dword ptr [rsp + 0x5c], 0xffffffff                        ; store(0x7f000008b09c,0xffffffff)
[main] [INS] [00019ec3] mov	dword ptr [rsp + 0x70], eax                               ; store(0x7f000008b0b0,0xfffffffe)
[main] [INS] [00019ec7] mov	eax, dword ptr [rsp + 0x44]                               ; eax = 0x0
[main] [INS] [00019ecb] mov	dword ptr [rsp + 0x68], eax                               ; store(0x7f000008b0a8,0x0)
[main] [INS] [00019ecf] mov	eax, dword ptr [rsp + 0x88]                               ; eax = 0x0
[main] [INS] [00019ed6] mov	dword ptr [rsp + 0x34], eax                               ; store(0x7f000008b074,0x0)
[main] [INS] [00019eda] jmp	0x194f2                                                   ; jmp(0x194f2)
[main] [INS] [000194f2] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [000194f6] jmp	0x18e8d                                                   ; jmp(0x18e8d)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x90000045 -> "\K)ab"
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b1e0,0x90000045) -> "\K)ab"
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x5c
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x5c vs 0x5c
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00019aa0] add	rax, rdx                                                  ; rax = 0x7f000008c8d0 -> 0
[main] [INS] [00019aa3] cmp	qword ptr [r15 + 0x40], rax                               ; 0x7f000008b8d0 vs 0x7f000008c8d0
[main] [INS] [00019aa7] jbe	0x18f51
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x5c vs 0x5c
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b090,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0x32
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0x32 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x5c vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x5c vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x9003a04c vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0x0
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xffffffff
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001b3c8] mov	rax, qword ptr [rsp + 0x38]                               ; rax = 0x9003a04c -> 611d00000300ff76
[main] [INS] [0001b3cd] mov	rcx, qword ptr [rsp + 0x1a0]                              ; rcx = 0x90000045 -> "\K)ab"
[main] [INS] [0001b3d5] sub	rcx, qword ptr [r15 + 0x30]                               ; rcx = 0x4
[main] [INS] [0001b3d9] add	qword ptr [rip + 0x22f43f], 1                             ; store(0x24a820,0x1)
[main] [INS] [0001b3e1] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b078,0x0)
[main] [INS] [0001b3ea] movzx	edi, word ptr [rax + 2]                                 ; edi = 0x300
[main] [INS] [0001b3ee] mov	esi, edi                                                  ; esi = 0x300
[main] [INS] [0001b3f0] rol	si, 8                                                     ; si = 0x3
[main] [INS] [0001b3f4] movzx	esi, si                                                 ; esi = 0x3
[main] [INS] [0001b3f7] sub	ecx, esi                                                  ; ecx = 0x1
[main] [INS] [0001b3f9] mov	byte ptr [rax + 4], ch                                    ; store(0x9003a050,0x0)
[main] [INS] [0001b3fc] mov	byte ptr [rax + 5], cl                                    ; store(0x9003a051,0x1)
[main] [INS] [0001b3ff] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b0cc,0xffffffff)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000045 -> "\K)ab"
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x9003a054,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b078,0x9003a054) -> ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x9003a05a -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000045 -> "\K)ab"
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x4
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x9003a056,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x4
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x9003a058,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x9003a057,0x4)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x5c vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x5c
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdbce0
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x191a0 -> 848b4848246c8b48
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x191a0)
[main] [INS] [000191a0] mov	rbp, qword ptr [rsp + 0x48]                               ; rbp = 0x7f000008b698 -> 0
[main] [INS] [000191a5] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000045 -> "\K)ab"
[main] [INS] [000191ad] lea	rsi, [rsp + 0x18c]                                        ; rsi = 0x7f000008b1cc -> 4b
[main] [INS] [000191b5] mov	ecx, dword ptr [r15 + 0x70]                               ; ecx = 0x0
[main] [INS] [000191b9] mov	r8d, dword ptr [rsp + 0x30]                               ; r8d = 0x4000 -> 24a880
[main] [INS] [000191be] lea	rdi, [rsp + 0x1a0]                                        ; rdi = 0x7f000008b1e0 -> 90000045
[main] [INS] [000191c6] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [000191c9] add	qword ptr [rip + 0x231667], 1                             ; store(0x24a838,0x1)
[main] [INS] [000191d1] mov	rdx, rbp                                                  ; rdx = 0x7f000008b698 -> 0
[main] [INS] [000191d4] mov	qword ptr [rsp + 0x1a8], rax                              ; store(0x7f000008b1e8,0x90000045) -> "\K)ab"
[main] [INS] [000191dc] call	0x110c0                                                  ; call(0x110c0)
[main] [INS] [000110c0] push	r15                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [000110c2] push	r14                                                      ; push(0x9003a05a) -> 0
[main] [INS] [000110c4] push	r13                                                      ; push(0x5c)
[main] [INS] [000110c6] push	r12                                                      ; push(0x9003b900) -> 0
[main] [INS] [000110c8] push	rbp                                                      ; push(0x7f000008b698) -> 0
[main] [INS] [000110c9] push	rbx                                                      ; push(0x9003a052) -> 400ff76611d
[main] [INS] [000110ca] mov	rbx, rdi                                                  ; rbx = 0x7f000008b1e0 -> 90000045
[main] [INS] [000110cd] sub	rsp, 0x48                                                 ; rsp = 0x7f000008afc0 -> 0
[main] [INS] [000110d1] mov	rax, qword ptr [rdi]                                      ; rax = 0x90000045 -> "\K)ab"
[main] [INS] [000110d4] movzx	r10d, byte ptr [rax + 1]                                ; r10d = 0x4b
[main] [INS] [000110d9] lea	rbp, [rax + 1]                                            ; rbp = 0x90000046 -> "K)ab"
[main] [INS] [000110dd] test	r10d, r10d                                               ; 0x4b vs 0x4b
[main] [INS] [000110e0] jne	0x11118
[main] [INS] [00011118] lea	edi, [r10 - 0x30]                                         ; edi = 0x1b
[main] [INS] [0001111c] add	qword ptr [rip + 0x238a3c], 1                             ; store(0x249b60,0x1)
[main] [INS] [00011124] cmp	edi, 0x4a                                                 ; 0x1b vs 0x4a
[main] [INS] [00011127] jbe	0x11140
[main] [INS] [00011140] lea	r12, [rip + 0x2dbf9]                                      ; r12 = 0x3ed40 -> 0
[main] [INS] [00011147] mov	r11d, edi                                                 ; r11d = 0x1b
[main] [INS] [0001114a] movsx	r11d, word ptr [r12 + r11*2]                            ; r11d = 0xfffffffd
[main] [INS] [0001114f] cmp	r11d, 0                                                   ; 0xfffffffd vs 0x0
[main] [INS] [00011153] je	0x11170
[main] [INS] [00011155] jle	0x11680
[main] [INS] [00011680] add	qword ptr [rip + 0x2384f0], 1                             ; store(0x249b78,0x1)
[main] [INS] [00011688] neg	r11d                                                      ; r11d = 0x3
[main] [INS] [0001168b] cmp	r11d, 0xc                                                 ; 0x3 vs 0xc
[main] [INS] [0001168f] jne	0x11c84
[main] [INS] [00011c84] and	r8d, 0x20000000                                           ; r8d = 0x0
[main] [INS] [00011c8b] je	0x110fc
[main] [INS] [000110fc] mov	qword ptr [rbx], rbp                                      ; store(0x7f000008b1e0,0x90000046) -> "K)ab"
[main] [INS] [000110ff] mov	eax, r11d                                                 ; eax = 0x3
[main] [INS] [00011102] mov	dword ptr [rsi], r10d                                     ; store(0x7f000008b1cc,0x4b)
[main] [INS] [00011105] add	rsp, 0x48                                                 ; rsp = 0x7f000008b008 -> 9003a052
[main] [INS] [00011109] pop	rbx                                                       ; rbx = 0x9003a052 -> 400ff76611d
[main] [INS] [0001110a] pop	rbp                                                       ; rbp = 0x7f000008b698 -> 0
[main] [INS] [0001110b] pop	r12                                                       ; r12 = 0x9003b900 -> 0
[main] [INS] [0001110d] pop	r13                                                       ; r13 = 0x5c
[main] [INS] [0001110f] pop	r14                                                       ; r14 = 0x9003a05a -> 0
[main] [INS] [00011111] pop	r15                                                       ; r15 = 0x7f000008b6d0 -> "@"
[main] [INS] [00011113] ret	
[main] [INS] [000191e1] mov	ebp, dword ptr [rbp]                                      ; ebp = 0x0
[main] [INS] [000191e4] add	qword ptr [rip + 0x232524], 1                             ; store(0x24b710,0x1)
[main] [INS] [000191ec] test	ebp, ebp                                                 ; 0x0 vs 0x0
[main] [INS] [000191ee] jne	0x1c90d
[main] [INS] [000191f4] test	eax, eax                                                 ; 0x3 vs 0x3
[main] [INS] [000191f6] je	0x1b6bb
[main] [INS] [000191fc] cmp	eax, 0x1a                                                 ; 0x3 vs 0x1a
[main] [INS] [000191ff] je	0x1b6e2
[main] [INS] [00019205] cmp	eax, 0x19                                                 ; 0x3 vs 0x19
[main] [INS] [00019208] je	0x1b72e
[main] [INS] [0001920e] cmp	dword ptr [rsp + 0x34], -2                                ; 0x0 vs 0x-2
[main] [INS] [00019213] jne	0x1923f
[main] [INS] [0001923f] cmp	eax, 0x1b                                                 ; 0x3 vs 0x1b
[main] [INS] [00019242] je	0x1b4d3
[main] [INS] [00019248] cmp	eax, 0x1c                                                 ; 0x3 vs 0x1c
[main] [INS] [0001924b] je	0x1a8d9
[main] [INS] [00019251] test	eax, eax                                                 ; 0x3 vs 0x3
[main] [INS] [00019253] js	0x1c62a
[main] [INS] [00019259] cmp	eax, 0x16                                                 ; 0x3 vs 0x16
[main] [INS] [0001925c] je	0x19274
[main] [INS] [0001925e] cmp	eax, 0xf                                                  ; 0x3 vs 0xf
[main] [INS] [00019261] je	0x19274
[main] [INS] [00019263] add	qword ptr [rip + 0x232575], 1                             ; store(0x24b7e0,0x1)
[main] [INS] [0001926b] cmp	eax, 0x10                                                 ; 0x3 vs 0x10
[main] [INS] [0001926e] jne	0x1b946
[main] [INS] [0001b946] lea	edx, [rax - 4]                                            ; edx = 0xffffffff
[main] [INS] [0001b949] cmp	edx, 1                                                    ; 0xffffffff vs 0x1
[main] [INS] [0001b94c] jbe	0x1c942
[main] [INS] [0001b952] cmp	eax, 1                                                    ; 0x3 vs 0x1
[main] [INS] [0001b955] je	0x1c942
[main] [INS] [0001b95b] lea	edx, [rax - 6]                                            ; edx = 0xfffffffd
[main] [INS] [0001b95e] mov	rbx, r14                                                  ; rbx = 0x9003a05a -> 0
[main] [INS] [0001b961] cmp	edx, 0x10                                                 ; 0xfffffffd vs 0x10
[main] [INS] [0001b964] jbe	0x1b970
[main] [INS] [0001b966] add	qword ptr [rip + 0x22fe92], 1                             ; store(0x24b800,0x1)
[main] [INS] [0001b96e] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [0001b970] mov	rdx, qword ptr [r15 + 0x40]                               ; rdx = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [0001b974] sub	rdx, qword ptr [r15 + 0x20]                               ; rdx = 0x0
[main] [INS] [0001b978] cmp	eax, 0xe                                                  ; 0x3 vs 0xe
[main] [INS] [0001b97b] mov	qword ptr [rsp + 0x60], rdx                               ; store(0x7f000008b0a0,0x0)
[main] [INS] [0001b980] mov	edx, 0xd                                                  ; edx = 0xd
[main] [INS] [0001b985] je	0x1b991
[main] [INS] [0001b987] add	qword ptr [rip + 0x22fe79], 1                             ; store(0x24b808,0x1)
[main] [INS] [0001b98f] mov	edx, eax                                                  ; edx = 0x3
[main] [INS] [0001b991] mov	eax, dword ptr [rsp + 0x34]                               ; eax = 0x0
[main] [INS] [0001b995] add	qword ptr [rip + 0x22fe73], 1                             ; store(0x24b810,0x1)
[main] [INS] [0001b99d] add	r14, 1                                                    ; r14 = 0x9003a05b -> 0
[main] [INS] [0001b9a1] mov	byte ptr [r14 - 1], dl                                    ; store(0x9003a05a,0x3)
[main] [INS] [0001b9a5] mov	dword ptr [rsp + 0x5c], eax                               ; store(0x7f000008b09c,0x0)
[main] [INS] [0001b9a9] mov	eax, dword ptr [rsp + 0x40]                               ; eax = 0xfffffffe
[main] [INS] [0001b9ad] mov	dword ptr [rsp + 0x70], eax                               ; store(0x7f000008b0b0,0xfffffffe)
[main] [INS] [0001b9b1] mov	eax, dword ptr [rsp + 0x58]                               ; eax = 0x61
[main] [INS] [0001b9b5] mov	dword ptr [rsp + 0x74], eax                               ; store(0x7f000008b0b4,0x61)
[main] [INS] [0001b9b9] mov	eax, dword ptr [rsp + 0x44]                               ; eax = 0x0
[main] [INS] [0001b9bd] mov	dword ptr [rsp + 0x68], eax                               ; store(0x7f000008b0a8,0x0)
[main] [INS] [0001b9c1] add	qword ptr [rip + 0x22fe4f], 1                             ; store(0x24b818,0x1)
[main] [INS] [0001b9c9] mov	r8, qword ptr [rsp + 0x1a0]                               ; r8 = 0x90000046 -> "K)ab"
[main] [INS] [0001b9d1] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [0001b9d5] jmp	0x18e85                                                   ; jmp(0x18e85)
[main] [INS] [00018e85] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b860,0x1)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x90000047 -> ")ab"
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b1e0,0x90000047) -> ")ab"
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x29
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x29 vs 0x29
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00019aa0] add	rax, rdx                                                  ; rax = 0x7f000008c8d0 -> 0
[main] [INS] [00019aa3] cmp	qword ptr [r15 + 0x40], rax                               ; 0x7f000008b8d0 vs 0x7f000008c8d0
[main] [INS] [00019aa7] jbe	0x18f51
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x29 vs 0x29
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b090,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0xffffffff
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0xffffffff vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x29 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x29 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x9003a054 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0xffffffff
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xfffffffe
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001b3c8] mov	rax, qword ptr [rsp + 0x38]                               ; rax = 0x9003a054 -> 300000400ff76
[main] [INS] [0001b3cd] mov	rcx, qword ptr [rsp + 0x1a0]                              ; rcx = 0x90000047 -> ")ab"
[main] [INS] [0001b3d5] sub	rcx, qword ptr [r15 + 0x30]                               ; rcx = 0x6
[main] [INS] [0001b3d9] add	qword ptr [rip + 0x22f43f], 1                             ; store(0x24a820,0x1)
[main] [INS] [0001b3e1] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b078,0x0)
[main] [INS] [0001b3ea] movzx	edi, word ptr [rax + 2]                                 ; edi = 0x400
[main] [INS] [0001b3ee] mov	esi, edi                                                  ; esi = 0x400
[main] [INS] [0001b3f0] rol	si, 8                                                     ; si = 0x4
[main] [INS] [0001b3f4] movzx	esi, si                                                 ; esi = 0x4
[main] [INS] [0001b3f7] sub	ecx, esi                                                  ; ecx = 0x2
[main] [INS] [0001b3f9] mov	byte ptr [rax + 4], ch                                    ; store(0x9003a058,0x0)
[main] [INS] [0001b3fc] mov	byte ptr [rax + 5], cl                                    ; store(0x9003a059,0x2)
[main] [INS] [0001b3ff] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b0cc,0xfffffffe)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000047 -> ")ab"
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x9003a05b,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b078,0x9003a05b) -> ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x9003a061 -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000047 -> ")ab"
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x6
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x9003a05d,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x6
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x9003a05f,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x9003a05e,0x6)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x29 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x29
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc3d7
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x19897 -> f4894d0824448b48
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x19897)
[main] [INS] [00019897] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x0
[main] [INS] [0001989c] mov	r12, r14                                                  ; r12 = 0x9003a061 -> 0
[main] [INS] [0001989f] mov	r13, r15                                                  ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [000198a2] mov	r14, qword ptr [rsp + 0x1a0]                              ; r14 = 0x90000047 -> ")ab"
[main] [INS] [000198aa] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [000198ad] je	0x19dd6
[main] [INS] [00019dd6] add	qword ptr [rip + 0x230a7a], 1                             ; store(0x24a858,0x1)
[main] [INS] [00019dde] mov	eax, dword ptr [r13 + 0x70]                               ; eax = 0x0
[main] [INS] [00019de2] cmp	eax, dword ptr [rsp + 0x94]                               ; 0x0 vs 0x0
[main] [INS] [00019de9] jbe	0x19dfa
[main] [INS] [00019dfa] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x0 vs 0x0
[main] [INS] [00019e03] je	0x1a16f
[main] [INS] [0001a16f] mov	rax, qword ptr [rsp + 0xb8]                               ; rax = 0x9003a049 -> 300ff7600007d
[main] [INS] [0001a177] cmp	byte ptr [rax], 0x77                                      ; 0x7d vs 0x77
[main] [INS] [0001a17a] je	0x1a6cf
[main] [INS] [0001a180] mov	eax, dword ptr [rsp + 0x40]                               ; eax = 0xfffffffe
[main] [INS] [0001a184] add	qword ptr [rip + 0x23174c], 1                             ; store(0x24b8d8,0x1)
[main] [INS] [0001a18c] mov	dword ptr [rsp + 0xd0], eax                               ; store(0x7f000008b110,0xfffffffe)
[main] [INS] [0001a193] mov	eax, dword ptr [rsp + 0x34]                               ; eax = 0x0
[main] [INS] [0001a197] mov	dword ptr [rsp + 0xe0], eax                               ; store(0x7f000008b120,0x0)
[main] [INS] [0001a19e] mov	eax, dword ptr [rsp + 0x44]                               ; eax = 0x0
[main] [INS] [0001a1a2] mov	dword ptr [rsp + 0xf8], eax                               ; store(0x7f000008b138,0x0)
[main] [INS] [0001a1a9] mov	eax, dword ptr [rsp + 0x58]                               ; eax = 0x61
[main] [INS] [0001a1ad] mov	dword ptr [rsp + 0xe4], eax                               ; store(0x7f000008b124,0x61)
[main] [INS] [0001a1b4] mov	esi, dword ptr [rsp + 0x9c]                               ; esi = 0x0
[main] [INS] [0001a1bb] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0001a1bd] jne	0x1a797
[main] [INS] [0001a1c3] mov	rax, r12                                                  ; rax = 0x9003a061 -> 0
[main] [INS] [0001a1c6] sub	rax, qword ptr [rsp + 0xb8]                               ; rax = 0x18
[main] [INS] [0001a1ce] lea	rbx, [r12 + 3]                                            ; rbx = 0x9003a064 -> 0
[main] [INS] [0001a1d3] mov	qword ptr [rsp + 0x28], rbx                               ; store(0x7f000008b068,0x9003a064) -> 0
[main] [INS] [0001a1d8] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [0001a1da] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a1dd] cmp	byte ptr [r14], 0x7c                                      ; 0x29 vs 0x7c
[main] [INS] [0001a1e1] jne	0x1d053
[main] [INS] [0001d053] mov	rdi, qword ptr [rsp + 0xb8]                               ; rdi = 0x9003a049 -> 300ff7600007d
[main] [INS] [0001d05b] add	qword ptr [rip + 0x22e8fd], 1                             ; store(0x24b960,0x1)
[main] [INS] [0001d063] mov	r15, r12                                                  ; r15 = 0x9003a061 -> 0
[main] [INS] [0001d066] add	qword ptr [rip + 0x22e8fa], 1                             ; store(0x24b968,0x1)
[main] [INS] [0001d06e] mov	r11, r14                                                  ; r11 = 0x90000047 -> ")ab"
[main] [INS] [0001d071] mov	r12, r13                                                  ; r12 = 0x7f000008b6d0 -> "@"
[main] [INS] [0001d074] movzx	ebx, word ptr [rdi + 1]                                 ; ebx = 0x0
[main] [INS] [0001d078] mov	byte ptr [rdi + 2], al                                    ; store(0x9003a04b,0x18)
[main] [INS] [0001d07b] mov	byte ptr [rdi + 1], dl                                    ; store(0x9003a04a,0x0)
[main] [INS] [0001d07e] mov	ecx, ebx                                                  ; ecx = 0x0
[main] [INS] [0001d080] mov	word ptr [rsp + 8], bx                                    ; store(0x7f000008b048,0x0)
[main] [INS] [0001d085] rol	cx, 8                                                     ; cx = 0x0
[main] [INS] [0001d089] movzx	eax, cx                                                 ; eax = 0x0
[main] [INS] [0001d08c] movzx	ebx, cx                                                 ; ebx = 0x0
[main] [INS] [0001d08f] sub	rdi, rax                                                  ; rdi = 0x9003a049 -> 300ff7618007d
[main] [INS] [0001d092] mov	rax, qword ptr [rip + 0x22e8d7]                           ; rax = 0x0
[main] [INS] [0001d099] test	cx, cx                                                   ; 0x0 vs 0x0
[main] [INS] [0001d09c] mov	rsi, rdi                                                  ; rsi = 0x9003a049 -> 300ff7618007d
[main] [INS] [0001d09f] lea	rdx, [rax + 1]                                            ; rdx = 0x1
[main] [INS] [0001d0a3] je	0x1b761
[main] [INS] [0001b761] mov	rax, r15                                                  ; rax = 0x9003a061 -> 0
[main] [INS] [0001b764] sub	rax, qword ptr [rsp + 0xd8]                               ; rax = 0x18
[main] [INS] [0001b76c] mov	ecx, dword ptr [rsp + 0xfc]                               ; ecx = 0x0
[main] [INS] [0001b773] mov	byte ptr [r15], 0x78                                      ; store(0x9003a061,0x78)
[main] [INS] [0001b777] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [0001b779] mov	byte ptr [r15 + 2], al                                    ; store(0x9003a063,0x18)
[main] [INS] [0001b77d] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001b780] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [0001b782] mov	byte ptr [r15 + 1], dl                                    ; store(0x9003a062,0x0)
[main] [INS] [0001b786] je	0x1b83f
[main] [INS] [0001b83f] mov	eax, dword ptr [rsp + 0x94]                               ; eax = 0x0
[main] [INS] [0001b846] mov	rbx, qword ptr [rsp + 0x28]                               ; rbx = 0x9003a064 -> 0
[main] [INS] [0001b84b] mov	dword ptr [r12 + 0x70], eax                               ; store(0x7f000008b740,0x0)
[main] [INS] [0001b850] mov	rax, qword ptr [rsp + 0xc0]                               ; rax = 0x7f000008b488 -> 9003a049
[main] [INS] [0001b858] mov	qword ptr [rax], rbx                                      ; store(0x7f000008b488,0x9003a064) -> 0
[main] [INS] [0001b85b] mov	rax, qword ptr [rsp + 0xb0]                               ; rax = 0x7f000008b490 -> 90000044
[main] [INS] [0001b863] mov	ebx, dword ptr [rsp + 0xe4]                               ; ebx = 0x61
[main] [INS] [0001b86a] mov	qword ptr [rax], r11                                      ; store(0x7f000008b490,0x90000047) -> ")ab"
[main] [INS] [0001b86d] mov	rax, qword ptr [rsp + 0x138]                              ; rax = 0x7f000008b478 -> 0
[main] [INS] [0001b875] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b478,0x61)
[main] [INS] [0001b877] mov	rax, qword ptr [rsp + 0x140]                              ; rax = 0x7f000008b484 -> 9003a064fffffffe
[main] [INS] [0001b87f] mov	ebx, dword ptr [rsp + 0xe0]                               ; ebx = 0x0
[main] [INS] [0001b886] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b484,0x0)
[main] [INS] [0001b888] mov	rax, qword ptr [rsp + 0x148]                              ; rax = 0x7f000008b474 -> 6100000000
[main] [INS] [0001b890] mov	ebx, dword ptr [rsp + 0xf8]                               ; ebx = 0x0
[main] [INS] [0001b897] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b474,0x0)
[main] [INS] [0001b899] mov	rax, qword ptr [rsp + 0x150]                              ; rax = 0x7f000008b480 -> fffffffe
[main] [INS] [0001b8a1] mov	ebx, dword ptr [rsp + 0xd0]                               ; ebx = 0xfffffffe
[main] [INS] [0001b8a8] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b480,0xfffffffe)
[main] [INS] [0001b8aa] mov	rbx, qword ptr [rsp + 0x80]                               ; rbx = 0x0
[main] [INS] [0001b8b2] mov	eax, 1                                                    ; eax = 0x1
[main] [INS] [0001b8b7] test	rbx, rbx                                                 ; 0x0 vs 0x0
[main] [INS] [0001b8ba] je	0x19905
[main] [INS] [00019905] mov	rbx, qword ptr [rsp + 0x218]                              ; rbx = 0x59424d4f444e4100
[main] [INS] [0001990d] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [00019916] jne	0x1e4a2
[main] [INS] [0001991c] add	rsp, 0x228                                                ; rsp = 0x7f000008b268 -> 9003a049
[main] [INS] [00019923] pop	rbx                                                       ; rbx = 0x9003a049 -> 300ff7618007d
[main] [INS] [00019924] pop	rbp                                                       ; rbp = 0x7d
[main] [INS] [00019925] pop	r12                                                       ; r12 = 0x0
[main] [INS] [00019927] pop	r13                                                       ; r13 = 0x0
[main] [INS] [00019929] pop	r14                                                       ; r14 = 0x9003a049 -> 300ff7618007d
[main] [INS] [0001992b] pop	r15                                                       ; r15 = 0x7f000008b6d0 -> "@"
[main] [INS] [0001992d] ret	
[main] [INS] [0001972c] add	qword ptr [rip + 0x231f24], 1                             ; store(0x24b658,0x1)
[main] [INS] [00019734] add	rsp, 0x50                                                 ; rsp = 0x7f000008b2f0 -> 0
[main] [INS] [00019738] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [0001973a] je	0x1c90d
[main] [INS] [00019740] sub	dword ptr [r15 + 0x88], 1                                 ; store(0x7f000008b758,0x1)
[main] [INS] [00019748] cmp	ebp, 0x81                                                 ; 0x7d vs 0x81
[main] [INS] [0001974e] je	0x1ad07
[main] [INS] [00019754] cmp	r12d, 3                                                   ; 0x0 vs 0x3
[main] [INS] [00019758] jbe	0x1ad2e
[main] [INS] [0001ad2e] sub	dword ptr [r15 + 0x8c], 1                                 ; store(0x7f000008b75c,0x1)
[main] [INS] [0001ad36] add	qword ptr [rip + 0x230932], 1                             ; store(0x24b670,0x1)
[main] [INS] [0001ad3e] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000047 -> ")ab"
[main] [INS] [0001ad46] cmp	byte ptr [rax], 0x29                                      ; 0x29 vs 0x29
[main] [INS] [0001ad49] mov	r8, rax                                                   ; r8 = 0x90000047 -> ")ab"
[main] [INS] [0001ad4c] jne	0x1dd38
[main] [INS] [0001ad52] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [0001ad58] je	0x1c3fa
[main] [INS] [0001c3fa] cmp	ebp, 0x80                                                 ; 0x7d vs 0x80
[main] [INS] [0001c400] mov	r14, qword ptr [rsp + 0x198]                              ; r14 = 0x9003a064 -> 0
[main] [INS] [0001c408] jg	0x1cfdb
[main] [INS] [0001c40e] add	qword ptr [rip + 0x22f2b2], 1                             ; store(0x24b6c8,0x1)
[main] [INS] [0001c416] cmp	ebp, 0x7d                                                 ; 0x7d vs 0x7d
[main] [INS] [0001c419] jne	0x1d7df
[main] [INS] [0001c41f] mov	eax, dword ptr [rsp + 0x190]                              ; eax = 0xfffffffe
[main] [INS] [0001c426] add	qword ptr [rip + 0x22f2d2], 1                             ; store(0x24b700,0x1)
[main] [INS] [0001c42e] test	eax, eax                                                 ; 0xfffffffe vs 0xfffffffe
[main] [INS] [0001c430] js	0x1d7df
[main] [INS] [0001d7df] mov	eax, dword ptr [rsp + 0x34]                               ; eax = 0xfffffffe
[main] [INS] [0001d7e3] mov	dword ptr [rsp + 0x98], 0                                 ; store(0x7f000008b388,0x0)
[main] [INS] [0001d7ee] mov	dword ptr [rsp + 0x5c], eax                               ; store(0x7f000008b34c,0xfffffffe)
[main] [INS] [0001d7f2] mov	eax, dword ptr [rsp + 0x40]                               ; eax = 0xfffffffe
[main] [INS] [0001d7f6] mov	dword ptr [rsp + 0x70], eax                               ; store(0x7f000008b360,0xfffffffe)
[main] [INS] [0001d7fa] mov	eax, dword ptr [rsp + 0x58]                               ; eax = 0x0
[main] [INS] [0001d7fe] mov	dword ptr [rsp + 0x74], eax                               ; store(0x7f000008b364,0x0)
[main] [INS] [0001d802] mov	eax, dword ptr [rsp + 0x44]                               ; eax = 0x0
[main] [INS] [0001d806] mov	dword ptr [rsp + 0x68], eax                               ; store(0x7f000008b358,0x0)
[main] [INS] [0001d80a] jmp	0x194f2                                                   ; jmp(0x194f2)
[main] [INS] [000194f2] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [000194f6] jmp	0x18e8d                                                   ; jmp(0x18e8d)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x90000048 -> a43006261
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b490,0x90000048) -> a43006261
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x61
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x61 vs 0x61
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00019aa0] add	rax, rdx                                                  ; rax = 0x7f000008c8d0 -> 0
[main] [INS] [00019aa3] cmp	qword ptr [r15 + 0x40], rax                               ; 0x7f000008b8d0 vs 0x7f000008c8d0
[main] [INS] [00019aa7] jbe	0x18f51
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x61 vs 0x61
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b340,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0x37
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0x37 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x61 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x61 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x9003a043 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0x0
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xffffffff
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001b3c8] mov	rax, qword ptr [rsp + 0x38]                               ; rax = 0x9003a043 -> 7d00000000ff76
[main] [INS] [0001b3cd] mov	rcx, qword ptr [rsp + 0x1a0]                              ; rcx = 0x90000048 -> a43006261
[main] [INS] [0001b3d5] sub	rcx, qword ptr [r15 + 0x30]                               ; rcx = 0x7
[main] [INS] [0001b3d9] add	qword ptr [rip + 0x22f43f], 1                             ; store(0x24a820,0x1)
[main] [INS] [0001b3e1] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b328,0x0)
[main] [INS] [0001b3ea] movzx	edi, word ptr [rax + 2]                                 ; edi = 0x0
[main] [INS] [0001b3ee] mov	esi, edi                                                  ; esi = 0x0
[main] [INS] [0001b3f0] rol	si, 8                                                     ; si = 0x0
[main] [INS] [0001b3f4] movzx	esi, si                                                 ; esi = 0x0
[main] [INS] [0001b3f7] sub	ecx, esi                                                  ; ecx = 0x7
[main] [INS] [0001b3f9] mov	byte ptr [rax + 4], ch                                    ; store(0x9003a047,0x0)
[main] [INS] [0001b3fc] mov	byte ptr [rax + 5], cl                                    ; store(0x9003a048,0x7)
[main] [INS] [0001b3ff] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b37c,0xffffffff)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000048 -> a43006261
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x9003a064,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b328,0x9003a064) -> ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x9003a06a -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000048 -> a43006261
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x7
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x9003a066,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x7
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x9003a068,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x9003a067,0x7)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x61 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x61
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc4ee
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x199ae -> 4cea89440dfd8041
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x199ae)
[main] [INS] [000199ae] cmp	r13b, 0xd                                                 ; 0x61 vs 0xd
[main] [INS] [000199b2] mov	edx, r13d                                                 ; edx = 0x61
[main] [INS] [000199b5] mov	rbx, r14                                                  ; rbx = 0x9003a06a -> 0
[main] [INS] [000199b8] sete	al                                                       ; al = 0x0
[main] [INS] [000199bb] cmp	r13b, 0xa                                                 ; 0x61 vs 0xa
[main] [INS] [000199bf] sete	r12b                                                     ; r12b = 0x0
[main] [INS] [000199c3] or	r12d, eax                                                  ; r12d = 0x19900 -> 9c8b48c03118894c
[main] [INS] [000199c6] nop	word ptr cs:[rax + rax]                                   ; mem is (0x1824) -> 0
[main] [INS] [000199d0] add	qword ptr [rip + 0x231e50], 1                             ; store(0x24b828,0x1)
[main] [INS] [000199d8] mov	rax, qword ptr [r15 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [000199dc] sub	rax, qword ptr [r15 + 0x20]                               ; rax = 0x0
[main] [INS] [000199e0] test	byte ptr [rsp + 0x30], 1                                 ; 0x0 vs 0x1
[main] [INS] [000199e5] mov	qword ptr [rsp + 0x60], rax                               ; store(0x7f000008b350,0x0)
[main] [INS] [000199ea] mov	eax, 0x1e                                                 ; eax = 0x1e
[main] [INS] [000199ef] jne	0x199fe
[main] [INS] [000199f1] add	qword ptr [rip + 0x231e37], 1                             ; store(0x24b830,0x1)
[main] [INS] [000199f9] mov	eax, 0x1d                                                 ; eax = 0x1d
[main] [INS] [000199fe] add	qword ptr [rip + 0x231e32], 1                             ; store(0x24b838,0x1)
[main] [INS] [00019a06] test	r12b, r12b                                               ; 0x0 vs 0x0
[main] [INS] [00019a09] mov	byte ptr [rbx], al                                        ; store(0x9003a06a,0x1d)
[main] [INS] [00019a0b] lea	r14, [rbx + 2]                                            ; r14 = 0x9003a06c -> 0
[main] [INS] [00019a0f] mov	byte ptr [rbx + 1], dl                                    ; store(0x9003a06b,0x61)
[main] [INS] [00019a12] je	0x19a27
[main] [INS] [00019a27] cmp	dword ptr [rsp + 0x34], -2                                ; 0xfffffffe vs 0x-2
[main] [INS] [00019a2c] je	0x19ea0
[main] [INS] [00019ea0] movzx	eax, dl                                                 ; eax = 0x61
[main] [INS] [00019ea3] add	qword ptr [rip + 0x23199d], 1                             ; store(0x24b848,0x1)
[main] [INS] [00019eab] mov	r8, qword ptr [rsp + 0x1a0]                               ; r8 = 0x90000048 -> a43006261
[main] [INS] [00019eb3] mov	dword ptr [rsp + 0x58], eax                               ; store(0x7f000008b348,0x61)
[main] [INS] [00019eb7] mov	eax, dword ptr [rsp + 0x40]                               ; eax = 0xfffffffe
[main] [INS] [00019ebb] mov	dword ptr [rsp + 0x5c], 0xffffffff                        ; store(0x7f000008b34c,0xffffffff)
[main] [INS] [00019ec3] mov	dword ptr [rsp + 0x70], eax                               ; store(0x7f000008b360,0xfffffffe)
[main] [INS] [00019ec7] mov	eax, dword ptr [rsp + 0x44]                               ; eax = 0x0
[main] [INS] [00019ecb] mov	dword ptr [rsp + 0x68], eax                               ; store(0x7f000008b358,0x0)
[main] [INS] [00019ecf] mov	eax, dword ptr [rsp + 0x88]                               ; eax = 0x0
[main] [INS] [00019ed6] mov	dword ptr [rsp + 0x34], eax                               ; store(0x7f000008b324,0x0)
[main] [INS] [00019eda] jmp	0x194f2                                                   ; jmp(0x194f2)
[main] [INS] [000194f2] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [000194f6] jmp	0x18e8d                                                   ; jmp(0x18e8d)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x90000049 -> a430062
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b490,0x90000049) -> a430062
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x62
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x62 vs 0x62
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00019aa0] add	rax, rdx                                                  ; rax = 0x7f000008c8d0 -> 0
[main] [INS] [00019aa3] cmp	qword ptr [r15 + 0x40], rax                               ; 0x7f000008b8d0 vs 0x7f000008c8d0
[main] [INS] [00019aa7] jbe	0x18f51
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x62 vs 0x62
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x1
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b340,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0x38
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0x38 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x62 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x62 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x9003a064 vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0xffffffff
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xfffffffe
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001b3c8] mov	rax, qword ptr [rsp + 0x38]                               ; rax = 0x9003a064 -> 611d00000700ff76
[main] [INS] [0001b3cd] mov	rcx, qword ptr [rsp + 0x1a0]                              ; rcx = 0x90000049 -> a430062
[main] [INS] [0001b3d5] sub	rcx, qword ptr [r15 + 0x30]                               ; rcx = 0x8
[main] [INS] [0001b3d9] add	qword ptr [rip + 0x22f43f], 1                             ; store(0x24a820,0x1)
[main] [INS] [0001b3e1] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b328,0x0)
[main] [INS] [0001b3ea] movzx	edi, word ptr [rax + 2]                                 ; edi = 0x700
[main] [INS] [0001b3ee] mov	esi, edi                                                  ; esi = 0x700
[main] [INS] [0001b3f0] rol	si, 8                                                     ; si = 0x7
[main] [INS] [0001b3f4] movzx	esi, si                                                 ; esi = 0x7
[main] [INS] [0001b3f7] sub	ecx, esi                                                  ; ecx = 0x1
[main] [INS] [0001b3f9] mov	byte ptr [rax + 4], ch                                    ; store(0x9003a068,0x0)
[main] [INS] [0001b3fc] mov	byte ptr [rax + 5], cl                                    ; store(0x9003a069,0x1)
[main] [INS] [0001b3ff] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b37c,0xfffffffe)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x90000049 -> a430062
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x9003a06c,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b328,0x9003a06c) -> ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x9003a072 -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x90000049 -> a430062
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x8
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x9003a06e,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x8
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x9003a070,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x9003a06f,0x8)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x62 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x62
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc4ee
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x199ae -> 4cea89440dfd8041
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x199ae)
[main] [INS] [000199ae] cmp	r13b, 0xd                                                 ; 0x62 vs 0xd
[main] [INS] [000199b2] mov	edx, r13d                                                 ; edx = 0x62
[main] [INS] [000199b5] mov	rbx, r14                                                  ; rbx = 0x9003a072 -> 0
[main] [INS] [000199b8] sete	al                                                       ; al = 0x0
[main] [INS] [000199bb] cmp	r13b, 0xa                                                 ; 0x62 vs 0xa
[main] [INS] [000199bf] sete	r12b                                                     ; r12b = 0x0
[main] [INS] [000199c3] or	r12d, eax                                                  ; r12d = 0x19900 -> 9c8b48c03118894c
[main] [INS] [000199c6] nop	word ptr cs:[rax + rax]                                   ; mem is (0x1824) -> 0
[main] [INS] [000199d0] add	qword ptr [rip + 0x231e50], 1                             ; store(0x24b828,0x1)
[main] [INS] [000199d8] mov	rax, qword ptr [r15 + 0x40]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [000199dc] sub	rax, qword ptr [r15 + 0x20]                               ; rax = 0x0
[main] [INS] [000199e0] test	byte ptr [rsp + 0x30], 1                                 ; 0x0 vs 0x1
[main] [INS] [000199e5] mov	qword ptr [rsp + 0x60], rax                               ; store(0x7f000008b350,0x0)
[main] [INS] [000199ea] mov	eax, 0x1e                                                 ; eax = 0x1e
[main] [INS] [000199ef] jne	0x199fe
[main] [INS] [000199f1] add	qword ptr [rip + 0x231e37], 1                             ; store(0x24b830,0x1)
[main] [INS] [000199f9] mov	eax, 0x1d                                                 ; eax = 0x1d
[main] [INS] [000199fe] add	qword ptr [rip + 0x231e32], 1                             ; store(0x24b838,0x1)
[main] [INS] [00019a06] test	r12b, r12b                                               ; 0x0 vs 0x0
[main] [INS] [00019a09] mov	byte ptr [rbx], al                                        ; store(0x9003a072,0x1d)
[main] [INS] [00019a0b] lea	r14, [rbx + 2]                                            ; r14 = 0x9003a074 -> 0
[main] [INS] [00019a0f] mov	byte ptr [rbx + 1], dl                                    ; store(0x9003a073,0x62)
[main] [INS] [00019a12] je	0x19a27
[main] [INS] [00019a27] cmp	dword ptr [rsp + 0x34], -2                                ; 0x0 vs 0x-2
[main] [INS] [00019a2c] je	0x19ea0
[main] [INS] [00019a32] mov	edi, dword ptr [rsp + 0x34]                               ; edi = 0x0
[main] [INS] [00019a36] movzx	eax, byte ptr [rbx + 1]                                 ; eax = 0x62
[main] [INS] [00019a3a] mov	edx, dword ptr [rsp + 0x88]                               ; edx = 0x0
[main] [INS] [00019a41] or	edx, dword ptr [r15 + 0x98]                                ; edx = 0x0
[main] [INS] [00019a48] mov	ecx, dword ptr [rsp + 0x40]                               ; ecx = 0xfffffffe
[main] [INS] [00019a4c] mov	esi, dword ptr [rsp + 0x58]                               ; esi = 0x61
[main] [INS] [00019a50] mov	dword ptr [rsp + 0x5c], edi                               ; store(0x7f000008b34c,0x0)
[main] [INS] [00019a54] mov	edi, dword ptr [rsp + 0x44]                               ; edi = 0x0
[main] [INS] [00019a58] add	qword ptr [rip + 0x231df0], 1                             ; store(0x24b850,0x1)
[main] [INS] [00019a60] mov	r8, qword ptr [rsp + 0x1a0]                               ; r8 = 0x90000049 -> a430062
[main] [INS] [00019a68] mov	dword ptr [rsp + 0x70], ecx                               ; store(0x7f000008b360,0xfffffffe)
[main] [INS] [00019a6c] mov	dword ptr [rsp + 0x74], esi                               ; store(0x7f000008b364,0x61)
[main] [INS] [00019a70] mov	dword ptr [rsp + 0x68], edi                               ; store(0x7f000008b358,0x0)
[main] [INS] [00019a74] mov	dword ptr [rsp + 0x40], edx                               ; store(0x7f000008b330,0x0)
[main] [INS] [00019a78] mov	dword ptr [rsp + 0x44], eax                               ; store(0x7f000008b334,0x62)
[main] [INS] [00019a7c] jmp	0x194f2                                                   ; jmp(0x194f2)
[main] [INS] [000194f2] mov	rax, qword ptr [r15 + 0x20]                               ; rax = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [000194f6] jmp	0x18e8d                                                   ; jmp(0x18e8d)
[main] [INS] [00018e8d] add	qword ptr [rip + 0x2329d3], 1                             ; store(0x24b868,0x1)
[main] [INS] [00018e95] add	r8, 1                                                     ; r8 = 0x9000004a -> a4300
[main] [INS] [00018e99] mov	qword ptr [rsp + 0x1a0], r8                               ; store(0x7f000008b490,0x9000004a) -> a4300
[main] [INS] [00018ea1] movzx	r13d, byte ptr [r8]                                     ; r13d = 0x0
[main] [INS] [00018ea5] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [00018ea8] jne	0x18ed1
[main] [INS] [00018eaa] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x0
[main] [INS] [00018eaf] test	rcx, rcx                                                 ; 0x0 vs 0x0
[main] [INS] [00018eb2] je	0x18ed1
[main] [INS] [00018ed1] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [00018ed7] movsxd	rdx, dword ptr [r15 + 0x6c]                            ; rdx = 0x1000 -> "ELF"
[main] [INS] [00018edb] je	0x19aa0
[main] [INS] [00019aa0] add	rax, rdx                                                  ; rax = 0x7f000008c8d0 -> 0
[main] [INS] [00019aa3] cmp	qword ptr [r15 + 0x40], rax                               ; 0x7f000008b8d0 vs 0x7f000008c8d0
[main] [INS] [00019aa7] jbe	0x18f51
[main] [INS] [00018f51] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [00018f54] setne	r12b                                                    ; r12b = 0x0
[main] [INS] [00018f58] and	r12b, byte ptr [rsp + 0x20]                               ; r12b = 0x0
[main] [INS] [00018f5d] jne	0x18e50
[main] [INS] [00018f63] mov	eax, dword ptr [rsp + 0x30]                               ; eax = 0x4000 -> 24a880
[main] [INS] [00018f67] add	qword ptr [rip + 0x2317e9], 1                             ; store(0x24a758,0x1)
[main] [INS] [00018f6f] and	eax, 8                                                    ; eax = 0x0
[main] [INS] [00018f72] mov	dword ptr [rsp + 0x50], eax                               ; store(0x7f000008b340,0x0)
[main] [INS] [00018f76] jne	0x19b30
[main] [INS] [00018f7c] lea	eax, [r13 - 0x2a]                                         ; eax = 0xffffffd6
[main] [INS] [00018f80] cmp	eax, 1                                                    ; 0xffffffd6 vs 0x1
[main] [INS] [00018f83] jbe	0x19b00
[main] [INS] [00018f89] cmp	r13d, 0x3f                                                ; 0x0 vs 0x3f
[main] [INS] [00018f8d] je	0x19b00
[main] [INS] [00018f93] add	qword ptr [rip + 0x23184d], 1                             ; store(0x24a7e8,0x1)
[main] [INS] [00018f9b] cmp	r13d, 0x7b                                                ; 0x0 vs 0x7b
[main] [INS] [00018f9f] je	0x19acd
[main] [INS] [00018fa5] mov	edx, dword ptr [rsp + 0x30]                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018fa9] and	edx, 0x4000                                               ; edx = 0x4000 -> 24a880
[main] [INS] [00018faf] cmp	qword ptr [rsp + 0x38], 0                                 ; 0x9003a06c vs 0x0
[main] [INS] [00018fb5] je	0x1e4a7
[main] [INS] [00018fbb] add	qword ptr [rip + 0x231845], 1                             ; store(0x24a808,0x1)
[main] [INS] [00018fc3] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [00018fc9] je	0x19e68
[main] [INS] [00019e68] mov	eax, dword ptr [rsp + 0x8c]                               ; eax = 0xfffffffe
[main] [INS] [00019e6f] add	qword ptr [rip + 0x230999], 1                             ; store(0x24a810,0x1)
[main] [INS] [00019e77] test	eax, eax                                                 ; 0xfffffffe vs 0xfffffffe
[main] [INS] [00019e79] lea	r9d, [rax - 1]                                            ; r9d = 0xfffffffd
[main] [INS] [00019e7d] jle	0x1a511
[main] [INS] [0001a511] add	qword ptr [rip + 0x2302ff], 1                             ; store(0x24a818,0x1)
[main] [INS] [0001a519] cmp	qword ptr [rsp + 8], 0                                    ; 0x0 vs 0x0
[main] [INS] [0001a51f] je	0x1b3c8
[main] [INS] [0001b3c8] mov	rax, qword ptr [rsp + 0x38]                               ; rax = 0x9003a06c -> 621d00000800ff76
[main] [INS] [0001b3cd] mov	rcx, qword ptr [rsp + 0x1a0]                              ; rcx = 0x9000004a -> a4300
[main] [INS] [0001b3d5] sub	rcx, qword ptr [r15 + 0x30]                               ; rcx = 0x9
[main] [INS] [0001b3d9] add	qword ptr [rip + 0x22f43f], 1                             ; store(0x24a820,0x1)
[main] [INS] [0001b3e1] mov	qword ptr [rsp + 0x38], 0                                 ; store(0x7f000008b328,0x0)
[main] [INS] [0001b3ea] movzx	edi, word ptr [rax + 2]                                 ; edi = 0x800
[main] [INS] [0001b3ee] mov	esi, edi                                                  ; esi = 0x800
[main] [INS] [0001b3f0] rol	si, 8                                                     ; si = 0x8
[main] [INS] [0001b3f4] movzx	esi, si                                                 ; esi = 0x8
[main] [INS] [0001b3f7] sub	ecx, esi                                                  ; ecx = 0x1
[main] [INS] [0001b3f9] mov	byte ptr [rax + 4], ch                                    ; store(0x9003a070,0x0)
[main] [INS] [0001b3fc] mov	byte ptr [rax + 5], cl                                    ; store(0x9003a071,0x1)
[main] [INS] [0001b3ff] jmp	0x19e83                                                   ; jmp(0x19e83)
[main] [INS] [00019e83] test	edx, edx                                                 ; 0x4000 vs 0x4000
[main] [INS] [00019e85] jne	0x1a213
[main] [INS] [0001a213] add	qword ptr [rip + 0x23060d], 1                             ; store(0x24a828,0x1)
[main] [INS] [0001a21b] mov	dword ptr [rsp + 0x8c], r9d                               ; store(0x7f000008b37c,0xfffffffd)
[main] [INS] [0001a223] mov	rax, qword ptr [rsp + 0x1a0]                              ; rax = 0x9000004a -> a4300
[main] [INS] [0001a22b] mov	esi, 0xffffff76                                           ; esi = 0xffffff76
[main] [INS] [0001a230] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [0001a232] mov	word ptr [r14], si                                        ; store(0x9003a074,0xff76) -> 2174c53944010023
[main] [INS] [0001a236] mov	qword ptr [rsp + 0x38], r14                               ; store(0x7f000008b328,0x9003a074) -> ff76
[main] [INS] [0001a23b] add	r14, 6                                                    ; r14 = 0x9003a07a -> 0
[main] [INS] [0001a23f] add	qword ptr [rip + 0x2305e9], 1                             ; store(0x24a830,0x1)
[main] [INS] [0001a247] mov	rdx, rax                                                  ; rdx = 0x9000004a -> a4300
[main] [INS] [0001a24a] sub	rdx, qword ptr [r15 + 0x30]                               ; rdx = 0x9
[main] [INS] [0001a24e] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a251] mov	byte ptr [r14 - 4], dl                                    ; store(0x9003a076,0x0)
[main] [INS] [0001a255] sub	rax, qword ptr [r15 + 0x30]                               ; rax = 0x9
[main] [INS] [0001a259] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0001a25b] mov	word ptr [r14 - 2], di                                    ; store(0x9003a078,0x0)
[main] [INS] [0001a260] mov	byte ptr [r14 - 3], al                                    ; store(0x9003a077,0x9)
[main] [INS] [0001a264] jmp	0x18fe0                                                   ; jmp(0x18fe0)
[main] [INS] [00018fe0] cmp	r13d, 0x7c                                                ; 0x0 vs 0x7c
[main] [INS] [00018fe4] ja	0x199ae
[main] [INS] [00018fea] lea	rdi, [rip + 0x244cf]                                      ; rdi = 0x3d4c0 -> fffdc4eefffdc3d7
[main] [INS] [00018ff1] mov	eax, r13d                                                 ; eax = 0x0
[main] [INS] [00018ff4] movsxd	rax, dword ptr [rdi + rax*4]                           ; rax = 0xfffffffffffdc3d7
[main] [INS] [00018ff8] add	rax, rdi                                                  ; rax = 0x19897 -> f4894d0824448b48
[main] [INS] [00018ffb] jmp	rax                                                       ; jmp(0x19897)
[main] [INS] [00019897] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x0
[main] [INS] [0001989c] mov	r12, r14                                                  ; r12 = 0x9003a07a -> 0
[main] [INS] [0001989f] mov	r13, r15                                                  ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [000198a2] mov	r14, qword ptr [rsp + 0x1a0]                              ; r14 = 0x9000004a -> a4300
[main] [INS] [000198aa] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [000198ad] je	0x19dd6
[main] [INS] [00019dd6] add	qword ptr [rip + 0x230a7a], 1                             ; store(0x24a858,0x1)
[main] [INS] [00019dde] mov	eax, dword ptr [r13 + 0x70]                               ; eax = 0x0
[main] [INS] [00019de2] cmp	eax, dword ptr [rsp + 0x94]                               ; 0x0 vs 0x0
[main] [INS] [00019de9] jbe	0x19dfa
[main] [INS] [00019dfa] cmp	qword ptr [rsp + 0x80], 0                                 ; 0x0 vs 0x0
[main] [INS] [00019e03] je	0x1a16f
[main] [INS] [0001a16f] mov	rax, qword ptr [rsp + 0xb8]                               ; rax = 0x9003a040 -> ff76000083
[main] [INS] [0001a177] cmp	byte ptr [rax], 0x77                                      ; 0x83 vs 0x77
[main] [INS] [0001a17a] je	0x1a6cf
[main] [INS] [0001a180] mov	eax, dword ptr [rsp + 0x40]                               ; eax = 0x0
[main] [INS] [0001a184] add	qword ptr [rip + 0x23174c], 1                             ; store(0x24b8d8,0x1)
[main] [INS] [0001a18c] mov	dword ptr [rsp + 0xd0], eax                               ; store(0x7f000008b3c0,0x0)
[main] [INS] [0001a193] mov	eax, dword ptr [rsp + 0x34]                               ; eax = 0x0
[main] [INS] [0001a197] mov	dword ptr [rsp + 0xe0], eax                               ; store(0x7f000008b3d0,0x0)
[main] [INS] [0001a19e] mov	eax, dword ptr [rsp + 0x44]                               ; eax = 0x62
[main] [INS] [0001a1a2] mov	dword ptr [rsp + 0xf8], eax                               ; store(0x7f000008b3e8,0x62)
[main] [INS] [0001a1a9] mov	eax, dword ptr [rsp + 0x58]                               ; eax = 0x61
[main] [INS] [0001a1ad] mov	dword ptr [rsp + 0xe4], eax                               ; store(0x7f000008b3d4,0x61)
[main] [INS] [0001a1b4] mov	esi, dword ptr [rsp + 0x9c]                               ; esi = 0x0
[main] [INS] [0001a1bb] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0001a1bd] jne	0x1a797
[main] [INS] [0001a1c3] mov	rax, r12                                                  ; rax = 0x9003a07a -> 0
[main] [INS] [0001a1c6] sub	rax, qword ptr [rsp + 0xb8]                               ; rax = 0x3a
[main] [INS] [0001a1ce] lea	rbx, [r12 + 3]                                            ; rbx = 0x9003a07d -> 0
[main] [INS] [0001a1d3] mov	qword ptr [rsp + 0x28], rbx                               ; store(0x7f000008b318,0x9003a07d) -> 0
[main] [INS] [0001a1d8] mov	edx, eax                                                  ; edx = 0x3a
[main] [INS] [0001a1da] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001a1dd] cmp	byte ptr [r14], 0x7c                                      ; 0x0 vs 0x7c
[main] [INS] [0001a1e1] jne	0x1d053
[main] [INS] [0001d053] mov	rdi, qword ptr [rsp + 0xb8]                               ; rdi = 0x9003a040 -> ff76000083
[main] [INS] [0001d05b] add	qword ptr [rip + 0x22e8fd], 1                             ; store(0x24b960,0x1)
[main] [INS] [0001d063] mov	r15, r12                                                  ; r15 = 0x9003a07a -> 0
[main] [INS] [0001d066] add	qword ptr [rip + 0x22e8fa], 1                             ; store(0x24b968,0x1)
[main] [INS] [0001d06e] mov	r11, r14                                                  ; r11 = 0x9000004a -> a4300
[main] [INS] [0001d071] mov	r12, r13                                                  ; r12 = 0x7f000008b6d0 -> "@"
[main] [INS] [0001d074] movzx	ebx, word ptr [rdi + 1]                                 ; ebx = 0x0
[main] [INS] [0001d078] mov	byte ptr [rdi + 2], al                                    ; store(0x9003a042,0x3a)
[main] [INS] [0001d07b] mov	byte ptr [rdi + 1], dl                                    ; store(0x9003a041,0x0)
[main] [INS] [0001d07e] mov	ecx, ebx                                                  ; ecx = 0x0
[main] [INS] [0001d080] mov	word ptr [rsp + 8], bx                                    ; store(0x7f000008b2f8,0x0)
[main] [INS] [0001d085] rol	cx, 8                                                     ; cx = 0x0
[main] [INS] [0001d089] movzx	eax, cx                                                 ; eax = 0x0
[main] [INS] [0001d08c] movzx	ebx, cx                                                 ; ebx = 0x0
[main] [INS] [0001d08f] sub	rdi, rax                                                  ; rdi = 0x9003a040 -> ff763a0083
[main] [INS] [0001d092] mov	rax, qword ptr [rip + 0x22e8d7]                           ; rax = 0x0
[main] [INS] [0001d099] test	cx, cx                                                   ; 0x0 vs 0x0
[main] [INS] [0001d09c] mov	rsi, rdi                                                  ; rsi = 0x9003a040 -> ff763a0083
[main] [INS] [0001d09f] lea	rdx, [rax + 1]                                            ; rdx = 0x1
[main] [INS] [0001d0a3] je	0x1b761
[main] [INS] [0001b761] mov	rax, r15                                                  ; rax = 0x9003a07a -> 0
[main] [INS] [0001b764] sub	rax, qword ptr [rsp + 0xd8]                               ; rax = 0x3a
[main] [INS] [0001b76c] mov	ecx, dword ptr [rsp + 0xfc]                               ; ecx = 0x0
[main] [INS] [0001b773] mov	byte ptr [r15], 0x78                                      ; store(0x9003a07a,0x78)
[main] [INS] [0001b777] mov	edx, eax                                                  ; edx = 0x3a
[main] [INS] [0001b779] mov	byte ptr [r15 + 2], al                                    ; store(0x9003a07c,0x3a)
[main] [INS] [0001b77d] sar	edx, 8                                                    ; edx = 0x0
[main] [INS] [0001b780] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [0001b782] mov	byte ptr [r15 + 1], dl                                    ; store(0x9003a07b,0x0)
[main] [INS] [0001b786] je	0x1b83f
[main] [INS] [0001b83f] mov	eax, dword ptr [rsp + 0x94]                               ; eax = 0x0
[main] [INS] [0001b846] mov	rbx, qword ptr [rsp + 0x28]                               ; rbx = 0x9003a07d -> 0
[main] [INS] [0001b84b] mov	dword ptr [r12 + 0x70], eax                               ; store(0x7f000008b740,0x0)
[main] [INS] [0001b850] mov	rax, qword ptr [rsp + 0xc0]                               ; rax = 0x7f000008b6a0 -> 9003a040
[main] [INS] [0001b858] mov	qword ptr [rax], rbx                                      ; store(0x7f000008b6a0,0x9003a07d) -> 0
[main] [INS] [0001b85b] mov	rax, qword ptr [rsp + 0xb0]                               ; rax = 0x7f000008b6a8 -> 90000041
[main] [INS] [0001b863] mov	ebx, dword ptr [rsp + 0xe4]                               ; ebx = 0x61
[main] [INS] [0001b86a] mov	qword ptr [rax], r11                                      ; store(0x7f000008b6a8,0x9000004a) -> a4300
[main] [INS] [0001b86d] mov	rax, qword ptr [rsp + 0x138]                              ; rax = 0x7f000008b690 -> 0
[main] [INS] [0001b875] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b690,0x61)
[main] [INS] [0001b877] mov	rax, qword ptr [rsp + 0x140]                              ; rax = 0x7f000008b688 -> fffffffefffffffe
[main] [INS] [0001b87f] mov	ebx, dword ptr [rsp + 0xe0]                               ; ebx = 0x0
[main] [INS] [0001b886] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b688,0x0)
[main] [INS] [0001b888] mov	rax, qword ptr [rsp + 0x148]                              ; rax = 0x7f000008b694 -> 0
[main] [INS] [0001b890] mov	ebx, dword ptr [rsp + 0xf8]                               ; ebx = 0x62
[main] [INS] [0001b897] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b694,0x62)
[main] [INS] [0001b899] mov	rax, qword ptr [rsp + 0x150]                              ; rax = 0x7f000008b68c -> 61fffffffe
[main] [INS] [0001b8a1] mov	ebx, dword ptr [rsp + 0xd0]                               ; ebx = 0x0
[main] [INS] [0001b8a8] mov	dword ptr [rax], ebx                                      ; store(0x7f000008b68c,0x0)
[main] [INS] [0001b8aa] mov	rbx, qword ptr [rsp + 0x80]                               ; rbx = 0x0
[main] [INS] [0001b8b2] mov	eax, 1                                                    ; eax = 0x1
[main] [INS] [0001b8b7] test	rbx, rbx                                                 ; 0x0 vs 0x0
[main] [INS] [0001b8ba] je	0x19905
[main] [INS] [00019905] mov	rbx, qword ptr [rsp + 0x218]                              ; rbx = 0x59424d4f444e4100
[main] [INS] [0001990d] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [00019916] jne	0x1e4a2
[main] [INS] [0001991c] add	rsp, 0x228                                                ; rsp = 0x7f000008b518 -> 40
[main] [INS] [00019923] pop	rbx                                                       ; rbx = 0x40
[main] [INS] [00019924] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [00019925] pop	r12                                                       ; r12 = 0x9003a040 -> ff763a0083
[main] [INS] [00019927] pop	r13                                                       ; r13 = 0x9003a040 -> ff763a0083
[main] [INS] [00019929] pop	r14                                                       ; r14 = 0x0
[main] [INS] [0001992b] pop	r15                                                       ; r15 = 0x9003a000 -> "ERCP~"
[main] [INS] [0001992d] ret	
[main] [INS] [00020837] mov	eax, dword ptr [rsp + 0x1f0]                              ; eax = 0x0
[main] [INS] [0002083e] add	qword ptr [rip + 0x22b632], 1                             ; store(0x24be78,0x1)
[main] [INS] [00020846] mov	word ptr [r15 + 0x1e], ax                                 ; store(0x9003a01e,0x0)
[main] [INS] [0002084b] mov	eax, dword ptr [rsp + 0x1fc]                              ; eax = 0x0
[main] [INS] [00020852] mov	word ptr [r15 + 0x20], ax                                 ; store(0x9003a020,0x0)
[main] [INS] [00020857] mov	eax, dword ptr [rsp + 0x1f8]                              ; eax = 0x0
[main] [INS] [0002085e] mov	word ptr [r15 + 0x1c], ax                                 ; store(0x9003a01c,0x0)
[main] [INS] [00020863] mov	eax, dword ptr [rsp + 0x214]                              ; eax = 0x0
[main] [INS] [0002086a] add	rsp, 0x50                                                 ; rsp = 0x7f000008b5a0 -> 0
[main] [INS] [0002086e] mov	r8d, dword ptr [rsp + 0x1cc]                              ; r8d = 0x0
[main] [INS] [00020876] mov	r10, qword ptr [rsp + 0x20]                               ; r10 = 0x90000041 -> "(?=a\K)a"
[main] [INS] [0002087b] mov	r11d, dword ptr [rsp + 0x28]                              ; r11d = 0x4000 -> 24a880
[main] [INS] [00020880] or	eax, 1                                                     ; eax = 0x1
[main] [INS] [00020883] test	r8d, r8d                                                 ; 0x0 vs 0x0
[main] [INS] [00020886] mov	dword ptr [r15 + 0xc], eax                                ; store(0x9003a00c,0x1)
[main] [INS] [0002088a] je	0x208aa
[main] [INS] [000208aa] mov	edi, dword ptr [rsp + 0xf8]                               ; edi = 0x0
[main] [INS] [000208b1] test	edi, edi                                                 ; 0x0 vs 0x0
[main] [INS] [000208b3] jne	0x208dd
[main] [INS] [000208b5] mov	rax, qword ptr [rsp + 0x108]                              ; rax = 0x9000004a -> a4300
[main] [INS] [000208bd] add	qword ptr [rip + 0x22b5c3], 1                             ; store(0x24be88,0x1)
[main] [INS] [000208c5] cmp	byte ptr [rax], 0                                         ; 0x0 vs 0x0
[main] [INS] [000208c8] je	0x208dd
[main] [INS] [000208dd] mov	rax, qword ptr [rsp + 0x100]                              ; rax = 0x9003a07d -> 0
[main] [INS] [000208e5] lea	rdx, [rax + 1]                                            ; rdx = 0x9003a07e -> 0
[main] [INS] [000208e9] mov	qword ptr [rsp + 0x100], rdx                              ; store(0x7f000008b6a0,0x9003a07e) -> 0
[main] [INS] [000208f1] mov	byte ptr [rax], 0                                         ; store(0x9003a07d,0x0)
[main] [INS] [000208f4] mov	rax, qword ptr [rsp + 0x100]                              ; rax = 0x9003a07e -> 0
[main] [INS] [000208fc] movsxd	rdx, dword ptr [rsp + 0xe4]                            ; rdx = 0x3e
[main] [INS] [00020904] sub	rax, r13                                                  ; rax = 0x3e
[main] [INS] [00020907] cmp	rax, rdx                                                  ; 0x3e vs 0x3e
[main] [INS] [0002090a] jle	0x20a41
[main] [INS] [00020a41] mov	rdx, qword ptr [rsp + 0x170]                              ; rdx = 0x7f000008b8d0 -> ff76621d000083
[main] [INS] [00020a49] cmp	rdx, qword ptr [rsp + 0x150]                              ; 0x7f000008b8d0 vs 0x7f000008b8d0
[main] [INS] [00020a51] jbe	0x20939
[main] [INS] [00020939] cmp	dword ptr [rsp + 0x19c], 0x1000                           ; 0x1000 vs 0x1000
[main] [INS] [00020944] jle	0x20970
[main] [INS] [00020970] mov	edx, dword ptr [rsp + 0xf8]                               ; edx = 0x0
[main] [INS] [00020977] mov	qword ptr [rsp + 0x150], 0                                ; store(0x7f000008b6f0,0x0)
[main] [INS] [00020983] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [00020985] jne	0x209b2
[main] [INS] [00020987] movzx	eax, word ptr [r15 + 0x1e]                              ; eax = 0x0
[main] [INS] [0002098c] add	qword ptr [rip + 0x22b554], 1                             ; store(0x24bee8,0x1)
[main] [INS] [00020994] cmp	word ptr [r15 + 0x20], ax                                 ; 0x0 vs 0x0
[main] [INS] [00020999] jbe	0x20bb2
[main] [INS] [00020bb2] add	qword ptr [rip + 0x22b33e], 1                             ; store(0x24bef8,0x1)
[main] [INS] [00020bba] and	r11d, 0x20000                                             ; r11d = 0x0
[main] [INS] [00020bc1] je	0x20fb4
[main] [INS] [00020fb4] movzx	eax, byte ptr [r13]                                     ; eax = 0x83
[main] [INS] [00020fb9] add	qword ptr [rip + 0x22af3f], 1                             ; store(0x24bf00,0x1)
[main] [INS] [00020fc1] add	qword ptr [rip + 0x229597], 1                             ; store(0x24a560,0x1)
[main] [INS] [00020fc9] cmp	al, 0xa1                                                  ; 0x83 vs 0xa1
[main] [INS] [00020fcb] ja	0x21144
[main] [INS] [00020fd1] lea	r12, [rsp + 0x110]                                        ; r12 = 0x7f000008b6b0 -> 0
[main] [INS] [00020fd9] mov	rbx, r13                                                  ; rbx = 0x9003a040 -> ff763a0083
[main] [INS] [00020fdc] mov	qword ptr [rsp + 0x20], r10                               ; store(0x7f000008b5c0,0x90000041) -> "(?=a\K)a"
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x62
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x62 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0x15
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x15 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x83 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x83
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x83 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x83 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x83 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x83
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x3
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a043 -> 7d07000000ff76
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x76
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x55
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x55 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0x8
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x8 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x76 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x76 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x76 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x76 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x76
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x6
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a049 -> 300ff7618007d
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x7d
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x7d vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x5c
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x5c vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0xf
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0xf vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x7d vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x7d
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x7d vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x7d vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x7d vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x7d
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x3
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a04c -> 611d01000300ff76
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x76
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x55
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x55 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0x8
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x8 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x76 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x76 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x76 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x76 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x76
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x6
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a052 -> 2000400ff76611d
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x1d
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x1d vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0xfffffffc
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0xfc vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0xffffffaf
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0xaf vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x1d vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x1d
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [00021127] cmp	al, 0x5e                                                  ; 0x1d vs 0x5e
[main] [INS] [00021129] jae	0x211c3
[main] [INS] [0002112f] cmp	al, 0x5a                                                  ; 0x1d vs 0x5a
[main] [INS] [00021131] ja	0x211a2
[main] [INS] [00021133] cmp	al, 0x55                                                  ; 0x1d vs 0x55
[main] [INS] [00021135] jae	0x211c3
[main] [INS] [0002113b] test	al, al                                                   ; 0x1d vs 0x1d
[main] [INS] [0002113d] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x1d
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x2
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a054 -> 760302000400ff76
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x76
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x55
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x55 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0x8
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x8 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x76 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x76 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x76 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x76 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x76
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x6
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a05a -> 7800000600ff7603
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x3
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x3 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0xffffffe2
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0xe2 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0xffffff95
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x95 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x3 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x3
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [00021127] cmp	al, 0x5e                                                  ; 0x3 vs 0x5e
[main] [INS] [00021129] jae	0x211c3
[main] [INS] [0002112f] cmp	al, 0x5a                                                  ; 0x3 vs 0x5a
[main] [INS] [00021131] ja	0x211a2
[main] [INS] [00021133] cmp	al, 0x55                                                  ; 0x3 vs 0x55
[main] [INS] [00021135] jae	0x211c3
[main] [INS] [0002113b] test	al, al                                                   ; 0x3 vs 0x3
[main] [INS] [0002113d] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x3
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x1
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a05b -> 7800000600ff76
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x76
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x55
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x55 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0x8
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x8 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x76 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x76 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x76 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x76 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x76
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x6
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a061 -> 700ff76180078
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x78
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x78 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x57
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x57 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0xa
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0xa vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x78 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x78
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x78 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x78 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x78 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x78
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x3
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a064 -> 611d01000700ff76
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x76
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x55
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x55 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0x8
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x8 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x76 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x76 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x76 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x76 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x76
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x6
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a06a -> 1000800ff76611d
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x1d
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x1d vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0xfffffffc
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0xfc vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0xffffffaf
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0xaf vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x1d vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x1d
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [00021127] cmp	al, 0x5e                                                  ; 0x1d vs 0x5e
[main] [INS] [00021129] jae	0x211c3
[main] [INS] [0002112f] cmp	al, 0x5a                                                  ; 0x1d vs 0x5a
[main] [INS] [00021131] ja	0x211a2
[main] [INS] [00021133] cmp	al, 0x55                                                  ; 0x1d vs 0x55
[main] [INS] [00021135] jae	0x211c3
[main] [INS] [0002113b] test	al, al                                                   ; 0x1d vs 0x1d
[main] [INS] [0002113d] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x1d
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x2
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a06c -> 621d01000800ff76
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x76
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x55
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x55 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0x8
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x8 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x76 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x76 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x76 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x76 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x76
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x6
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a072 -> 900ff76621d
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x1d
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x1d vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0xfffffffc
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0xfc vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0xffffffaf
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0xaf vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x1d vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x1d
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [00021127] cmp	al, 0x5e                                                  ; 0x1d vs 0x5e
[main] [INS] [00021129] jae	0x211c3
[main] [INS] [0002112f] cmp	al, 0x5a                                                  ; 0x1d vs 0x5a
[main] [INS] [00021131] ja	0x211a2
[main] [INS] [00021133] cmp	al, 0x55                                                  ; 0x1d vs 0x55
[main] [INS] [00021135] jae	0x211c3
[main] [INS] [0002113b] test	al, al                                                   ; 0x1d vs 0x1d
[main] [INS] [0002113d] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x1d
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x2
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a074 -> 7800000900ff76
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x76
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x55
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x55 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0x8
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x8 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x76 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x76 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x76 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x76 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x76
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x6
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a07a -> 3a0078
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x78
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x78 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0x57
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0x57 vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0xa
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0xa vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x78 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x78
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [0002115f] cmp	al, 0x97                                                  ; 0x78 vs 0x97
[main] [INS] [00021161] je	0x2116d
[main] [INS] [00021163] ja	0x211e4
[main] [INS] [00021165] cmp	al, 0x61                                                  ; 0x78 vs 0x61
[main] [INS] [00021167] je	0x211a2
[main] [INS] [00021169] cmp	al, 0x95                                                  ; 0x78 vs 0x95
[main] [INS] [0002116b] jne	0x2117c
[main] [INS] [0002117c] lea	rcx, [rip + 0x1f45d]                                      ; rcx = 0x405e0 -> ""
[main] [INS] [00021183] movsxd	rax, edx                                               ; rax = 0x78
[main] [INS] [00021186] add	qword ptr [rip + 0x2294fa], 1                             ; store(0x24a688,0x1)
[main] [INS] [0002118e] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x3
[main] [INS] [00021192] add	rbx, rax                                                  ; rbx = 0x9003a07d -> 0
[main] [INS] [00021195] movzx	eax, byte ptr [rbx]                                     ; eax = 0x0
[main] [INS] [00021198] cmp	al, 0xa1                                                  ; 0x0 vs 0xa1
[main] [INS] [0002119a] jbe	0x20fe1
[main] [INS] [00020fe1] lea	edx, [rax - 0x21]                                         ; edx = 0xffffffdf
[main] [INS] [00020fe4] cmp	dl, 0x40                                                  ; 0xdf vs 0x40
[main] [INS] [00020fe7] ja	0x210f6
[main] [INS] [000210f6] lea	edx, [rax - 0x6e]                                         ; edx = 0xffffff92
[main] [INS] [000210f9] add	qword ptr [rip + 0x22946f], 1                             ; store(0x24a570,0x1)
[main] [INS] [00021101] cmp	dl, 2                                                     ; 0x92 vs 0x2
[main] [INS] [00021104] ja	0x21120
[main] [INS] [00021120] cmp	al, 0x60                                                  ; 0x0 vs 0x60
[main] [INS] [00021122] movzx	edx, al                                                 ; edx = 0x0
[main] [INS] [00021125] ja	0x2115f
[main] [INS] [00021127] cmp	al, 0x5e                                                  ; 0x0 vs 0x5e
[main] [INS] [00021129] jae	0x211c3
[main] [INS] [0002112f] cmp	al, 0x5a                                                  ; 0x0 vs 0x5a
[main] [INS] [00021131] ja	0x211a2
[main] [INS] [00021133] cmp	al, 0x55                                                  ; 0x0 vs 0x55
[main] [INS] [00021135] jae	0x211c3
[main] [INS] [0002113b] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [0002113d] jne	0x2117c
[main] [INS] [0002113f] mov	r10, qword ptr [rsp + 0x20]                               ; r10 = 0x90000041 -> "(?=a\K)a"
[main] [INS] [00021144] add	qword ptr [rip + 0x22adbc], 1                             ; store(0x24bf08,0x1)
[main] [INS] [0002114c] cmp	dword ptr [rsp + 0xf8], 0                                 ; 0x0 vs 0x0
[main] [INS] [00021154] je	0x20bc7
[main] [INS] [00020bc7] mov	eax, dword ptr [rsp + 0x1d4]                              ; eax = 0x0
[main] [INS] [00020bce] add	qword ptr [rip + 0x22b33a], 1                             ; store(0x24bf10,0x1)
[main] [INS] [00020bd6] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00020bd8] jne	0x20d89
[main] [INS] [00020bde] mov	ebx, dword ptr [r15 + 8]                                  ; ebx = 0x4000 -> 24a880
[main] [INS] [00020be2] test	bl, 0x10                                                 ; 0x0 vs 0x10
[main] [INS] [00020be5] je	0x20d54
[main] [INS] [00020d54] mov	rdx, qword ptr [rsp + 0x18]                               ; rdx = 0x7f000008b6d0 -> "@"
[main] [INS] [00020d59] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [00020d5b] xor	esi, esi                                                  ; esi = 0x0
[main] [INS] [00020d5d] mov	rdi, r13                                                  ; rdi = 0x9003a040 -> ff763a0083
[main] [INS] [00020d60] add	qword ptr [rip + 0x22b238], 1                             ; store(0x24bfa0,0x1)
[main] [INS] [00020d68] call	0x12ae0                                                  ; call(0x12ae0)
[main] [INS] [00012ae0] push	r15                                                      ; push(0x9003a000) -> "ERCP~"
[main] [INS] [00012ae2] push	r14                                                      ; push(0x0)
[main] [INS] [00012ae4] mov	r15, rdi                                                  ; r15 = 0x9003a040 -> ff763a0083
[main] [INS] [00012ae7] push	r13                                                      ; push(0x9003a040) -> ff763a0083
[main] [INS] [00012ae9] push	r12                                                      ; push(0x7f000008b6b0) -> 0
[main] [INS] [00012aeb] lea	r13, [rip + 0x2daee]                                      ; r13 = 0x405e0 -> ""
[main] [INS] [00012af2] push	rbp                                                      ; push(0x0)
[main] [INS] [00012af3] push	rbx                                                      ; push(0x4000) -> 24a880
[main] [INS] [00012af4] mov	r12d, esi                                                 ; r12d = 0x0
[main] [INS] [00012af7] mov	rbx, rdx                                                  ; rbx = 0x7f000008b6d0 -> "@"
[main] [INS] [00012afa] mov	ebp, ecx                                                  ; ebp = 0x0
[main] [INS] [00012afc] mov	r14d, 1                                                   ; r14d = 0x1
[main] [INS] [00012b02] sub	rsp, 8                                                    ; rsp = 0x7f000008b560 -> 7f000008b690
[main] [INS] [00012b06] add	qword ptr [rip + 0x238eb2], 1                             ; store(0x24b9c0,0x1)
[main] [INS] [00012b0e] movzx	eax, byte ptr [rdi]                                     ; eax = 0x83
[main] [INS] [00012b11] nop	dword ptr [rax]
[main] [INS] [00012b18] movzx	edi, byte ptr [r13 + rax]                               ; edi = 0x3
[main] [INS] [00012b1e] add	qword ptr [rip + 0x238ea2], 1                             ; store(0x24b9c8,0x1)
[main] [INS] [00012b26] add	rdi, r15                                                  ; rdi = 0x9003a043 -> 7d07000000ff76
[main] [INS] [00012b29] movzx	eax, byte ptr [rdi]                                     ; eax = 0x76
[main] [INS] [00012b2c] mov	ecx, eax                                                  ; ecx = 0x76
[main] [INS] [00012b2e] sub	ecx, 0x76                                                 ; ecx = 0x0
[main] [INS] [00012b31] cmp	cl, 0x1b                                                  ; 0x0 vs 0x1b
[main] [INS] [00012b34] ja	0x12bb9
[main] [INS] [00012b3a] mov	rsi, qword ptr [rip + 0x238e8f]                           ; rsi = 0x0
[main] [INS] [00012b41] mov	r11, r14                                                  ; r11 = 0x1
[main] [INS] [00012b44] shl	r11, cl                                                   ; r11 = 0x1
[main] [INS] [00012b47] test	r11d, 0xf800001                                          ; 0x1 vs 0xf800001
[main] [INS] [00012b4e] lea	rdx, [rsi + 1]                                            ; rdx = 0x1
[main] [INS] [00012b52] mov	qword ptr [rip + 0x238e77], rdx                           ; store(0x24b9d0,0x1)
[main] [INS] [00012b59] je	0x12bb9
[main] [INS] [00012b5b] mov	rcx, qword ptr [rip + 0x238e76]                           ; rcx = 0x0
[main] [INS] [00012b62] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [00012b65] sub	rcx, rsi                                                  ; rcx = 0x0
[main] [INS] [00012b68] mov	rsi, rcx                                                  ; rsi = 0x0
[main] [INS] [00012b6b] jmp	0x12b8d                                                   ; jmp(0x12b8d)
[main] [INS] [00012b8d] cdqe	
[main] [INS] [00012b8f] lea	r9, [rsi + rdx]                                           ; r9 = 0x1
[main] [INS] [00012b93] movzx	eax, byte ptr [r13 + rax]                               ; eax = 0x6
[main] [INS] [00012b99] add	rdi, rax                                                  ; rdi = 0x9003a049 -> 300ff7618007d
[main] [INS] [00012b9c] movzx	eax, byte ptr [rdi]                                     ; eax = 0x7d
[main] [INS] [00012b9f] mov	ecx, eax                                                  ; ecx = 0x7d
[main] [INS] [00012ba1] sub	ecx, 0x76                                                 ; ecx = 0x7
[main] [INS] [00012ba4] cmp	cl, 0x1b                                                  ; 0x7 vs 0x1b
[main] [INS] [00012ba7] jbe	0x12b70
[main] [INS] [00012b70] mov	r10, r14                                                  ; r10 = 0x1
[main] [INS] [00012b73] add	rdx, 1                                                    ; rdx = 0x2
[main] [INS] [00012b77] mov	r8d, 1                                                    ; r8d = 0x1
[main] [INS] [00012b7d] shl	r10, cl                                                   ; r10 = 0x80
[main] [INS] [00012b80] test	r10d, 0xf800001                                          ; 0x80 vs 0xf800001
[main] [INS] [00012b87] je	0x12cb0
[main] [INS] [00012cb0] mov	qword ptr [rip + 0x238d19], rdx                           ; store(0x24b9d0,0x2)
[main] [INS] [00012cb7] jmp	0x12bb2                                                   ; jmp(0x12bb2)
[main] [INS] [00012bb2] mov	qword ptr [rip + 0x238e1f], r9                            ; store(0x24b9d8,0x1)
[main] [INS] [00012bb9] lea	edx, [rax - 0x83]                                         ; edx = 0xfffffffa
[main] [INS] [00012bbf] cmp	edx, 1                                                    ; 0xfffffffa vs 0x1
[main] [INS] [00012bc2] jbe	0x12cc0
[main] [INS] [00012bc8] cmp	eax, 0x88                                                 ; 0x7d vs 0x88
[main] [INS] [00012bcd] je	0x12cc0
[main] [INS] [00012bd3] add	qword ptr [rip + 0x238e05], 1                             ; store(0x24b9e0,0x1)
[main] [INS] [00012bdb] cmp	eax, 0x89                                                 ; 0x7d vs 0x89
[main] [INS] [00012be0] je	0x12cc0
[main] [INS] [00012be6] lea	edx, [rax - 0x85]                                         ; edx = 0xfffffff8
[main] [INS] [00012bec] add	qword ptr [rip + 0x238df4], 1                             ; store(0x24b9e8,0x1)
[main] [INS] [00012bf4] cmp	edx, 1                                                    ; 0xfffffff8 vs 0x1
[main] [INS] [00012bf7] jbe	0x12cf0
[main] [INS] [00012bfd] cmp	eax, 0x8a                                                 ; 0x7d vs 0x8a
[main] [INS] [00012c02] je	0x12cf0
[main] [INS] [00012c08] add	qword ptr [rip + 0x238de8], 1                             ; store(0x24b9f8,0x1)
[main] [INS] [00012c10] cmp	eax, 0x8b                                                 ; 0x7d vs 0x8b
[main] [INS] [00012c15] je	0x12cf0
[main] [INS] [00012c1b] cmp	eax, 0x7d                                                 ; 0x7d vs 0x7d
[main] [INS] [00012c1e] je	0x12da0
[main] [INS] [00012da0] mov	ecx, ebp                                                  ; ecx = 0x0
[main] [INS] [00012da2] mov	rdx, rbx                                                  ; rdx = 0x7f000008b6d0 -> "@"
[main] [INS] [00012da5] mov	esi, r12d                                                 ; esi = 0x0
[main] [INS] [00012da8] add	qword ptr [rip + 0x238c68], 1                             ; store(0x24ba18,0x1)
[main] [INS] [00012db0] call	0x12ae0                                                  ; call(0x12ae0)
[main] [INS] [00012ae0] push	r15                                                      ; push(0x9003a040) -> ff763a0083
[main] [INS] [00012ae2] push	r14                                                      ; push(0x1)
[main] [INS] [00012ae4] mov	r15, rdi                                                  ; r15 = 0x9003a049 -> 300ff7618007d
[main] [INS] [00012ae7] push	r13                                                      ; push(0x405e0) -> ""
[main] [INS] [00012ae9] push	r12                                                      ; push(0x0)
[main] [INS] [00012aeb] lea	r13, [rip + 0x2daee]                                      ; r13 = 0x405e0 -> ""
[main] [INS] [00012af2] push	rbp                                                      ; push(0x0)
[main] [INS] [00012af3] push	rbx                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [00012af4] mov	r12d, esi                                                 ; r12d = 0x0
[main] [INS] [00012af7] mov	rbx, rdx                                                  ; rbx = 0x7f000008b6d0 -> "@"
[main] [INS] [00012afa] mov	ebp, ecx                                                  ; ebp = 0x0
[main] [INS] [00012afc] mov	r14d, 1                                                   ; r14d = 0x1
[main] [INS] [00012b02] sub	rsp, 8                                                    ; rsp = 0x7f000008b520 -> 0
[main] [INS] [00012b06] add	qword ptr [rip + 0x238eb2], 1                             ; store(0x24b9c0,0x1)
[main] [INS] [00012b0e] movzx	eax, byte ptr [rdi]                                     ; eax = 0x7d
[main] [INS] [00012b11] nop	dword ptr [rax]
[main] [INS] [00012b18] movzx	edi, byte ptr [r13 + rax]                               ; edi = 0x3
[main] [INS] [00012b1e] add	qword ptr [rip + 0x238ea2], 1                             ; store(0x24b9c8,0x1)
[main] [INS] [00012b26] add	rdi, r15                                                  ; rdi = 0x9003a04c -> 611d01000300ff76
[main] [INS] [00012b29] movzx	eax, byte ptr [rdi]                                     ; eax = 0x76
[main] [INS] [00012b2c] mov	ecx, eax                                                  ; ecx = 0x76
[main] [INS] [00012b2e] sub	ecx, 0x76                                                 ; ecx = 0x0
[main] [INS] [00012b31] cmp	cl, 0x1b                                                  ; 0x0 vs 0x1b
[main] [INS] [00012b34] ja	0x12bb9
[main] [INS] [00012b3a] mov	rsi, qword ptr [rip + 0x238e8f]                           ; rsi = 0x2
[main] [INS] [00012b41] mov	r11, r14                                                  ; r11 = 0x1
[main] [INS] [00012b44] shl	r11, cl                                                   ; r11 = 0x1
[main] [INS] [00012b47] test	r11d, 0xf800001                                          ; 0x1 vs 0xf800001
[main] [INS] [00012b4e] lea	rdx, [rsi + 1]                                            ; rdx = 0x3
[main] [INS] [00012b52] mov	qword ptr [rip + 0x238e77], rdx                           ; store(0x24b9d0,0x3)
[main] [INS] [00012b59] je	0x12bb9
[main] [INS] [00012b5b] mov	rcx, qword ptr [rip + 0x238e76]                           ; rcx = 0x1
[main] [INS] [00012b62] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [00012b65] sub	rcx, rsi                                                  ; rcx = 0xffffffffffffffff
[main] [INS] [00012b68] mov	rsi, rcx                                                  ; rsi = 0xffffffffffffffff
[main] [INS] [00012b6b] jmp	0x12b8d                                                   ; jmp(0x12b8d)
[main] [INS] [00012b8d] cdqe	
[main] [INS] [00012b8f] lea	r9, [rsi + rdx]                                           ; r9 = 0x2
[main] [INS] [00012b93] movzx	eax, byte ptr [r13 + rax]                               ; eax = 0x6
[main] [INS] [00012b99] add	rdi, rax                                                  ; rdi = 0x9003a052 -> 2000400ff76611d
[main] [INS] [00012b9c] movzx	eax, byte ptr [rdi]                                     ; eax = 0x1d
[main] [INS] [00012b9f] mov	ecx, eax                                                  ; ecx = 0x1d
[main] [INS] [00012ba1] sub	ecx, 0x76                                                 ; ecx = 0xffffffa7
[main] [INS] [00012ba4] cmp	cl, 0x1b                                                  ; 0xa7 vs 0x1b
[main] [INS] [00012ba7] jbe	0x12b70
[main] [INS] [00012ba9] test	r8b, r8b                                                 ; 0x0 vs 0x0
[main] [INS] [00012bac] jne	0x12cb0
[main] [INS] [00012bb2] mov	qword ptr [rip + 0x238e1f], r9                            ; store(0x24b9d8,0x2)
[main] [INS] [00012bb9] lea	edx, [rax - 0x83]                                         ; edx = 0xffffff9a
[main] [INS] [00012bbf] cmp	edx, 1                                                    ; 0xffffff9a vs 0x1
[main] [INS] [00012bc2] jbe	0x12cc0
[main] [INS] [00012bc8] cmp	eax, 0x88                                                 ; 0x1d vs 0x88
[main] [INS] [00012bcd] je	0x12cc0
[main] [INS] [00012bd3] add	qword ptr [rip + 0x238e05], 1                             ; store(0x24b9e0,0x1)
[main] [INS] [00012bdb] cmp	eax, 0x89                                                 ; 0x1d vs 0x89
[main] [INS] [00012be0] je	0x12cc0
[main] [INS] [00012be6] lea	edx, [rax - 0x85]                                         ; edx = 0xffffff98
[main] [INS] [00012bec] add	qword ptr [rip + 0x238df4], 1                             ; store(0x24b9e8,0x1)
[main] [INS] [00012bf4] cmp	edx, 1                                                    ; 0xffffff98 vs 0x1
[main] [INS] [00012bf7] jbe	0x12cf0
[main] [INS] [00012bfd] cmp	eax, 0x8a                                                 ; 0x1d vs 0x8a
[main] [INS] [00012c02] je	0x12cf0
[main] [INS] [00012c08] add	qword ptr [rip + 0x238de8], 1                             ; store(0x24b9f8,0x1)
[main] [INS] [00012c10] cmp	eax, 0x8b                                                 ; 0x1d vs 0x8b
[main] [INS] [00012c15] je	0x12cf0
[main] [INS] [00012c1b] cmp	eax, 0x7d                                                 ; 0x1d vs 0x7d
[main] [INS] [00012c1e] je	0x12da0
[main] [INS] [00012c24] cmp	eax, 0x87                                                 ; 0x1d vs 0x87
[main] [INS] [00012c29] je	0x12da0
[main] [INS] [00012c2f] lea	edx, [rax - 0x81]                                         ; edx = 0xffffff9c
[main] [INS] [00012c35] cmp	edx, 1                                                    ; 0xffffff9c vs 0x1
[main] [INS] [00012c38] jbe	0x12dd2
[main] [INS] [00012c3e] lea	edx, [rax - 0x55]                                         ; edx = 0xffffffc8
[main] [INS] [00012c41] cmp	edx, 1                                                    ; 0xffffffc8 vs 0x1
[main] [INS] [00012c44] jbe	0x12d40
[main] [INS] [00012c4a] cmp	eax, 0x5e                                                 ; 0x1d vs 0x5e
[main] [INS] [00012c4d] je	0x12d40
[main] [INS] [00012c53] lea	edx, [rax - 1]                                            ; edx = 0x1c
[main] [INS] [00012c56] add	qword ptr [rip + 0x238df2], 1                             ; store(0x24ba50,0x1)
[main] [INS] [00012c5e] cmp	edx, 1                                                    ; 0x1c vs 0x1
[main] [INS] [00012c61] jbe	0x12c68
[main] [INS] [00012c63] cmp	eax, 0x1b                                                 ; 0x1d vs 0x1b
[main] [INS] [00012c66] jne	0x12cd9
[main] [INS] [00012cd9] add	rsp, 8                                                    ; rsp = 0x7f000008b528 -> 7f000008b6d0
[main] [INS] [00012cdd] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00012cdf] pop	rbx                                                       ; rbx = 0x7f000008b6d0 -> "@"
[main] [INS] [00012ce0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [00012ce1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [00012ce3] pop	r13                                                       ; r13 = 0x405e0 -> ""
[main] [INS] [00012ce5] pop	r14                                                       ; r14 = 0x1
[main] [INS] [00012ce7] pop	r15                                                       ; r15 = 0x9003a040 -> ff763a0083
[main] [INS] [00012ce9] ret	
[main] [INS] [00012db5] add	qword ptr [rip + 0x238c63], 1                             ; store(0x24ba20,0x1)
[main] [INS] [00012dbd] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00012dbf] je	0x12cd9
[main] [INS] [00012cd9] add	rsp, 8                                                    ; rsp = 0x7f000008b568 -> 4000
[main] [INS] [00012cdd] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00012cdf] pop	rbx                                                       ; rbx = 0x4000 -> 24a880
[main] [INS] [00012ce0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [00012ce1] pop	r12                                                       ; r12 = 0x7f000008b6b0 -> 0
[main] [INS] [00012ce3] pop	r13                                                       ; r13 = 0x9003a040 -> ff763a0083
[main] [INS] [00012ce5] pop	r14                                                       ; r14 = 0x0
[main] [INS] [00012ce7] pop	r15                                                       ; r15 = 0x9003a000 -> "ERCP~"
[main] [INS] [00012ce9] ret	
[main] [INS] [00020d6d] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00020d6f] je	0x20ece
[main] [INS] [00020ece] mov	eax, dword ptr [rsp + 0xe8]                               ; eax = 0x0
[main] [INS] [00020ed5] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00020ed7] js	0x20f2d
[main] [INS] [00020ed9] movzx	ecx, byte ptr [rsp + 0xf0]                              ; ecx = 0x61
[main] [INS] [00020ee1] test	al, 1                                                    ; 0x0 vs 0x1
[main] [INS] [00020ee3] mov	edx, dword ptr [r15 + 0xc]                                ; edx = 0x1
[main] [INS] [00020ee7] mov	word ptr [r15 + 0x18], cx                                 ; store(0x9003a018,0x61)
[main] [INS] [00020eec] je	0x20f1b
[main] [INS] [00020f1b] or	dword ptr [r15 + 0xc], 0x10                                ; store(0x9003a00c,0x10)
[main] [INS] [00020f20] add	qword ptr [rip + 0x22b0b0], 1                             ; store(0x24bfd8,0x1)
[main] [INS] [00020f28] jmp	0x20beb                                                   ; jmp(0x20beb)
[main] [INS] [00020beb] mov	ecx, dword ptr [rsp + 0xec]                               ; ecx = 0x0
[main] [INS] [00020bf2] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [00020bf4] js	0x20c56
[main] [INS] [00020bf6] add	qword ptr [rip + 0x22b3f2], 1                             ; store(0x24bff0,0x1)
[main] [INS] [00020bfe] test	byte ptr [r15 + 8], 0x10                                 ; 0x0 vs 0x10
[main] [INS] [00020c03] jne	0x21372
[main] [INS] [00020c09] movzx	edx, byte ptr [rsp + 0xf4]                              ; edx = 0x62
[main] [INS] [00020c11] and	cl, 1                                                     ; cl = 0x0
[main] [INS] [00020c14] mov	eax, dword ptr [r15 + 0xc]                                ; eax = 0x11
[main] [INS] [00020c18] mov	word ptr [r15 + 0x1a], dx                                 ; store(0x9003a01a,0x62)
[main] [INS] [00020c1d] je	0x20c49
[main] [INS] [00020c49] or	dword ptr [r15 + 0xc], 0x40                                ; store(0x9003a00c,0x40)
[main] [INS] [00020c4e] add	qword ptr [rip + 0x22b3ba], 1                             ; store(0x24c010,0x1)
[main] [INS] [00020c56] add	qword ptr [rip + 0x22b3ba], 1                             ; store(0x24c018,0x1)
[main] [INS] [00020c5e] jmp	0x20c82                                                   ; jmp(0x20c82)
[main] [INS] [00020c82] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x7f000008b6d0 -> "@"
[main] [INS] [00020c87] mov	rsi, qword ptr [rsp + 0x100]                              ; rsi = 0x9003a07e -> 0
[main] [INS] [00020c8f] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [00020c92] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [00020c94] mov	rdi, r13                                                  ; rdi = 0x9003a040 -> ff763a0083
[main] [INS] [00020c97] call	0x17d10                                                  ; call(0x17d10)
[main] [INS] [00017d10] push	r15                                                      ; push(0x9003a000) -> "ERCP~"
[main] [INS] [00017d12] push	r14                                                      ; push(0x0)
[main] [INS] [00017d14] mov	r14, r8                                                   ; r14 = 0x0
[main] [INS] [00017d17] push	r13                                                      ; push(0x9003a040) -> ff763a0083
[main] [INS] [00017d19] push	r12                                                      ; push(0x7f000008b6b0) -> 0
[main] [INS] [00017d1b] mov	r12, rsi                                                  ; r12 = 0x9003a07e -> 0
[main] [INS] [00017d1e] push	rbp                                                      ; push(0x0)
[main] [INS] [00017d1f] push	rbx                                                      ; push(0x4000) -> 24a880
[main] [INS] [00017d20] lea	rbp, [rip + 0x288b9]                                      ; rbp = 0x405e0 -> ""
[main] [INS] [00017d27] mov	r13, rcx                                                  ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [00017d2a] sub	rsp, 0x48                                                 ; rsp = 0x7f000008b520 -> 0
[main] [INS] [00017d2e] add	qword ptr [rip + 0x23236a], 1                             ; store(0x24a0a0,0x1)
[main] [INS] [00017d36] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00017d3f] mov	qword ptr [rsp + 0x38], rax                               ; store(0x7f000008b558,0x59424d4f444e4100)
[main] [INS] [00017d44] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00017d46] movzx	eax, byte ptr [rdi]                                     ; eax = 0x83
[main] [INS] [00017d49] mov	dword ptr [rsp + 0xc], edx                                ; store(0x7f000008b52c,0x0)
[main] [INS] [00017d4d] movzx	eax, byte ptr [rbp + rax]                               ; eax = 0x3
[main] [INS] [00017d52] add	rdi, rax                                                  ; rdi = 0x9003a043 -> 7d07000000ff76
[main] [INS] [00017d55] call	0x17b80                                                  ; call(0x17b80)
[main] [INS] [00017b80] add	qword ptr [rip + 0x232338], 1                             ; store(0x249ec0,0x1)
[main] [INS] [00017b88] push	r15                                                      ; push(0x9003a000) -> "ERCP~"
[main] [INS] [00017b8a] mov	rax, rdi                                                  ; rax = 0x9003a043 -> 7d07000000ff76
[main] [INS] [00017b8d] push	r14                                                      ; push(0x0)
[main] [INS] [00017b8f] mov	r9, qword ptr [rip + 0x23233a]                            ; r9 = 0x0
[main] [INS] [00017b96] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [00017b98] push	r13                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [00017b9a] mov	rcx, qword ptr [rip + 0x232337]                           ; rcx = 0x0
[main] [INS] [00017ba1] xor	r13d, r13d                                                ; r13d = 0x0
[main] [INS] [00017ba4] push	r12                                                      ; push(0x9003a07e) -> 0
[main] [INS] [00017ba6] xor	r15d, r15d                                                ; r15d = 0x0
[main] [INS] [00017ba9] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [00017bac] push	rbp                                                      ; push(0x405e0) -> ""
[main] [INS] [00017bad] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [00017bb0] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [00017bb2] push	rbx                                                      ; push(0x4000) -> 24a880
[main] [INS] [00017bb3] mov	r11, qword ptr [rip + 0x23230e]                           ; r11 = 0x0
[main] [INS] [00017bba] mov	rbx, qword ptr [rip + 0x23231f]                           ; rbx = 0x0
[main] [INS] [00017bc1] mov	r10, qword ptr [rip + 0x232320]                           ; r10 = 0x0
[main] [INS] [00017bc8] mov	rsi, qword ptr [rip + 0x232321]                           ; rsi = 0x0
[main] [INS] [00017bcf] movzx	edx, byte ptr [rax]                                     ; edx = 0x76
[main] [INS] [00017bd2] cmp	dl, 0x80                                                  ; 0x76 vs 0x80
[main] [INS] [00017bd5] ja	0x17c21
[main] [INS] [00017bd7] cmp	dl, 0x7e                                                  ; 0x76 vs 0x7e
[main] [INS] [00017bda] jae	0x17c80
[main] [INS] [00017be0] cmp	dl, 4                                                     ; 0x76 vs 0x4
[main] [INS] [00017be3] jb	0x17c2b
[main] [INS] [00017be5] cmp	dl, 5                                                     ; 0x76 vs 0x5
[main] [INS] [00017be8] ja	0x17cf0
[main] [INS] [00017cf0] cmp	dl, 0x76                                                  ; 0x76 vs 0x76
[main] [INS] [00017cf3] je	0x17c02
[main] [INS] [00017c02] lea	rdi, [rip + 0x289d7]                                      ; rdi = 0x405e0 -> ""
[main] [INS] [00017c09] add	rsi, 1                                                    ; rsi = 0x1
[main] [INS] [00017c0d] movzx	edx, byte ptr [rdi + rdx]                               ; edx = 0x6
[main] [INS] [00017c11] mov	edi, 1                                                    ; edi = 0x1
[main] [INS] [00017c16] add	rax, rdx                                                  ; rax = 0x9003a049 -> 300ff7618007d
[main] [INS] [00017c19] movzx	edx, byte ptr [rax]                                     ; edx = 0x7d
[main] [INS] [00017c1c] cmp	dl, 0x80                                                  ; 0x7d vs 0x80
[main] [INS] [00017c1f] jbe	0x17bd7
[main] [INS] [00017bd7] cmp	dl, 0x7e                                                  ; 0x7d vs 0x7e
[main] [INS] [00017bda] jae	0x17c80
[main] [INS] [00017be0] cmp	dl, 4                                                     ; 0x7d vs 0x4
[main] [INS] [00017be3] jb	0x17c2b
[main] [INS] [00017be5] cmp	dl, 5                                                     ; 0x7d vs 0x5
[main] [INS] [00017be8] ja	0x17cf0
[main] [INS] [00017cf0] cmp	dl, 0x76                                                  ; 0x7d vs 0x76
[main] [INS] [00017cf3] je	0x17c02
[main] [INS] [00017cf9] jmp	0x17c2b                                                   ; jmp(0x17c2b)
[main] [INS] [00017c2b] test	bpl, bpl                                                 ; 0x0 vs 0x0
[main] [INS] [00017c2e] jne	0x17cfe
[main] [INS] [00017c34] test	r14b, r14b                                               ; 0x0 vs 0x0
[main] [INS] [00017c37] je	0x17c40
[main] [INS] [00017c40] test	r15b, r15b                                               ; 0x0 vs 0x0
[main] [INS] [00017c43] je	0x17c4c
[main] [INS] [00017c4c] test	r13b, r13b                                               ; 0x0 vs 0x0
[main] [INS] [00017c4f] je	0x17c58
[main] [INS] [00017c58] test	r12b, r12b                                               ; 0x0 vs 0x0
[main] [INS] [00017c5b] je	0x17c64
[main] [INS] [00017c64] test	dil, dil                                                 ; 0x1 vs 0x1
[main] [INS] [00017c67] je	0x17c70
[main] [INS] [00017c69] mov	qword ptr [rip + 0x232280], rsi                           ; store(0x249ef0,0x1)
[main] [INS] [00017c70] pop	rbx                                                       ; rbx = 0x4000 -> 24a880
[main] [INS] [00017c71] pop	rbp                                                       ; rbp = 0x405e0 -> ""
[main] [INS] [00017c72] pop	r12                                                       ; r12 = 0x9003a07e -> 0
[main] [INS] [00017c74] pop	r13                                                       ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [00017c76] pop	r14                                                       ; r14 = 0x0
[main] [INS] [00017c78] pop	r15                                                       ; r15 = 0x9003a000 -> "ERCP~"
[main] [INS] [00017c7a] ret	
[main] [INS] [00017d5a] cmp	rax, r12                                                  ; 0x9003a049 vs 0x9003a07e
[main] [INS] [00017d5d] jae	0x17e81
[main] [INS] [00017d63] mov	rbx, rax                                                  ; rbx = 0x9003a049 -> 300ff7618007d
[main] [INS] [00017d66] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008b540 -> 405e0
[main] [INS] [00017d6b] lea	r15, [rip + 0x2521e]                                      ; r15 = 0x3cf90 -> fffdb35cfffdb35c
[main] [INS] [00017d72] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008b530,0x7f000008b540) -> 405e0
[main] [INS] [00017d77] movzx	eax, byte ptr [rbx]                                     ; eax = 0x7d
[main] [INS] [00017d7a] add	qword ptr [rip + 0x23248e], 1                             ; store(0x24a210,0x1)
[main] [INS] [00017d82] cmp	al, 0x7d                                                  ; 0x7d vs 0x7d
[main] [INS] [00017d84] je	0x18140
[main] [INS] [00018140] movzx	eax, word ptr [rbx + 1]                                 ; eax = 0x1800 -> 120000011b
[main] [INS] [00018144] mov	rsi, qword ptr [rip + 0x231f5d]                           ; rsi = 0x0
[main] [INS] [0001814b] lea	rdx, [rsi + 1]                                            ; rdx = 0x1
[main] [INS] [0001814f] rol	ax, 8                                                     ; ax = 0x18
[main] [INS] [00018153] movzx	eax, ax                                                 ; eax = 0x18
[main] [INS] [00018156] add	rbx, rax                                                  ; rbx = 0x9003a061 -> 700ff76180078
[main] [INS] [00018159] movzx	eax, byte ptr [rbx]                                     ; eax = 0x78
[main] [INS] [0001815c] cmp	al, 0x77                                                  ; 0x78 vs 0x77
[main] [INS] [0001815e] jne	0x17e5e
[main] [INS] [00017e5e] cdqe	
[main] [INS] [00017e60] movzx	edi, byte ptr [rbp + rax]                               ; edi = 0x3
[main] [INS] [00017e65] add	rdi, rbx                                                  ; rdi = 0x9003a064 -> 611d01000700ff76
[main] [INS] [00017e68] call	0x17b80                                                  ; call(0x17b80)
[main] [INS] [00017b80] add	qword ptr [rip + 0x232338], 1                             ; store(0x249ec0,0x1)
[main] [INS] [00017b88] push	r15                                                      ; push(0x3cf90) -> fffdb35cfffdb35c
[main] [INS] [00017b8a] mov	rax, rdi                                                  ; rax = 0x9003a064 -> 611d01000700ff76
[main] [INS] [00017b8d] push	r14                                                      ; push(0x0)
[main] [INS] [00017b8f] mov	r9, qword ptr [rip + 0x23233a]                            ; r9 = 0x0
[main] [INS] [00017b96] xor	edi, edi                                                  ; edi = 0x0
[main] [INS] [00017b98] push	r13                                                      ; push(0x7f000008b6d0) -> "@"
[main] [INS] [00017b9a] mov	rcx, qword ptr [rip + 0x232337]                           ; rcx = 0x0
[main] [INS] [00017ba1] xor	r13d, r13d                                                ; r13d = 0x0
[main] [INS] [00017ba4] push	r12                                                      ; push(0x9003a07e) -> 0
[main] [INS] [00017ba6] xor	r15d, r15d                                                ; r15d = 0x0
[main] [INS] [00017ba9] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [00017bac] push	rbp                                                      ; push(0x405e0) -> ""
[main] [INS] [00017bad] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [00017bb0] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [00017bb2] push	rbx                                                      ; push(0x9003a061) -> 700ff76180078
[main] [INS] [00017bb3] mov	r11, qword ptr [rip + 0x23230e]                           ; r11 = 0x0
[main] [INS] [00017bba] mov	rbx, qword ptr [rip + 0x23231f]                           ; rbx = 0x0
[main] [INS] [00017bc1] mov	r10, qword ptr [rip + 0x232320]                           ; r10 = 0x0
[main] [INS] [00017bc8] mov	rsi, qword ptr [rip + 0x232321]                           ; rsi = 0x1
[main] [INS] [00017bcf] movzx	edx, byte ptr [rax]                                     ; edx = 0x76
[main] [INS] [00017bd2] cmp	dl, 0x80                                                  ; 0x76 vs 0x80
[main] [INS] [00017bd5] ja	0x17c21
[main] [INS] [00017bd7] cmp	dl, 0x7e                                                  ; 0x76 vs 0x7e
[main] [INS] [00017bda] jae	0x17c80
[main] [INS] [00017be0] cmp	dl, 4                                                     ; 0x76 vs 0x4
[main] [INS] [00017be3] jb	0x17c2b
[main] [INS] [00017be5] cmp	dl, 5                                                     ; 0x76 vs 0x5
[main] [INS] [00017be8] ja	0x17cf0
[main] [INS] [00017cf0] cmp	dl, 0x76                                                  ; 0x76 vs 0x76
[main] [INS] [00017cf3] je	0x17c02
[main] [INS] [00017c02] lea	rdi, [rip + 0x289d7]                                      ; rdi = 0x405e0 -> ""
[main] [INS] [00017c09] add	rsi, 1                                                    ; rsi = 0x2
[main] [INS] [00017c0d] movzx	edx, byte ptr [rdi + rdx]                               ; edx = 0x6
[main] [INS] [00017c11] mov	edi, 1                                                    ; edi = 0x1
[main] [INS] [00017c16] add	rax, rdx                                                  ; rax = 0x9003a06a -> 1000800ff76611d
[main] [INS] [00017c19] movzx	edx, byte ptr [rax]                                     ; edx = 0x1d
[main] [INS] [00017c1c] cmp	dl, 0x80                                                  ; 0x1d vs 0x80
[main] [INS] [00017c1f] jbe	0x17bd7
[main] [INS] [00017bd7] cmp	dl, 0x7e                                                  ; 0x1d vs 0x7e
[main] [INS] [00017bda] jae	0x17c80
[main] [INS] [00017be0] cmp	dl, 4                                                     ; 0x1d vs 0x4
[main] [INS] [00017be3] jb	0x17c2b
[main] [INS] [00017be5] cmp	dl, 5                                                     ; 0x1d vs 0x5
[main] [INS] [00017be8] ja	0x17cf0
[main] [INS] [00017cf0] cmp	dl, 0x76                                                  ; 0x1d vs 0x76
[main] [INS] [00017cf3] je	0x17c02
[main] [INS] [00017cf9] jmp	0x17c2b                                                   ; jmp(0x17c2b)
[main] [INS] [00017c2b] test	bpl, bpl                                                 ; 0x0 vs 0x0
[main] [INS] [00017c2e] jne	0x17cfe
[main] [INS] [00017c34] test	r14b, r14b                                               ; 0x0 vs 0x0
[main] [INS] [00017c37] je	0x17c40
[main] [INS] [00017c40] test	r15b, r15b                                               ; 0x0 vs 0x0
[main] [INS] [00017c43] je	0x17c4c
[main] [INS] [00017c4c] test	r13b, r13b                                               ; 0x0 vs 0x0
[main] [INS] [00017c4f] je	0x17c58
[main] [INS] [00017c58] test	r12b, r12b                                               ; 0x0 vs 0x0
[main] [INS] [00017c5b] je	0x17c64
[main] [INS] [00017c64] test	dil, dil                                                 ; 0x1 vs 0x1
[main] [INS] [00017c67] je	0x17c70
[main] [INS] [00017c69] mov	qword ptr [rip + 0x232280], rsi                           ; store(0x249ef0,0x2)
[main] [INS] [00017c70] pop	rbx                                                       ; rbx = 0x9003a061 -> 700ff76180078
[main] [INS] [00017c71] pop	rbp                                                       ; rbp = 0x405e0 -> ""
[main] [INS] [00017c72] pop	r12                                                       ; r12 = 0x9003a07e -> 0
[main] [INS] [00017c74] pop	r13                                                       ; r13 = 0x7f000008b6d0 -> "@"
[main] [INS] [00017c76] pop	r14                                                       ; r14 = 0x0
[main] [INS] [00017c78] pop	r15                                                       ; r15 = 0x3cf90 -> fffdb35cfffdb35c
[main] [INS] [00017c7a] ret	
[main] [INS] [00017e6d] add	qword ptr [rip + 0x232393], 1                             ; store(0x24a208,0x1)
[main] [INS] [00017e75] cmp	r12, rax                                                  ; 0x9003a07e vs 0x9003a06a
[main] [INS] [00017e78] mov	rbx, rax                                                  ; rbx = 0x9003a06a -> 1000800ff76611d
[main] [INS] [00017e7b] ja	0x17d77
[main] [INS] [00017d77] movzx	eax, byte ptr [rbx]                                     ; eax = 0x1d
[main] [INS] [00017d7a] add	qword ptr [rip + 0x23248e], 1                             ; store(0x24a210,0x1)
[main] [INS] [00017d82] cmp	al, 0x7d                                                  ; 0x1d vs 0x7d
[main] [INS] [00017d84] je	0x18140
[main] [INS] [00017d8a] cmp	al, 0x75                                                  ; 0x1d vs 0x75
[main] [INS] [00017d8c] je	0x17e98
[main] [INS] [00017d92] lea	edx, [rax + 0x6e]                                         ; edx = 0x8b
[main] [INS] [00017d95] cmp	dl, 1                                                     ; 0x8b vs 0x1
[main] [INS] [00017d98] jbe	0x180b0
[main] [INS] [00017d9e] cmp	al, 0xa1                                                  ; 0x1d vs 0xa1
[main] [INS] [00017da0] je	0x180b0
[main] [INS] [00017da6] add	qword ptr [rip + 0x232372], 1                             ; store(0x24a120,0x1)
[main] [INS] [00017dae] cmp	al, 0x94                                                  ; 0x1d vs 0x94
[main] [INS] [00017db0] je	0x180b0
[main] [INS] [00017db6] lea	edx, [rax + 0x78]                                         ; edx = 0x95
[main] [INS] [00017db9] cmp	dl, 3                                                     ; 0x95 vs 0x3
[main] [INS] [00017dbc] jbe	0x18278
[main] [INS] [00017dc2] lea	edx, [rax + 0x7d]                                         ; edx = 0x9a
[main] [INS] [00017dc5] add	qword ptr [rip + 0x23236b], 1                             ; store(0x24a138,0x1)
[main] [INS] [00017dcd] cmp	dl, 3                                                     ; 0x9a vs 0x3
[main] [INS] [00017dd0] jbe	0x17e10
[main] [INS] [00017dd2] cmp	al, 0x81                                                  ; 0x1d vs 0x81
[main] [INS] [00017dd4] je	0x17e10
[main] [INS] [00017dd6] add	qword ptr [rip + 0x232372], 1                             ; store(0x24a150,0x1)
[main] [INS] [00017dde] cmp	al, 0x82                                                  ; 0x1d vs 0x82
[main] [INS] [00017de0] je	0x17e10
[main] [INS] [00017de2] cmp	al, 0x87                                                  ; 0x1d vs 0x87
[main] [INS] [00017de4] je	0x17e10
[main] [INS] [00017de6] add	qword ptr [rip + 0x23236a], 1                             ; store(0x24a158,0x1)
[main] [INS] [00017dee] cmp	al, 0x8c                                                  ; 0x1d vs 0x8c
[main] [INS] [00017df0] je	0x17e10
[main] [INS] [00017df2] lea	edx, [rax - 6]                                            ; edx = 0x17
[main] [INS] [00017df5] add	qword ptr [rip + 0x232363], 1                             ; store(0x24a160,0x1)
[main] [INS] [00017dfd] cmp	dl, 0x95                                                  ; 0x17 vs 0x95
[main] [INS] [00017e00] ja	0x17e5e
[main] [INS] [00017e02] movzx	edx, dl                                                 ; edx = 0x17
[main] [INS] [00017e05] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffdb35c
[main] [INS] [00017e09] add	rdx, r15                                                  ; rdx = 0x182ec -> 100231eb4058348
[main] [INS] [00017e0c] jmp	rdx                                                       ; jmp(0x182ec)
[main] [INS] [000182ec] add	qword ptr [rip + 0x231eb4], 1                             ; store(0x24a1a8,0x1)
[main] [INS] [000182f4] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [000182f6] jmp	0x1811d                                                   ; jmp(0x1811d)
[main] [INS] [0001811d] mov	rsi, qword ptr [rsp + 0x38]                               ; rsi = 0x59424d4f444e4100
[main] [INS] [00018122] xor	rsi, qword ptr fs:[0x28]                                  ; rsi = 0x0
[main] [INS] [0001812b] jne	0x183d0
[main] [INS] [00018131] add	rsp, 0x48                                                 ; rsp = 0x7f000008b568 -> 4000
[main] [INS] [00018135] pop	rbx                                                       ; rbx = 0x4000 -> 24a880
[main] [INS] [00018136] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [00018137] pop	r12                                                       ; r12 = 0x7f000008b6b0 -> 0
[main] [INS] [00018139] pop	r13                                                       ; r13 = 0x9003a040 -> ff763a0083
[main] [INS] [0001813b] pop	r14                                                       ; r14 = 0x0
[main] [INS] [0001813d] pop	r15                                                       ; r15 = 0x9003a000 -> "ERCP~"
[main] [INS] [0001813f] ret	
[main] [INS] [00020c9c] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00020c9e] je	0x20c60
[main] [INS] [00020c60] movzx	eax, word ptr [r13 + 1]                                 ; eax = 0x3a00 -> 363a0
[main] [INS] [00020c65] add	qword ptr [rip + 0x22b3b3], 1                             ; store(0x24c020,0x1)
[main] [INS] [00020c6d] rol	ax, 8                                                     ; ax = 0x3a
[main] [INS] [00020c71] movzx	eax, ax                                                 ; eax = 0x3a
[main] [INS] [00020c74] add	r13, rax                                                  ; r13 = 0x9003a07a -> 3a0078
[main] [INS] [00020c77] cmp	byte ptr [r13], 0x77                                      ; 0x78 vs 0x77
[main] [INS] [00020c7c] jne	0x20d47
[main] [INS] [00020d47] add	qword ptr [rip + 0x22b2e1], 1                             ; store(0x24c030,0x1)
[main] [INS] [00020d4f] jmp	0x1fa5a                                                   ; jmp(0x1fa5a)
[main] [INS] [0001fa5a] mov	rbx, qword ptr [rsp + 0x1338]                             ; rbx = 0x59424d4f444e4100
[main] [INS] [0001fa62] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [0001fa6b] mov	rax, r15                                                  ; rax = 0x9003a000 -> "ERCP~"
[main] [INS] [0001fa6e] jne	0x21489
[main] [INS] [0001fa74] add	rsp, 0x1348                                               ; rsp = 0x7f000008c8e8 -> 7f000008caf0
[main] [INS] [0001fa7b] pop	rbx                                                       ; rbx = 0x7f000008caf0 -> 0
[main] [INS] [0001fa7c] pop	rbp                                                       ; rbp = 0x7f000008ca9c -> 0
[main] [INS] [0001fa7d] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0001fa7f] pop	r13                                                       ; r13 = 0x9000004d -> 0
[main] [INS] [0001fa81] pop	r14                                                       ; r14 = 0x90018a30 -> fbad2488
[main] [INS] [0001fa83] pop	r15                                                       ; r15 = 0x7f000008eb40 -> 0
[main] [INS] [0001fa85] ret	
[main] [INS] [000214cc] add	qword ptr [rip + 0x22a7e4], 1                             ; store(0x24bcb8,0x1)
[main] [INS] [000214d4] add	rsp, 8                                                    ; rsp = 0x7f000008c928 -> 655e
[main] [INS] [000214d8] ret	
[main] [INS] [0000655e] test	rax, rax                                                 ; 0x9003a000 vs 0x9003a000
[main] [INS] [00006561] mov	r14, rax                                                  ; r14 = 0x9003a000 -> "ERCP~"
[main] [INS] [00006564] je	0xc0f8
[main] [INS] [0000656a] lea	rcx, [rsp + 0x1d0]                                        ; rcx = 0x7f000008cb00 -> 0
[main] [INS] [00006572] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [00006574] xor	esi, esi                                                  ; esi = 0x0
[main] [INS] [00006576] mov	rdi, rax                                                  ; rdi = 0x9003a000 -> "ERCP~"
[main] [INS] [00006579] add	qword ptr [rip + 0x241ca7], 1                             ; store(0x248228,0x1)
[main] [INS] [00006581] call	0xe690                                                   ; call(0xe690)
[main] [INS] [0000e690] mov	eax, dword ptr [rip + 0x23ad32]                           ; eax = 0x0
[main] [INS] [0000e696] add	qword ptr [rip + 0x238f82], 1                             ; store(0x247620,0x1)
[main] [INS] [0000e69e] push	r12                                                      ; push(0x0)
[main] [INS] [0000e6a0] mov	r12, rdi                                                  ; r12 = 0x9003a000 -> "ERCP~"
[main] [INS] [0000e6a3] push	rbp                                                      ; push(0x7f000008ca9c) -> 0
[main] [INS] [0000e6a4] mov	ebp, edx                                                  ; ebp = 0x0
[main] [INS] [0000e6a6] push	rbx                                                      ; push(0x7f000008caf0) -> 0
[main] [INS] [0000e6a7] cmp	eax, 2                                                    ; 0x0 vs 0x2
[main] [INS] [0000e6aa] je	0xe760
[main] [INS] [0000e6b0] add	qword ptr [rip + 0x238f70], 1                             ; store(0x247628,0x1)
[main] [INS] [0000e6b8] cmp	eax, 1                                                    ; 0x0 vs 0x1
[main] [INS] [0000e6bb] je	0xe7e8
[main] [INS] [0000e6c1] add	qword ptr [rip + 0x238f67], 1                             ; store(0x247630,0x1)
[main] [INS] [0000e6c9] call	0x33790                                                  ; call(0x33790)
[main] [INS] [00033790] add	qword ptr [rip + 0x21c648], 1                             ; store(0x24fde0,0x1)
[main] [INS] [00033798] test	rdi, rdi                                                 ; 0x9003a000 vs 0x9003a000
[main] [INS] [0003379b] je	0x33bd0
[main] [INS] [000337a1] test	rcx, rcx                                                 ; 0x7f000008cb00 vs 0x7f000008cb00
[main] [INS] [000337a4] je	0x33bd0
[main] [INS] [000337aa] test	rsi, rsi                                                 ; 0x0 vs 0x0
[main] [INS] [000337ad] je	0x337bc
[main] [INS] [000337bc] mov	r8d, dword ptr [rdi]                                      ; r8d = 0x50435245
[main] [INS] [000337bf] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [000337c2] cmp	r8d, 0x50435245                                           ; 0x50435245 vs 0x50435245
[main] [INS] [000337c9] je	0x33810
[main] [INS] [00033810] mov	r9d, dword ptr [rdi + 0xc]                                ; r9d = 0x51
[main] [INS] [00033814] add	qword ptr [rip + 0x21c5e4], 1                             ; store(0x24fe00,0x1)
[main] [INS] [0003381c] test	r9b, 1                                                   ; 0x51 vs 0x1
[main] [INS] [00033820] je	0x33bf6
[main] [INS] [00033826] add	qword ptr [rip + 0x21c5e2], 1                             ; store(0x24fe10,0x1)
[main] [INS] [0003382e] cmp	edx, 0x19                                                 ; 0x0 vs 0x19
[main] [INS] [00033831] ja	0x337ed
[main] [INS] [00033833] lea	r11, [rip + 0xc4c6]                                       ; r11 = 0x3fd00 -> ffff3bb0ffff3b90
[main] [INS] [0003383a] mov	r8d, edx                                                  ; r8d = 0x0
[main] [INS] [0003383d] movsxd	rax, dword ptr [r11 + r8*4]                            ; rax = 0xffffffffffff3b90
[main] [INS] [00033841] add	rax, r11                                                  ; rax = 0x33890 -> c58d05834808478b
[main] [INS] [00033844] jmp	rax                                                       ; jmp(0x33890)
[main] [INS] [00033890] mov	eax, dword ptr [rdi + 8]                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00033893] add	qword ptr [rip + 0x21c58d], 1                             ; store(0x24fe28,0x1)
[main] [INS] [0003389b] and	eax, 0x27ff7a7f                                           ; eax = 0x4000 -> 24a880
[main] [INS] [000338a0] mov	qword ptr [rcx], rax                                      ; store(0x7f000008cb00,0x4000) -> 24a880
[main] [INS] [000338a3] mov	eax, edx                                                  ; eax = 0x0
[main] [INS] [000338a5] ret	
[main] [INS] [0000e6ce] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0000e6d0] mov	ebx, eax                                                  ; ebx = 0x0
[main] [INS] [0000e6d2] jns	0xe750
[main] [INS] [0000e750] mov	eax, ebx                                                  ; eax = 0x0
[main] [INS] [0000e752] add	qword ptr [rip + 0x238ee6], 1                             ; store(0x247640,0x1)
[main] [INS] [0000e75a] pop	rbx                                                       ; rbx = 0x7f000008caf0 -> 0
[main] [INS] [0000e75b] pop	rbp                                                       ; rbp = 0x7f000008ca9c -> 0
[main] [INS] [0000e75c] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e75e] ret	
[main] [INS] [00006586] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00006588] js	0xc237
[main] [INS] [0000658e] add	qword ptr [rip + 0x241cda], 1                             ; store(0x248270,0x1)
[main] [INS] [00006596] test	byte ptr [rsp + 0x1d1], 8                                ; 0x40 vs 0x8
[main] [INS] [0000659e] je	0x65b2
[main] [INS] [000065b2] mov	eax, dword ptr [r14 + 4]                                  ; eax = 0x7e
[main] [INS] [000065b6] cmp	dword ptr [rip + 0x242e57], 0                             ; 0x0 vs 0x0
[main] [INS] [000065bd] mov	qword ptr [rsp + 0x90], rax                               ; store(0x7f000008c9c0,0x7e)
[main] [INS] [000065c5] jne	0xc03c
[main] [INS] [000065cb] cmp	dword ptr [rsp + 0xe8], 0                                 ; 0x0 vs 0x0
[main] [INS] [000065d3] jne	0x65f9
[main] [INS] [000065d5] add	qword ptr [rip + 0x241cdb], 1                             ; store(0x2482b8,0x1)
[main] [INS] [000065dd] cmp	dword ptr [rsp + 0xb0], 0                                 ; 0xffffffff vs 0x0
[main] [INS] [000065e5] js	0xbefd
[main] [INS] [0000befd] cmp	dword ptr [rsp + 0xe0], 0                                 ; 0x0 vs 0x0
[main] [INS] [0000bf05] jne	0xc5c5
[main] [INS] [0000bf0b] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [0000bf0e] mov	qword ptr [rsp + 8], 0                                    ; store(0x7f000008c938,0x0)
[main] [INS] [0000bf17] add	qword ptr [rip + 0x23c429], 1                             ; store(0x248348,0x1)
[main] [INS] [0000bf1f] jmp	0x6690                                                    ; jmp(0x6690)
[main] [INS] [00006690] cmp	dword ptr [rsp + 0x88], 0                                 ; 0x0 vs 0x0
[main] [INS] [00006698] je	0x66dc
[main] [INS] [000066dc] cmp	dword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [000066e1] jne	0xaf18
[main] [INS] [000066e7] mov	rax, qword ptr [rsp + 0x78]                               ; rax = 0x0
[main] [INS] [000066ec] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [000066ef] je	0xaf08
[main] [INS] [0000af08] mov	dword ptr [rsp + 0x90], 0                                 ; store(0x7f000008c9c0,0x0)
[main] [INS] [0000af13] jmp	0x8163                                                    ; jmp(0x8163)
[main] [INS] [00008163] lea	rax, [rsp + 0x210]                                        ; rax = 0x7f000008cb40 -> 0
[main] [INS] [0000816b] mov	qword ptr [rsp + 0x88], r14                               ; store(0x7f000008c9b8,0x9003a000) -> "ERCP~"
[main] [INS] [00008173] mov	r15, qword ptr [rsp + 0x50]                               ; r15 = 0x0
[main] [INS] [00008178] mov	r14, qword ptr [rsp + 0x68]                               ; r14 = 0x4000 -> 24a880
[main] [INS] [0000817d] mov	dword ptr [rsp + 0x15c], 0                                ; store(0x7f000008ca8c,0x0)
[main] [INS] [00008188] mov	qword ptr [rsp + 0x118], rax                              ; store(0x7f000008ca48,0x7f000008cb40) -> 0
[main] [INS] [00008190] lea	rax, [rsp + 0x1210]                                       ; rax = 0x7f000008db40 -> 0
[main] [INS] [00008198] mov	qword ptr [rsp + 0x18], 0                                 ; store(0x7f000008c948,0x0)
[main] [INS] [000081a1] mov	qword ptr [rsp + 0x120], rax                              ; store(0x7f000008ca50,0x7f000008db40) -> 0
[main] [INS] [000081a9] mov	rax, qword ptr [rsp + 0x118]                              ; rax = 0x7f000008cb40 -> 0
[main] [INS] [000081b1] mov	dword ptr [rsp + 0x1ac], 0                                ; store(0x7f000008cadc,0x0)
[main] [INS] [000081bc] mov	dword ptr [rsp + 0x210], 0                                ; store(0x7f000008cb40,0x0)
[main] [INS] [000081c7] mov	dword ptr [rsp + 0x1210], 0                               ; store(0x7f000008db40,0x0)
[main] [INS] [000081d2] mov	dword ptr [rip + 0x241220], 1                             ; store(0x2493fc,0x1)
[main] [INS] [000081dc] mov	qword ptr [rip + 0x2411f9], 0                             ; store(0x2493e0,0x0)
[main] [INS] [000081e7] mov	qword ptr [rsp + 0x1b0], rax                              ; store(0x7f000008cae0,0x7f000008cb40) -> 0
[main] [INS] [000081ef] mov	rax, qword ptr [rsp + 0x120]                              ; rax = 0x7f000008db40 -> 0
[main] [INS] [000081f7] mov	dword ptr [rip + 0x24120b], 0                             ; store(0x24940c,0x0)
[main] [INS] [00008201] mov	dword ptr [rip + 0x241205], 0                             ; store(0x249410,0x0)
[main] [INS] [0000820b] mov	dword ptr [rip + 0x2411f3], 0xf423f                       ; store(0x249408,0xf423f) -> "(2"
[main] [INS] [00008215] mov	dword ptr [rip + 0x2411e5], 0xffffffff                    ; store(0x249404,0xffffffff)
[main] [INS] [0000821f] mov	qword ptr [rsp + 0x1b8], rax                              ; store(0x7f000008cae8,0x7f000008db40) -> 0
[main] [INS] [00008227] lea	rax, [rip + 0x6952]                                       ; rax = 0xeb80 -> "AWAVAUAT"
[main] [INS] [0000822e] mov	dword ptr [rip + 0x2411b8], 0                             ; store(0x2493f0,0x0)
[main] [INS] [00008238] mov	qword ptr [rip + 0x247f39], rax                           ; store(0x250178,0xeb80) -> "AWAVAUAT"
[main] [INS] [0000823f] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x0
[main] [INS] [00008244] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [00008247] je	0x8255
[main] [INS] [00008255] mov	rbp, qword ptr [rip + 0x24117c]                           ; rbp = 0x90000040 -> "/(?=a\K)"
[main] [INS] [0000825c] xor	r13d, r13d                                                ; r13d = 0x0
[main] [INS] [0000825f] mov	r12, qword ptr [rsp]                                      ; r12 = 0x90018a30 -> fbad2488
[main] [INS] [00008263] add	qword ptr [rip + 0x2405ed], 1                             ; store(0x248858,0x1)
[main] [INS] [0000826b] jmp	0x82cc                                                    ; jmp(0x82cc)
[main] [INS] [000082cc] movsxd	rbx, r13d                                              ; rbx = 0x0
[main] [INS] [000082cf] lea	rdx, [rip + 0x32ece]                                      ; rdx = 0x3b1a4 -> "data> "
[main] [INS] [000082d6] mov	rdi, r12                                                  ; rdi = 0x90018a30 -> fbad2488
[main] [INS] [000082d9] lea	rsi, [rbp + rbx]                                          ; rsi = 0x90000040 -> "/(?=a\K)"
[main] [INS] [000082de] call	0xf270                                                   ; call(0xf270)
[main] [INS] [0000f270] push	r15                                                      ; push(0x0)
[main] [INS] [0000f272] push	r14                                                      ; push(0x4000) -> 24a880
[main] [INS] [0000f274] push	r13                                                      ; push(0x0)
[main] [INS] [0000f276] push	r12                                                      ; push(0x90018a30) -> fbad2488
[main] [INS] [0000f278] push	rbp                                                      ; push(0x90000040) -> "/(?=a\K)"
[main] [INS] [0000f279] push	rbx                                                      ; push(0x0)
[main] [INS] [0000f27a] mov	rbx, rsi                                                  ; rbx = 0x90000040 -> "/(?=a\K)"
[main] [INS] [0000f27d] sub	rsp, 0x38                                                 ; rsp = 0x7f000008c8c0 -> 7f000008ed78
[main] [INS] [0000f281] mov	ebp, dword ptr [rip + 0x235d89]                           ; ebp = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f287] mov	r15, qword ptr [rip + 0x23a14a]                           ; r15 = 0x90000040 -> "/(?=a\K)"
[main] [INS] [0000f28e] mov	qword ptr [rsp + 8], rdi                                  ; store(0x7f000008c8c8,0x90018a30) -> fbad2488
[main] [INS] [0000f293] mov	qword ptr [rsp + 0x28], rdx                               ; store(0x7f000008c8e8,0x3b1a4) -> "data> "
[main] [INS] [0000f298] mov	qword ptr [rsp + 0x10], rsi                               ; store(0x7f000008c8d0,0x90000040) -> "/(?=a\K)"
[main] [INS] [0000f29d] nop	dword ptr [rax]
[main] [INS] [0000f2a0] mov	r9, rbx                                                   ; r9 = 0x90000040 -> "/(?=a\K)"
[main] [INS] [0000f2a3] movsxd	r12, ebp                                               ; r12 = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f2a6] sub	r9, r15                                                   ; r9 = 0x0
[main] [INS] [0000f2a9] mov	r14, r12                                                  ; r14 = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f2ac] sub	r14, r9                                                   ; r14 = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f2af] cmp	r14, 0x3e8                                                ; 0xc350 vs 0x3e8
[main] [INS] [0000f2b6] jbe	0xf350
[main] [INS] [0000f2bc] add	qword ptr [rip + 0x237f9c], 1                             ; store(0x247260,0x1)
[main] [INS] [0000f2c4] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x90018a30 -> fbad2488
[main] [INS] [0000f2c9] cmp	qword ptr [rip + 0x237f00], rax                           ; 0x63da00 vs 0x90018a30
[main] [INS] [0000f2d0] je	0xf410
[main] [INS] [0000f2d6] mov	rdx, qword ptr [rsp + 8]                                  ; rdx = 0x90018a30 -> fbad2488
[main] [INS] [0000f2db] mov	esi, r14d                                                 ; esi = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f2de] mov	rdi, rbx                                                  ; rdi = 0x90000040 -> "/(?=a\K)"
[main] [INS] [0000f2e1] add	qword ptr [rip + 0x237f8f], 1                             ; store(0x247278,0x1)
[main] [INS] [0000f2e9] call	0x5790                                                   ; call(0x5790)
[main] [INS] [00005790] jmp	qword ptr [rip + 0x23f772]                                ; jmp(0x2d0b20)
[main] [INS] [002d0b20] test	esi, esi                                                 ; 0xc350 vs 0xc350
[main] [INS] [002d0b22] jle	0x2d0c70
[main] [INS] [002d0b28] cmp	esi, 1                                                    ; 0xc350 vs 0x1
[main] [INS] [002d0b2b] push	r12                                                      ; push(0xc350) -> e024bc8b4cff
[main] [INS] [002d0b2d] mov	r8d, esi                                                  ; r8d = 0xc350 -> e024bc8b4cff
[main] [INS] [002d0b30] push	rbp                                                      ; push(0xc350) -> e024bc8b4cff
[main] [INS] [002d0b31] mov	rbp, rdi                                                  ; rbp = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d0b34] push	rbx                                                      ; push(0x90000040) -> "/(?=a\K)"
[main] [INS] [002d0b35] je	0x2d0c60
[main] [INS] [002d0b3b] mov	ecx, dword ptr [rdx]                                      ; ecx = 0xfbad2488
[main] [INS] [002d0b3d] mov	eax, ecx                                                  ; eax = 0xfbad2488
[main] [INS] [002d0b3f] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [002d0b44] jne	0x2d0ba1
[main] [INS] [002d0b46] mov	r9, qword ptr [rdx + 0x88]                                ; r9 = 0x90018b10 -> 0
[main] [INS] [002d0b4d] mov	r10, qword ptr fs:[0x10]                                  ; r10 = 0x643f00 -> 643f00
[main] [INS] [002d0b56] cmp	qword ptr [r9 + 8], r10                                   ; 0x0 vs 0x643f00
[main] [INS] [002d0b5a] je	0x2d0b9c
[main] [INS] [002d0b5c] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [002d0b61] cmp	dword ptr [rip + 0x371d90], 0                             ; 0x0 vs 0x0
[main] [INS] [002d0b68] je	0x2d0b73
[main] [INS] [002d0b73] cmpxchg	dword ptr [r9], esi                                   ; store(0x90018b10,0x1)
[main] [INS] [002d0b77] je	0x2d0b8f
[main] [INS] [002d0b8f] mov	r9, qword ptr [rdx + 0x88]                                ; r9 = 0x90018b10 -> 1
[main] [INS] [002d0b96] mov	ecx, dword ptr [rdx]                                      ; ecx = 0xfbad2488
[main] [INS] [002d0b98] mov	qword ptr [r9 + 8], r10                                   ; store(0x90018b18,0x643f00) -> 643f00
[main] [INS] [002d0b9c] add	dword ptr [r9 + 4], 1                                     ; store(0x90018b14,0x1)
[main] [INS] [002d0ba1] mov	rbx, rdx                                                  ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002d0ba4] mov	r12d, ecx                                                 ; r12d = 0xfbad2488
[main] [INS] [002d0ba7] sub	r8d, 1                                                    ; r8d = 0xc34f -> e024bc8b4cffff
[main] [INS] [002d0bab] and	ecx, 0xffffffdf                                           ; ecx = 0xfbad2488
[main] [INS] [002d0bae] mov	rsi, rbp                                                  ; rsi = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d0bb1] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2488
[main] [INS] [002d0bb4] mov	dword ptr [rdx], ecx                                      ; store(0x90018a30,0xfbad2488)
[main] [INS] [002d0bb6] movsxd	rdx, r8d                                               ; rdx = 0xc34f -> e024bc8b4cffff
[main] [INS] [002d0bb9] mov	ecx, 0xa                                                  ; ecx = 0xa
[main] [INS] [002d0bbe] mov	r8d, 1                                                    ; r8d = 0x1
[main] [INS] [002d0bc4] and	r12d, 0x20                                                ; r12d = 0x0
[main] [INS] [002d0bc8] call	0x2d1dd0                                                 ; call(0x2d1dd0)
[main] [INS] [002d1dd0] push	r15                                                      ; push(0x90000040) -> "/(?=a\K)"
[main] [INS] [002d1dd2] push	r14                                                      ; push(0xc350) -> e024bc8b4cff
[main] [INS] [002d1dd4] mov	r15, rdx                                                  ; r15 = 0xc34f -> e024bc8b4cffff
[main] [INS] [002d1dd7] push	r13                                                      ; push(0x0)
[main] [INS] [002d1dd9] push	r12                                                      ; push(0x0)
[main] [INS] [002d1ddb] mov	r14, rdi                                                  ; r14 = 0x90018a30 -> fbad2488
[main] [INS] [002d1dde] push	rbp                                                      ; push(0x90000040) -> "/(?=a\K)"
[main] [INS] [002d1ddf] push	rbx                                                      ; push(0x90018a30) -> fbad2488
[main] [INS] [002d1de0] mov	rbp, rsi                                                  ; rbp = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d1de3] mov	r12d, ecx                                                 ; r12d = 0xa
[main] [INS] [002d1de6] sub	rsp, 0x18                                                 ; rsp = 0x7f000008c850 -> 90019c7d
[main] [INS] [002d1dea] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002d1df0] mov	dword ptr [rsp + 0xc], r8d                                ; store(0x7f000008c85c,0x1)
[main] [INS] [002d1df5] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002d1df7] je	0x2d1f05
[main] [INS] [002d1dfd] test	r15, r15                                                 ; 0xc34f vs 0xc34f
[main] [INS] [002d1e00] mov	qword ptr [rsp], rbp                                      ; store(0x7f000008c850,0x90000040) -> "/(?=a\K)"
[main] [INS] [002d1e04] jne	0x2d1e4a
[main] [INS] [002d1e4a] mov	r13, qword ptr [r14 + 8]                                  ; r13 = 0x90019c7d -> 6261
[main] [INS] [002d1e4e] mov	rbx, qword ptr [r14 + 0x10]                               ; rbx = 0x90019c7f -> 0
[main] [INS] [002d1e52] sub	rbx, r13                                                  ; rbx = 0x2
[main] [INS] [002d1e55] test	rbx, rbx                                                 ; 0x2 vs 0x2
[main] [INS] [002d1e58] jg	0x2d1e10
[main] [INS] [002d1e10] cmp	rbx, r15                                                  ; 0x2 vs 0xc34f
[main] [INS] [002d1e13] mov	esi, r12d                                                 ; esi = 0xa
[main] [INS] [002d1e16] mov	rdi, r13                                                  ; rdi = 0x90019c7d -> 6261
[main] [INS] [002d1e19] cmovae	rbx, r15                                               ; rbx = 0x2
[main] [INS] [002d1e1d] mov	rdx, rbx                                                  ; rdx = 0x2
[main] [INS] [002d1e20] call	0x2730c0                                                 ; call(0x2730c0)
[main] [INS] [002730c0] jmp	qword ptr [rip + 0x3c9fc2]                                ; jmp(0x2fd970)
[main] [INS] [002fd970] movd	xmm1, esi                                                ; xmm1 = 0xa
[main] [INS] [002fd974] mov	ecx, edi                                                  ; ecx = 0x90019c7d -> 6261
[main] [INS] [002fd976] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0xa0a
[main] [INS] [002fd97a] test	rdx, rdx                                                 ; 0x2 vs 0x2
[main] [INS] [002fd97d] je	0x2fdc90
[main] [INS] [002fd983] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0xa0a0a0a
[main] [INS] [002fd987] and	ecx, 0x3f                                                 ; ecx = 0x3d
[main] [INS] [002fd98a] pshufd	xmm1, xmm1, 0
[main] [INS] [002fd98f] cmp	ecx, 0x30                                                 ; 0x3d vs 0x30
[main] [INS] [002fd992] ja	0x2fd9d0
[main] [INS] [002fd9d0] and	ecx, 0xf                                                  ; ecx = 0xd
[main] [INS] [002fd9d3] and	rdi, 0xfffffffffffffff0                                   ; rdi = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002fd9d7] movdqa	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x62610a432f6261294b5c613d3f282f
[main] [INS] [002fd9db] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff000000000000000000000000
[main] [INS] [002fd9df] pmovmskb	eax, xmm0                                            ; eax = 0x1000 -> "ELF"
[main] [INS] [002fd9e3] sar	eax, cl                                                   ; eax = 0x0
[main] [INS] [002fd9e5] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002fd9e7] je	0x2fda00
[main] [INS] [002fda00] neg	rcx                                                       ; rcx = 0xfffffffffffffff3
[main] [INS] [002fda03] add	rcx, 0x10                                                 ; rcx = 0x3
[main] [INS] [002fda07] sub	rdx, rcx                                                  ; rdx = 0xffffffffffffffff
[main] [INS] [002fda0a] jbe	0x2fdc90
[main] [INS] [002fdc90] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002fdc92] ret	
[main] [INS] [002d1e25] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002d1e28] mov	r8, rax                                                   ; r8 = 0x0
[main] [INS] [002d1e2b] jne	0x2d1ea0
[main] [INS] [002d1e2d] mov	rdi, rbp                                                  ; rdi = 0x90000040 -> "/(?=a\K)"
[main] [INS] [002d1e30] mov	rdx, rbx                                                  ; rdx = 0x2
[main] [INS] [002d1e33] mov	rsi, r13                                                  ; rsi = 0x90019c7d -> 6261
[main] [INS] [002d1e36] sub	r15, rbx                                                  ; r15 = 0xc34d -> 24bc8b4cffffc9a7
[main] [INS] [002d1e39] add	rbp, rbx                                                  ; rbp = 0x90000042 -> "?=a\K)ab"
[main] [INS] [002d1e3c] call	0x273160                                                 ; call(0x273160)
[main] [INS] [00273160] jmp	qword ptr [rip + 0x3c9f72]                                ; jmp(0x3be750)
[main] [INS] [003be750] mov	rax, rdi                                                  ; rax = 0x90000040 -> "/(?=a\K)"
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x2 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb16c0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x90019c7f -> 0
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90000042 -> "?=a\K)ab"
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c0580 -> fe578966fe568b66
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c0580)
[main] [INS] [003c0580] mov	dx, word ptr [rsi - 2]                                    ; dx = 0x6261 -> 5834800030b8ae8
[main] [INS] [003c0584] mov	word ptr [rdi - 2], dx                                    ; store(0x90000040,0x6261) -> 5834800030b8ae8
[main] [INS] [003c0588] ret	
[main] [INS] [002d1e41] add	qword ptr [r14 + 8], rbx                                  ; store(0x90018a38,0x2)
[main] [INS] [002d1e45] test	r15, r15                                                 ; 0xc34d vs 0xc34d
[main] [INS] [002d1e48] je	0x2d1e80
[main] [INS] [002d1e4a] mov	r13, qword ptr [r14 + 8]                                  ; r13 = 0x90019c7f -> 0
[main] [INS] [002d1e4e] mov	rbx, qword ptr [r14 + 0x10]                               ; rbx = 0x90019c7f -> 0
[main] [INS] [002d1e52] sub	rbx, r13                                                  ; rbx = 0x0
[main] [INS] [002d1e55] test	rbx, rbx                                                 ; 0x0 vs 0x0
[main] [INS] [002d1e58] jg	0x2d1e10
[main] [INS] [002d1e5a] mov	rdi, r14                                                  ; rdi = 0x90018a30 -> fbad2488
[main] [INS] [002d1e5d] call	0x2e00d0                                                 ; call(0x2e00d0)
[main] [INS] [002e00d0] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002e00d6] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002e00d8] jne	0x2e0190
[main] [INS] [002e0190] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002e0193] je	0x2e00e8
[main] [INS] [002e00e8] push	rbp                                                      ; push(0x90000042) -> "?=a\K)ab"
[main] [INS] [002e00e9] push	rbx                                                      ; push(0x0)
[main] [INS] [002e00ea] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002e00ed] sub	rsp, 8                                                    ; rsp = 0x7f000008c830 -> 1
[main] [INS] [002e00f1] mov	edx, dword ptr [rdi]                                      ; edx = 0xfbad2488
[main] [INS] [002e00f3] test	dh, 8                                                    ; 0x24 vs 0x8
[main] [INS] [002e00f6] jne	0x2e01a0
[main] [INS] [002e00fc] mov	rax, qword ptr [rdi + 8]                                  ; rax = 0x90019c7f -> 0
[main] [INS] [002e0100] mov	rsi, qword ptr [rdi + 0x10]                               ; rsi = 0x90019c7f -> 0
[main] [INS] [002e0104] cmp	rax, rsi                                                  ; 0x90019c7f vs 0x90019c7f
[main] [INS] [002e0107] jb	0x2e0178
[main] [INS] [002e0109] and	dh, 1                                                     ; dh = 0x0
[main] [INS] [002e010c] jne	0x2e0160
[main] [INS] [002e010e] cmp	qword ptr [rbx + 0x60], 0                                 ; 0x0 vs 0x0
[main] [INS] [002e0113] je	0x2e0220
[main] [INS] [002e0220] mov	rdi, qword ptr [rbx + 0x48]                               ; rdi = 0x0
[main] [INS] [002e0224] test	rdi, rdi                                                 ; 0x0 vs 0x0
[main] [INS] [002e0227] je	0x2e0129
[main] [INS] [002e0129] mov	rbp, qword ptr [rbx + 0xd8]                               ; rbp = 0x63a2a0 -> 0
[main] [INS] [002e0130] lea	rdx, [rip + 0x359629]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002e0137] lea	rax, [rip + 0x35a38a]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002e013e] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002e0141] mov	rcx, rbp                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002e0144] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002e0147] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002e014a] jbe	0x2e0278
[main] [INS] [002e0150] mov	rax, qword ptr [rbp + 0x28]                               ; rax = 0x2e03c0 -> 359397158d485355
[main] [INS] [002e0154] add	rsp, 8                                                    ; rsp = 0x7f000008c838 -> 0
[main] [INS] [002e0158] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2488
[main] [INS] [002e015b] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002e015c] pop	rbp                                                       ; rbp = 0x90000042 -> "?=a\K)ab"
[main] [INS] [002e015d] jmp	rax                                                       ; jmp(0x2e03c0)
[main] [INS] [002e03c0] push	rbp                                                      ; push(0x90000042) -> "?=a\K)ab"
[main] [INS] [002e03c1] push	rbx                                                      ; push(0x0)
[main] [INS] [002e03c2] lea	rdx, [rip + 0x359397]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002e03c9] lea	rax, [rip + 0x35a0f8]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002e03d0] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002e03d3] sub	rsp, 8                                                    ; rsp = 0x7f000008c830 -> 1
[main] [INS] [002e03d7] mov	rbp, qword ptr [rdi + 0xd8]                               ; rbp = 0x63a2a0 -> 0
[main] [INS] [002e03de] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002e03e1] mov	rcx, rbp                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002e03e4] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002e03e7] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002e03ea] jbe	0x2e0410
[main] [INS] [002e03ec] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2488
[main] [INS] [002e03ef] call	qword ptr [rbp + 0x20]                                   ; call(0x2df020)
[main] [INS] [002df020] mov	eax, dword ptr [rdi]                                      ; eax = 0xfbad2488
[main] [INS] [002df022] test	al, 4                                                    ; 0x88 vs 0x4
[main] [INS] [002df024] jne	0x2df270
[main] [INS] [002df02a] mov	rdx, qword ptr [rdi + 8]                                  ; rdx = 0x90019c7f -> 0
[main] [INS] [002df02e] cmp	rdx, qword ptr [rdi + 0x10]                               ; 0x90019c7f vs 0x90019c7f
[main] [INS] [002df032] jb	0x2df180
[main] [INS] [002df038] push	r14                                                      ; push(0x90018a30) -> fbad2488
[main] [INS] [002df03a] push	r13                                                      ; push(0x90019c7f) -> 0
[main] [INS] [002df03c] push	r12                                                      ; push(0xa)
[main] [INS] [002df03e] push	rbp                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002df03f] push	rbx                                                      ; push(0x90018a30) -> fbad2488
[main] [INS] [002df040] cmp	qword ptr [rdi + 0x38], 0                                 ; 0x90019c70 vs 0x0
[main] [INS] [002df045] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002df048] je	0x2df238
[main] [INS] [002df04e] lea	r12, [rip + 0x35a70b]                                     ; r12 = 0x639760 -> 0
[main] [INS] [002df055] lea	rbp, [rip + 0x35b46c]                                     ; rbp = 0x63a4c8 -> 0
[main] [INS] [002df05c] sub	rbp, r12                                                  ; rbp = 0xd68
[main] [INS] [002df05f] test	eax, 0x202                                               ; 0xfbad2488 vs 0x202
[main] [INS] [002df064] je	0x2df100
[main] [INS] [002df100] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2488
[main] [INS] [002df103] call	0x2dfdb0                                                 ; call(0x2dfdb0)
[main] [INS] [002dfdb0] push	rbp                                                      ; push(0xd68)
[main] [INS] [002dfdb1] push	rbx                                                      ; push(0x90018a30) -> fbad2488
[main] [INS] [002dfdb2] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002dfdb5] sub	rsp, 8                                                    ; rsp = 0x7f000008c7e0 -> 90018a30
[main] [INS] [002dfdb9] mov	rax, qword ptr [rdi + 0x28]                               ; rax = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002dfdbd] cmp	rax, qword ptr [rdi + 0x20]                               ; 0x90019c70 vs 0x90019c70
[main] [INS] [002dfdc1] jbe	0x2dfdfa
[main] [INS] [002dfdfa] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2488
[main] [INS] [002dfdfc] test	dh, 1                                                    ; 0x24 vs 0x1
[main] [INS] [002dfdff] jne	0x2dfe30
[main] [INS] [002dfe01] cmp	qword ptr [rbx + 0x10], rax                               ; 0x90019c7f vs 0x90019c70
[main] [INS] [002dfe05] mov	rcx, qword ptr [rbx + 0x38]                               ; rcx = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002dfe09] mov	qword ptr [rbx + 0x18], rcx                               ; store(0x90018a48,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe0d] jae	0x2dfe13
[main] [INS] [002dfe13] and	dh, 0xf7                                                  ; dh = 0x24
[main] [INS] [002dfe16] mov	qword ptr [rbx + 8], rax                                  ; store(0x90018a38,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe1a] mov	qword ptr [rbx + 0x30], rax                               ; store(0x90018a60,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe1e] mov	qword ptr [rbx + 0x20], rax                               ; store(0x90018a50,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe22] mov	dword ptr [rbx], edx                                      ; store(0x90018a30,0xfbad2488)
[main] [INS] [002dfe24] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002dfe26] add	rsp, 8                                                    ; rsp = 0x7f000008c7e8 -> 90018a30
[main] [INS] [002dfe2a] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2488
[main] [INS] [002dfe2b] pop	rbp                                                       ; rbp = 0xd68
[main] [INS] [002dfe2c] ret	
[main] [INS] [002df108] mov	r13, qword ptr [rbx + 0xd8]                               ; r13 = 0x63a2a0 -> 0
[main] [INS] [002df10f] mov	rsi, qword ptr [rbx + 0x38]                               ; rsi = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002df113] mov	rax, r13                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002df116] mov	qword ptr [rbx + 8], rsi                                  ; store(0x90018a38,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df11a] mov	qword ptr [rbx + 0x18], rsi                               ; store(0x90018a48,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df11e] sub	rax, r12                                                  ; rax = 0xb40
[main] [INS] [002df121] mov	qword ptr [rbx + 0x10], rsi                               ; store(0x90018a40,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df125] mov	qword ptr [rbx + 0x30], rsi                               ; store(0x90018a60,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df129] cmp	rax, rbp                                                  ; 0xb40 vs 0xd68
[main] [INS] [002df12c] mov	qword ptr [rbx + 0x28], rsi                               ; store(0x90018a58,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df130] mov	qword ptr [rbx + 0x20], rsi                               ; store(0x90018a50,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df134] jae	0x2df260
[main] [INS] [002df13a] mov	rdx, qword ptr [rbx + 0x40]                               ; rdx = 0x9001ac70 -> 0
[main] [INS] [002df13e] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2488
[main] [INS] [002df141] sub	rdx, rsi                                                  ; rdx = 0x1000 -> "ELF"
[main] [INS] [002df144] call	qword ptr [r13 + 0x70]                                   ; call(0x2dd910)
[main] [INS] [002dd910] mov	rax, rdi                                                  ; rax = 0x90018a30 -> fbad2488
[main] [INS] [002dd913] mov	edi, dword ptr [rdi + 0x70]                               ; edi = 0x18
[main] [INS] [002dd916] test	byte ptr [rax + 0x74], 2                                 ; 0x0 vs 0x2
[main] [INS] [002dd91a] jne	0x2dd928
[main] [INS] [002dd91c] jmp	0x362070                                                  ; jmp(0x362070)
[main] [INS] [00362070] lea	rax, [rip + 0x2e0881]                                     ; rax = 0x6428f8 -> 0
[main] [INS] [00362077] mov	eax, dword ptr [rax]                                      ; eax = 0x0
[main] [INS] [00362079] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0036207b] jne	0x362090
[main] [INS] [0036207d] xor	eax, eax                                                  ; eax = 0x0
[main] [SYSCALL] read ( fd=0x18 (file), buf=0x90019c70, count=0x1000 ) -> 0
[main] [INS] [00362081] cmp	rax, -0x1000                                              ; 0x0 vs 0x-1000
[main] [INS] [00362087] ja	0x3620e0
[main] [INS] [00362089] ret	
[main] [INS] [002df148] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002df14b] jle	0x2df188
[main] [INS] [002df188] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2488
[main] [INS] [002df18a] mov	ecx, edx                                                  ; ecx = 0xfbad2488
[main] [INS] [002df18c] or	edx, 0x20                                                  ; edx = 0xfbad24a8
[main] [INS] [002df18f] or	ecx, 0x10                                                  ; ecx = 0xfbad2498
[main] [INS] [002df192] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002df195] mov	rax, -1                                                   ; rax = 0xffffffffffffffff
[main] [INS] [002df19c] cmove	edx, ecx                                                ; edx = 0xfbad2498
[main] [INS] [002df19f] mov	qword ptr [rbx + 0x90], rax                               ; store(0x90018ac0,0xffffffffffffffff)
[main] [INS] [002df1a6] mov	dword ptr [rbx], edx                                      ; store(0x90018a30,0xfbad2498)
[main] [INS] [002df1a8] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002df1a9] pop	rbp                                                       ; rbp = 0x63a2a0 -> 0
[main] [INS] [002df1aa] pop	r12                                                       ; r12 = 0xa
[main] [INS] [002df1ac] pop	r13                                                       ; r13 = 0x90019c7f -> 0
[main] [INS] [002df1ae] pop	r14                                                       ; r14 = 0x90018a30 -> fbad2498
[main] [INS] [002df1b0] ret	
[main] [INS] [002e03f2] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002e03f5] je	0x2e0406
[main] [INS] [002e0406] add	rsp, 8                                                    ; rsp = 0x7f000008c838 -> 0
[main] [INS] [002e040a] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002e040b] pop	rbp                                                       ; rbp = 0x90000042 -> "?=a\K)ab"
[main] [INS] [002e040c] ret	
[main] [INS] [002d1e62] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002d1e65] je	0x2d1e80
[main] [INS] [002d1e80] mov	rax, rbp                                                  ; rax = 0x90000042 -> "?=a\K)ab"
[main] [INS] [002d1e83] sub	rax, qword ptr [rsp]                                      ; rax = 0x2
[main] [INS] [002d1e87] add	rsp, 0x18                                                 ; rsp = 0x7f000008c868 -> 90018a30
[main] [INS] [002d1e8b] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002d1e8c] pop	rbp                                                       ; rbp = 0x90000040 -> "ab?=a\K)"
[main] [INS] [002d1e8d] pop	r12                                                       ; r12 = 0x0
[main] [INS] [002d1e8f] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002d1e91] pop	r14                                                       ; r14 = 0xc350 -> e024bc8b4cff
[main] [INS] [002d1e93] pop	r15                                                       ; r15 = 0x90000040 -> "ab?=a\K)"
[main] [INS] [002d1e95] ret	
[main] [INS] [002d0bcd] xor	esi, esi                                                  ; esi = 0x0
[main] [INS] [002d0bcf] test	rax, rax                                                 ; 0x2 vs 0x2
[main] [INS] [002d0bd2] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2498
[main] [INS] [002d0bd4] je	0x2d0be8
[main] [INS] [002d0bd6] test	dl, 0x20                                                 ; 0x98 vs 0x20
[main] [INS] [002d0bd9] je	0x2d0c40
[main] [INS] [002d0c40] mov	byte ptr [rbp + rax], 0                                   ; store(0x90000042,0x0)
[main] [INS] [002d0c45] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2498
[main] [INS] [002d0c47] mov	rsi, rbp                                                  ; rsi = 0x90000040 -> 294b5c613d006261
[main] [INS] [002d0c4a] or	r12d, edx                                                  ; r12d = 0xfbad2498
[main] [INS] [002d0c4d] mov	dword ptr [rbx], r12d                                     ; store(0x90018a30,0xfbad2498)
[main] [INS] [002d0c50] and	r12d, 0x8000                                              ; r12d = 0x0
[main] [INS] [002d0c57] je	0x2d0bf7
[main] [INS] [002d0bf7] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x90018b10 -> 100000001
[main] [INS] [002d0bfe] sub	dword ptr [rdx + 4], 1                                    ; store(0x90018b14,0x1)
[main] [INS] [002d0c02] jne	0x2d0c36
[main] [INS] [002d0c04] mov	qword ptr [rdx + 8], 0                                    ; store(0x90018b18,0x0)
[main] [INS] [002d0c0c] cmp	dword ptr [rip + 0x371ce5], 0                             ; 0x0 vs 0x0
[main] [INS] [002d0c13] je	0x2d0c1c
[main] [INS] [002d0c1c] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [002d0c1e] je	0x2d0c36
[main] [INS] [002d0c36] pop	rbx                                                       ; rbx = 0x90000040 -> 294b5c613d006261
[main] [INS] [002d0c37] mov	rax, rsi                                                  ; rax = 0x90000040 -> 294b5c613d006261
[main] [INS] [002d0c3a] pop	rbp                                                       ; rbp = 0xc350 -> e024bc8b4cff
[main] [INS] [002d0c3b] pop	r12                                                       ; r12 = 0xc350 -> e024bc8b4cff
[main] [INS] [002d0c3d] ret	
[main] [INS] [0000f2ee] add	qword ptr [rip + 0x237faa], 1                             ; store(0x2472a0,0x1)
[main] [INS] [0000f2f6] test	rax, rax                                                 ; 0x90000040 vs 0x90000040
[main] [INS] [0000f2f9] je	0xf438
[main] [INS] [0000f2ff] mov	rdi, rbx                                                  ; rdi = 0x90000040 -> 294b5c613d006261
[main] [INS] [0000f302] add	qword ptr [rip + 0x237fa6], 1                             ; store(0x2472b0,0x1)
[main] [INS] [0000f30a] call	0x5700                                                   ; call(0x5700)
[main] [INS] [00005700] jmp	qword ptr [rip + 0x23f7ba]                                ; jmp(0x303620)
[main] [INS] [00303620] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [00303624] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [00303628] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [0030362c] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [00303630] mov	rax, rdi                                                  ; rax = 0x90000040 -> 294b5c613d006261
[main] [INS] [00303633] mov	rcx, rdi                                                  ; rcx = 0x90000040 -> 294b5c613d006261
[main] [INS] [00303636] and	rcx, 0xfff                                                ; rcx = 0x40
[main] [INS] [0030363d] cmp	rcx, 0xfcf                                                ; 0x40 vs 0xfcf
[main] [INS] [00303644] ja	0x3036b0
[main] [INS] [00303646] movdqu	xmm4, xmmword ptr [rax]                                ; xmm4 = 0xa43006261294b5c613d006261
[main] [INS] [0030364a] pcmpeqb	xmm4, xmm0                                            ; xmm4 = 0xffffff0000ff00000000000000ff0000
[main] [INS] [0030364e] pmovmskb	edx, xmm4                                            ; edx = 0xe404 -> 2c63d358d480000
[main] [INS] [00303652] test	edx, edx                                                 ; 0xe404 vs 0xe404
[main] [INS] [00303654] je	0x30365a
[main] [INS] [00303656] bsf	eax, edx                                                  ; eax = 0x2
[main] [INS] [00303659] ret	
[main] [INS] [0000f30f] test	eax, eax                                                 ; 0x2 vs 0x2
[main] [INS] [0000f311] movsxd	rdx, eax                                               ; rdx = 0x2
[main] [INS] [0000f314] jle	0xf329
[main] [INS] [0000f316] add	qword ptr [rip + 0x237fa2], 1                             ; store(0x2472c0,0x1)
[main] [INS] [0000f31e] cmp	byte ptr [rbx + rdx - 1], 0xa                             ; 0x62 vs 0xa
[main] [INS] [0000f323] je	0xf458
[main] [INS] [0000f329] add	rbx, rdx                                                  ; rbx = 0x90000042 -> 6261294b5c613d00
[main] [INS] [0000f32c] add	qword ptr [rip + 0x237f94], 1                             ; store(0x2472c8,0x1)
[main] [INS] [0000f334] mov	ebp, dword ptr [rip + 0x235cd6]                           ; ebp = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f33a] mov	r15, qword ptr [rip + 0x23a097]                           ; r15 = 0x90000040 -> 294b5c613d006261
[main] [INS] [0000f341] jmp	0xf2a0                                                    ; jmp(0xf2a0)
[main] [INS] [0000f2a0] mov	r9, rbx                                                   ; r9 = 0x90000042 -> 6261294b5c613d00
[main] [INS] [0000f2a3] movsxd	r12, ebp                                               ; r12 = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f2a6] sub	r9, r15                                                   ; r9 = 0x2
[main] [INS] [0000f2a9] mov	r14, r12                                                  ; r14 = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f2ac] sub	r14, r9                                                   ; r14 = 0xc34e -> e024bc8b4cffffc9
[main] [INS] [0000f2af] cmp	r14, 0x3e8                                                ; 0xc34e vs 0x3e8
[main] [INS] [0000f2b6] jbe	0xf350
[main] [INS] [0000f2bc] add	qword ptr [rip + 0x237f9c], 1                             ; store(0x247260,0x1)
[main] [INS] [0000f2c4] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x90018a30 -> fbad2498
[main] [INS] [0000f2c9] cmp	qword ptr [rip + 0x237f00], rax                           ; 0x63da00 vs 0x90018a30
[main] [INS] [0000f2d0] je	0xf410
[main] [INS] [0000f2d6] mov	rdx, qword ptr [rsp + 8]                                  ; rdx = 0x90018a30 -> fbad2498
[main] [INS] [0000f2db] mov	esi, r14d                                                 ; esi = 0xc34e -> e024bc8b4cffffc9
[main] [INS] [0000f2de] mov	rdi, rbx                                                  ; rdi = 0x90000042 -> 6261294b5c613d00
[main] [INS] [0000f2e1] add	qword ptr [rip + 0x237f8f], 1                             ; store(0x247278,0x1)
[main] [INS] [0000f2e9] call	0x5790                                                   ; call(0x5790)
[main] [INS] [00005790] jmp	qword ptr [rip + 0x23f772]                                ; jmp(0x2d0b20)
[main] [INS] [002d0b20] test	esi, esi                                                 ; 0xc34e vs 0xc34e
[main] [INS] [002d0b22] jle	0x2d0c70
[main] [INS] [002d0b28] cmp	esi, 1                                                    ; 0xc34e vs 0x1
[main] [INS] [002d0b2b] push	r12                                                      ; push(0xc350) -> e024bc8b4cff
[main] [INS] [002d0b2d] mov	r8d, esi                                                  ; r8d = 0xc34e -> e024bc8b4cffffc9
[main] [INS] [002d0b30] push	rbp                                                      ; push(0xc350) -> e024bc8b4cff
[main] [INS] [002d0b31] mov	rbp, rdi                                                  ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d0b34] push	rbx                                                      ; push(0x90000042) -> 6261294b5c613d00
[main] [INS] [002d0b35] je	0x2d0c60
[main] [INS] [002d0b3b] mov	ecx, dword ptr [rdx]                                      ; ecx = 0xfbad2498
[main] [INS] [002d0b3d] mov	eax, ecx                                                  ; eax = 0xfbad2498
[main] [INS] [002d0b3f] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [002d0b44] jne	0x2d0ba1
[main] [INS] [002d0b46] mov	r9, qword ptr [rdx + 0x88]                                ; r9 = 0x90018b10 -> 0
[main] [INS] [002d0b4d] mov	r10, qword ptr fs:[0x10]                                  ; r10 = 0x643f00 -> 643f00
[main] [INS] [002d0b56] cmp	qword ptr [r9 + 8], r10                                   ; 0x0 vs 0x643f00
[main] [INS] [002d0b5a] je	0x2d0b9c
[main] [INS] [002d0b5c] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [002d0b61] cmp	dword ptr [rip + 0x371d90], 0                             ; 0x0 vs 0x0
[main] [INS] [002d0b68] je	0x2d0b73
[main] [INS] [002d0b73] cmpxchg	dword ptr [r9], esi                                   ; store(0x90018b10,0x1)
[main] [INS] [002d0b77] je	0x2d0b8f
[main] [INS] [002d0b8f] mov	r9, qword ptr [rdx + 0x88]                                ; r9 = 0x90018b10 -> 1
[main] [INS] [002d0b96] mov	ecx, dword ptr [rdx]                                      ; ecx = 0xfbad2498
[main] [INS] [002d0b98] mov	qword ptr [r9 + 8], r10                                   ; store(0x90018b18,0x643f00) -> 643f00
[main] [INS] [002d0b9c] add	dword ptr [r9 + 4], 1                                     ; store(0x90018b14,0x1)
[main] [INS] [002d0ba1] mov	rbx, rdx                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002d0ba4] mov	r12d, ecx                                                 ; r12d = 0xfbad2498
[main] [INS] [002d0ba7] sub	r8d, 1                                                    ; r8d = 0xc34d -> 24bc8b4cffffc9a7
[main] [INS] [002d0bab] and	ecx, 0xffffffdf                                           ; ecx = 0xfbad2498
[main] [INS] [002d0bae] mov	rsi, rbp                                                  ; rsi = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d0bb1] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002d0bb4] mov	dword ptr [rdx], ecx                                      ; store(0x90018a30,0xfbad2498)
[main] [INS] [002d0bb6] movsxd	rdx, r8d                                               ; rdx = 0xc34d -> 24bc8b4cffffc9a7
[main] [INS] [002d0bb9] mov	ecx, 0xa                                                  ; ecx = 0xa
[main] [INS] [002d0bbe] mov	r8d, 1                                                    ; r8d = 0x1
[main] [INS] [002d0bc4] and	r12d, 0x20                                                ; r12d = 0x0
[main] [INS] [002d0bc8] call	0x2d1dd0                                                 ; call(0x2d1dd0)
[main] [INS] [002d1dd0] push	r15                                                      ; push(0x90000040) -> 294b5c613d006261
[main] [INS] [002d1dd2] push	r14                                                      ; push(0xc34e) -> e024bc8b4cffffc9
[main] [INS] [002d1dd4] mov	r15, rdx                                                  ; r15 = 0xc34d -> 24bc8b4cffffc9a7
[main] [INS] [002d1dd7] push	r13                                                      ; push(0x0)
[main] [INS] [002d1dd9] push	r12                                                      ; push(0x0)
[main] [INS] [002d1ddb] mov	r14, rdi                                                  ; r14 = 0x90018a30 -> fbad2498
[main] [INS] [002d1dde] push	rbp                                                      ; push(0x90000042) -> 6261294b5c613d00
[main] [INS] [002d1ddf] push	rbx                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [002d1de0] mov	rbp, rsi                                                  ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d1de3] mov	r12d, ecx                                                 ; r12d = 0xa
[main] [INS] [002d1de6] sub	rsp, 0x18                                                 ; rsp = 0x7f000008c850 -> 90000040
[main] [INS] [002d1dea] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002d1df0] mov	dword ptr [rsp + 0xc], r8d                                ; store(0x7f000008c85c,0x1)
[main] [INS] [002d1df5] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002d1df7] je	0x2d1f05
[main] [INS] [002d1dfd] test	r15, r15                                                 ; 0xc34d vs 0xc34d
[main] [INS] [002d1e00] mov	qword ptr [rsp], rbp                                      ; store(0x7f000008c850,0x90000042) -> 6261294b5c613d00
[main] [INS] [002d1e04] jne	0x2d1e4a
[main] [INS] [002d1e4a] mov	r13, qword ptr [r14 + 8]                                  ; r13 = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002d1e4e] mov	rbx, qword ptr [r14 + 0x10]                               ; rbx = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002d1e52] sub	rbx, r13                                                  ; rbx = 0x0
[main] [INS] [002d1e55] test	rbx, rbx                                                 ; 0x0 vs 0x0
[main] [INS] [002d1e58] jg	0x2d1e10
[main] [INS] [002d1e5a] mov	rdi, r14                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002d1e5d] call	0x2e00d0                                                 ; call(0x2e00d0)
[main] [INS] [002e00d0] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002e00d6] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002e00d8] jne	0x2e0190
[main] [INS] [002e0190] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002e0193] je	0x2e00e8
[main] [INS] [002e00e8] push	rbp                                                      ; push(0x90000042) -> 6261294b5c613d00
[main] [INS] [002e00e9] push	rbx                                                      ; push(0x0)
[main] [INS] [002e00ea] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002e00ed] sub	rsp, 8                                                    ; rsp = 0x7f000008c830 -> 1
[main] [INS] [002e00f1] mov	edx, dword ptr [rdi]                                      ; edx = 0xfbad2498
[main] [INS] [002e00f3] test	dh, 8                                                    ; 0x24 vs 0x8
[main] [INS] [002e00f6] jne	0x2e01a0
[main] [INS] [002e00fc] mov	rax, qword ptr [rdi + 8]                                  ; rax = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002e0100] mov	rsi, qword ptr [rdi + 0x10]                               ; rsi = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002e0104] cmp	rax, rsi                                                  ; 0x90019c70 vs 0x90019c70
[main] [INS] [002e0107] jb	0x2e0178
[main] [INS] [002e0109] and	dh, 1                                                     ; dh = 0x0
[main] [INS] [002e010c] jne	0x2e0160
[main] [INS] [002e010e] cmp	qword ptr [rbx + 0x60], 0                                 ; 0x0 vs 0x0
[main] [INS] [002e0113] je	0x2e0220
[main] [INS] [002e0220] mov	rdi, qword ptr [rbx + 0x48]                               ; rdi = 0x0
[main] [INS] [002e0224] test	rdi, rdi                                                 ; 0x0 vs 0x0
[main] [INS] [002e0227] je	0x2e0129
[main] [INS] [002e0129] mov	rbp, qword ptr [rbx + 0xd8]                               ; rbp = 0x63a2a0 -> 0
[main] [INS] [002e0130] lea	rdx, [rip + 0x359629]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002e0137] lea	rax, [rip + 0x35a38a]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002e013e] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002e0141] mov	rcx, rbp                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002e0144] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002e0147] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002e014a] jbe	0x2e0278
[main] [INS] [002e0150] mov	rax, qword ptr [rbp + 0x28]                               ; rax = 0x2e03c0 -> 359397158d485355
[main] [INS] [002e0154] add	rsp, 8                                                    ; rsp = 0x7f000008c838 -> 0
[main] [INS] [002e0158] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002e015b] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002e015c] pop	rbp                                                       ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002e015d] jmp	rax                                                       ; jmp(0x2e03c0)
[main] [INS] [002e03c0] push	rbp                                                      ; push(0x90000042) -> 6261294b5c613d00
[main] [INS] [002e03c1] push	rbx                                                      ; push(0x0)
[main] [INS] [002e03c2] lea	rdx, [rip + 0x359397]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002e03c9] lea	rax, [rip + 0x35a0f8]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002e03d0] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002e03d3] sub	rsp, 8                                                    ; rsp = 0x7f000008c830 -> 1
[main] [INS] [002e03d7] mov	rbp, qword ptr [rdi + 0xd8]                               ; rbp = 0x63a2a0 -> 0
[main] [INS] [002e03de] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002e03e1] mov	rcx, rbp                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002e03e4] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002e03e7] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002e03ea] jbe	0x2e0410
[main] [INS] [002e03ec] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002e03ef] call	qword ptr [rbp + 0x20]                                   ; call(0x2df020)
[main] [INS] [002df020] mov	eax, dword ptr [rdi]                                      ; eax = 0xfbad2498
[main] [INS] [002df022] test	al, 4                                                    ; 0x98 vs 0x4
[main] [INS] [002df024] jne	0x2df270
[main] [INS] [002df02a] mov	rdx, qword ptr [rdi + 8]                                  ; rdx = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002df02e] cmp	rdx, qword ptr [rdi + 0x10]                               ; 0x90019c70 vs 0x90019c70
[main] [INS] [002df032] jb	0x2df180
[main] [INS] [002df038] push	r14                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [002df03a] push	r13                                                      ; push(0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df03c] push	r12                                                      ; push(0xa)
[main] [INS] [002df03e] push	rbp                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002df03f] push	rbx                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [002df040] cmp	qword ptr [rdi + 0x38], 0                                 ; 0x90019c70 vs 0x0
[main] [INS] [002df045] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002df048] je	0x2df238
[main] [INS] [002df04e] lea	r12, [rip + 0x35a70b]                                     ; r12 = 0x639760 -> 0
[main] [INS] [002df055] lea	rbp, [rip + 0x35b46c]                                     ; rbp = 0x63a4c8 -> 0
[main] [INS] [002df05c] sub	rbp, r12                                                  ; rbp = 0xd68
[main] [INS] [002df05f] test	eax, 0x202                                               ; 0xfbad2498 vs 0x202
[main] [INS] [002df064] je	0x2df100
[main] [INS] [002df100] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002df103] call	0x2dfdb0                                                 ; call(0x2dfdb0)
[main] [INS] [002dfdb0] push	rbp                                                      ; push(0xd68)
[main] [INS] [002dfdb1] push	rbx                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [002dfdb2] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002dfdb5] sub	rsp, 8                                                    ; rsp = 0x7f000008c7e0 -> 90018a30
[main] [INS] [002dfdb9] mov	rax, qword ptr [rdi + 0x28]                               ; rax = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002dfdbd] cmp	rax, qword ptr [rdi + 0x20]                               ; 0x90019c70 vs 0x90019c70
[main] [INS] [002dfdc1] jbe	0x2dfdfa
[main] [INS] [002dfdfa] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2498
[main] [INS] [002dfdfc] test	dh, 1                                                    ; 0x24 vs 0x1
[main] [INS] [002dfdff] jne	0x2dfe30
[main] [INS] [002dfe01] cmp	qword ptr [rbx + 0x10], rax                               ; 0x90019c70 vs 0x90019c70
[main] [INS] [002dfe05] mov	rcx, qword ptr [rbx + 0x38]                               ; rcx = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002dfe09] mov	qword ptr [rbx + 0x18], rcx                               ; store(0x90018a48,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe0d] jae	0x2dfe13
[main] [INS] [002dfe13] and	dh, 0xf7                                                  ; dh = 0x24
[main] [INS] [002dfe16] mov	qword ptr [rbx + 8], rax                                  ; store(0x90018a38,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe1a] mov	qword ptr [rbx + 0x30], rax                               ; store(0x90018a60,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe1e] mov	qword ptr [rbx + 0x20], rax                               ; store(0x90018a50,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe22] mov	dword ptr [rbx], edx                                      ; store(0x90018a30,0xfbad2498)
[main] [INS] [002dfe24] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002dfe26] add	rsp, 8                                                    ; rsp = 0x7f000008c7e8 -> 90018a30
[main] [INS] [002dfe2a] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002dfe2b] pop	rbp                                                       ; rbp = 0xd68
[main] [INS] [002dfe2c] ret	
[main] [INS] [002df108] mov	r13, qword ptr [rbx + 0xd8]                               ; r13 = 0x63a2a0 -> 0
[main] [INS] [002df10f] mov	rsi, qword ptr [rbx + 0x38]                               ; rsi = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002df113] mov	rax, r13                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002df116] mov	qword ptr [rbx + 8], rsi                                  ; store(0x90018a38,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df11a] mov	qword ptr [rbx + 0x18], rsi                               ; store(0x90018a48,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df11e] sub	rax, r12                                                  ; rax = 0xb40
[main] [INS] [002df121] mov	qword ptr [rbx + 0x10], rsi                               ; store(0x90018a40,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df125] mov	qword ptr [rbx + 0x30], rsi                               ; store(0x90018a60,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df129] cmp	rax, rbp                                                  ; 0xb40 vs 0xd68
[main] [INS] [002df12c] mov	qword ptr [rbx + 0x28], rsi                               ; store(0x90018a58,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df130] mov	qword ptr [rbx + 0x20], rsi                               ; store(0x90018a50,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df134] jae	0x2df260
[main] [INS] [002df13a] mov	rdx, qword ptr [rbx + 0x40]                               ; rdx = 0x9001ac70 -> 0
[main] [INS] [002df13e] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002df141] sub	rdx, rsi                                                  ; rdx = 0x1000 -> "ELF"
[main] [INS] [002df144] call	qword ptr [r13 + 0x70]                                   ; call(0x2dd910)
[main] [INS] [002dd910] mov	rax, rdi                                                  ; rax = 0x90018a30 -> fbad2498
[main] [INS] [002dd913] mov	edi, dword ptr [rdi + 0x70]                               ; edi = 0x18
[main] [INS] [002dd916] test	byte ptr [rax + 0x74], 2                                 ; 0x0 vs 0x2
[main] [INS] [002dd91a] jne	0x2dd928
[main] [INS] [002dd91c] jmp	0x362070                                                  ; jmp(0x362070)
[main] [INS] [00362070] lea	rax, [rip + 0x2e0881]                                     ; rax = 0x6428f8 -> 0
[main] [INS] [00362077] mov	eax, dword ptr [rax]                                      ; eax = 0x0
[main] [INS] [00362079] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0036207b] jne	0x362090
[main] [INS] [0036207d] xor	eax, eax                                                  ; eax = 0x0
[main] [SYSCALL] read ( fd=0x18 (file), buf=0x90019c70, count=0x1000 ) -> 0
[main] [INS] [00362081] cmp	rax, -0x1000                                              ; 0x0 vs 0x-1000
[main] [INS] [00362087] ja	0x3620e0
[main] [INS] [00362089] ret	
[main] [INS] [002df148] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002df14b] jle	0x2df188
[main] [INS] [002df188] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2498
[main] [INS] [002df18a] mov	ecx, edx                                                  ; ecx = 0xfbad2498
[main] [INS] [002df18c] or	edx, 0x20                                                  ; edx = 0xfbad24b8
[main] [INS] [002df18f] or	ecx, 0x10                                                  ; ecx = 0xfbad2498
[main] [INS] [002df192] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002df195] mov	rax, -1                                                   ; rax = 0xffffffffffffffff
[main] [INS] [002df19c] cmove	edx, ecx                                                ; edx = 0xfbad2498
[main] [INS] [002df19f] mov	qword ptr [rbx + 0x90], rax                               ; store(0x90018ac0,0xffffffffffffffff)
[main] [INS] [002df1a6] mov	dword ptr [rbx], edx                                      ; store(0x90018a30,0xfbad2498)
[main] [INS] [002df1a8] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002df1a9] pop	rbp                                                       ; rbp = 0x63a2a0 -> 0
[main] [INS] [002df1aa] pop	r12                                                       ; r12 = 0xa
[main] [INS] [002df1ac] pop	r13                                                       ; r13 = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002df1ae] pop	r14                                                       ; r14 = 0x90018a30 -> fbad2498
[main] [INS] [002df1b0] ret	
[main] [INS] [002e03f2] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002e03f5] je	0x2e0406
[main] [INS] [002e0406] add	rsp, 8                                                    ; rsp = 0x7f000008c838 -> 0
[main] [INS] [002e040a] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002e040b] pop	rbp                                                       ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002e040c] ret	
[main] [INS] [002d1e62] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002d1e65] je	0x2d1e80
[main] [INS] [002d1e80] mov	rax, rbp                                                  ; rax = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d1e83] sub	rax, qword ptr [rsp]                                      ; rax = 0x0
[main] [INS] [002d1e87] add	rsp, 0x18                                                 ; rsp = 0x7f000008c868 -> 90018a30
[main] [INS] [002d1e8b] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002d1e8c] pop	rbp                                                       ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d1e8d] pop	r12                                                       ; r12 = 0x0
[main] [INS] [002d1e8f] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002d1e91] pop	r14                                                       ; r14 = 0xc34e -> e024bc8b4cffffc9
[main] [INS] [002d1e93] pop	r15                                                       ; r15 = 0x90000040 -> 294b5c613d006261
[main] [INS] [002d1e95] ret	
[main] [INS] [002d0bcd] xor	esi, esi                                                  ; esi = 0x0
[main] [INS] [002d0bcf] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002d0bd2] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2498
[main] [INS] [002d0bd4] je	0x2d0be8
[main] [INS] [002d0be8] or	r12d, edx                                                  ; r12d = 0xfbad2498
[main] [INS] [002d0beb] mov	dword ptr [rbx], r12d                                     ; store(0x90018a30,0xfbad2498)
[main] [INS] [002d0bee] and	r12d, 0x8000                                              ; r12d = 0x0
[main] [INS] [002d0bf5] jne	0x2d0c36
[main] [INS] [002d0bf7] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x90018b10 -> 100000001
[main] [INS] [002d0bfe] sub	dword ptr [rdx + 4], 1                                    ; store(0x90018b14,0x1)
[main] [INS] [002d0c02] jne	0x2d0c36
[main] [INS] [002d0c04] mov	qword ptr [rdx + 8], 0                                    ; store(0x90018b18,0x0)
[main] [INS] [002d0c0c] cmp	dword ptr [rip + 0x371ce5], 0                             ; 0x0 vs 0x0
[main] [INS] [002d0c13] je	0x2d0c1c
[main] [INS] [002d0c1c] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [002d0c1e] je	0x2d0c36
[main] [INS] [002d0c36] pop	rbx                                                       ; rbx = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d0c37] mov	rax, rsi                                                  ; rax = 0x0
[main] [INS] [002d0c3a] pop	rbp                                                       ; rbp = 0xc350 -> e024bc8b4cff
[main] [INS] [002d0c3b] pop	r12                                                       ; r12 = 0xc350 -> e024bc8b4cff
[main] [INS] [002d0c3d] ret	
[main] [INS] [0000f2ee] add	qword ptr [rip + 0x237faa], 1                             ; store(0x2472a0,0x1)
[main] [INS] [0000f2f6] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [0000f2f9] je	0xf438
[main] [INS] [0000f438] add	qword ptr [rip + 0x237e68], 1                             ; store(0x2472a8,0x1)
[main] [INS] [0000f440] cmp	qword ptr [rsp + 0x10], rbx                               ; 0x90000040 vs 0x90000042
[main] [INS] [0000f445] jne	0xf458
[main] [INS] [0000f458] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x90000040 -> 294b5c613d006261
[main] [INS] [0000f45d] add	rsp, 0x38                                                 ; rsp = 0x7f000008c8f8 -> 0
[main] [INS] [0000f461] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [0000f462] pop	rbp                                                       ; rbp = 0x90000040 -> 294b5c613d006261
[main] [INS] [0000f463] pop	r12                                                       ; r12 = 0x90018a30 -> fbad2498
[main] [INS] [0000f465] pop	r13                                                       ; r13 = 0x0
[main] [INS] [0000f467] pop	r14                                                       ; r14 = 0x4000 -> 24a880
[main] [INS] [0000f469] pop	r15                                                       ; r15 = 0x0
[main] [INS] [0000f46b] ret	
[main] [INS] [000082e3] test	rax, rax                                                 ; 0x90000040 vs 0x90000040
[main] [INS] [000082e6] jne	0x8270
[main] [INS] [00008270] add	qword ptr [rip + 0x2405e8], 1                             ; store(0x248860,0x1)
[main] [INS] [00008278] cmp	qword ptr [rip + 0x23ef51], r12                           ; 0x63da00 vs 0x90018a30
[main] [INS] [0000827f] mov	rbp, qword ptr [rip + 0x241152]                           ; rbp = 0x90000040 -> 294b5c613d006261
[main] [INS] [00008286] mov	rbx, rbp                                                  ; rbx = 0x90000040 -> 294b5c613d006261
[main] [INS] [00008289] je	0x82ac
[main] [INS] [0000828b] mov	rsi, qword ptr [rip + 0x241186]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [00008292] mov	rdi, rbp                                                  ; rdi = 0x90000040 -> 294b5c613d006261
[main] [INS] [00008295] add	qword ptr [rip + 0x2405db], 1                             ; store(0x248878,0x1)
[main] [INS] [0000829d] call	0x5750                                                   ; call(0x5750)
[main] [INS] [00005750] jmp	qword ptr [rip + 0x23f792]                                ; jmp(0x2d11f0)
[main] [INS] [002d11f0] push	r13                                                      ; push(0x0)
[main] [INS] [002d11f2] push	r12                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [002d11f4] push	rbp                                                      ; push(0x90000040) -> 294b5c613d006261
[main] [INS] [002d11f5] push	rbx                                                      ; push(0x90000040) -> 294b5c613d006261
[main] [INS] [002d11f6] mov	rbx, rsi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002d11f9] mov	rbp, rdi                                                  ; rbp = 0x90000040 -> 294b5c613d006261
[main] [INS] [002d11fc] sub	rsp, 8                                                    ; rsp = 0x7f000008c900 -> 90000040
[main] [INS] [002d1200] call	0x273100                                                 ; call(0x273100)
[main] [INS] [00273100] jmp	qword ptr [rip + 0x3c9fa2]                                ; jmp(0x303620)
[main] [INS] [00303620] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [00303624] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [00303628] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [0030362c] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [00303630] mov	rax, rdi                                                  ; rax = 0x90000040 -> 294b5c613d006261
[main] [INS] [00303633] mov	rcx, rdi                                                  ; rcx = 0x90000040 -> 294b5c613d006261
[main] [INS] [00303636] and	rcx, 0xfff                                                ; rcx = 0x40
[main] [INS] [0030363d] cmp	rcx, 0xfcf                                                ; 0x40 vs 0xfcf
[main] [INS] [00303644] ja	0x3036b0
[main] [INS] [00303646] movdqu	xmm4, xmmword ptr [rax]                                ; xmm4 = 0xa43006261294b5c613d006261
[main] [INS] [0030364a] pcmpeqb	xmm4, xmm0                                            ; xmm4 = 0xffffff0000ff00000000000000ff0000
[main] [INS] [0030364e] pmovmskb	edx, xmm4                                            ; edx = 0xe404 -> 2c63d358d480000
[main] [INS] [00303652] test	edx, edx                                                 ; 0xe404 vs 0xe404
[main] [INS] [00303654] je	0x30365a
[main] [INS] [00303656] bsf	eax, edx                                                  ; eax = 0x2
[main] [INS] [00303659] ret	
[main] [INS] [002d1205] mov	r12, rax                                                  ; r12 = 0x2
[main] [INS] [002d1208] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002d120a] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [002d120f] jne	0x2d1267
[main] [INS] [002d1211] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [002d1218] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002d1221] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [002d1225] je	0x2d1263
[main] [INS] [002d1227] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [002d122c] cmp	dword ptr [rip + 0x3716c5], 0                             ; 0x0 vs 0x0
[main] [INS] [002d1233] je	0x2d123d
[main] [INS] [002d123d] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [002d1240] je	0x2d1258
[main] [INS] [002d1258] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [002d125f] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [002d1263] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002d1267] mov	eax, dword ptr [rbx + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002d126d] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002d126f] jne	0x2d1310
[main] [INS] [002d1310] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002d1313] je	0x2d127f
[main] [INS] [002d127f] mov	r13, qword ptr [rbx + 0xd8]                               ; r13 = 0x63a2a0 -> 0
[main] [INS] [002d1286] lea	rdx, [rip + 0x3684d3]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002d128d] lea	rax, [rip + 0x369234]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002d1294] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002d1297] mov	rcx, r13                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002d129a] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002d129d] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002d12a0] jbe	0x2d1320
[main] [INS] [002d12a2] mov	rdx, r12                                                  ; rdx = 0x2
[main] [INS] [002d12a5] mov	rsi, rbp                                                  ; rsi = 0x90000040 -> 294b5c613d006261
[main] [INS] [002d12a8] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002d12ab] call	qword ptr [r13 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x0)
[main] [INS] [002dd932] push	r14                                                      ; push(0x4000) -> 24a880
[main] [INS] [002dd934] push	r13                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd936] push	r12                                                      ; push(0x2)
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x90000040) -> 294b5c613d006261
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008c8b0 -> c350
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x2 vs 0x2
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x90000040 -> 294b5c613d006261
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x2
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c60 -> "PCRE ver"
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c60
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0x1000 -> "ELF"
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0x1000 vs 0x1000
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x2 vs 0x1000
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x90000040 -> 294b5c613d006261
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x2
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x2
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x2
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c60 -> "PCRE ver"
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c62 -> "RE versi"
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x2 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb16c0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x90000042 -> 6261294b5c613d00
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c62 -> "RE versi"
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c0580 -> fe578966fe568b66
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c0580)
[main] [INS] [003c0580] mov	dx, word ptr [rsi - 2]                                    ; dx = 0x6261 -> 5834800030b8ae8
[main] [INS] [003c0584] mov	word ptr [rdi - 2], dx                                    ; store(0x90018c60,0x6261) -> 5834800030b8ae8
[main] [INS] [003c0588] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c62) -> "RE versi"
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x2
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x2
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008c8c8 -> 63e760
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x2
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x90000040 -> 294b5c613d006261
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x2
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x63a2a0 -> 0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x4000 -> 24a880
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002d12af] cmp	r12, rax                                                  ; 0x2 vs 0x2
[main] [INS] [002d12b2] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [002d12b7] jne	0x2d1319
[main] [INS] [002d12b9] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002d12bf] jne	0x2d1300
[main] [INS] [002d12c1] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002d12c8] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002d12cc] jne	0x2d1300
[main] [INS] [002d12ce] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [002d12d6] cmp	dword ptr [rip + 0x37161b], 0                             ; 0x0 vs 0x0
[main] [INS] [002d12dd] je	0x2d12e6
[main] [INS] [002d12e6] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [002d12e8] je	0x2d1300
[main] [INS] [002d1300] add	rsp, 8                                                    ; rsp = 0x7f000008c908 -> 90000040
[main] [INS] [002d1304] mov	eax, esi                                                  ; eax = 0x1
[main] [INS] [002d1306] pop	rbx                                                       ; rbx = 0x90000040 -> 294b5c613d006261
[main] [INS] [002d1307] pop	rbp                                                       ; rbp = 0x90000040 -> 294b5c613d006261
[main] [INS] [002d1308] pop	r12                                                       ; r12 = 0x90018a30 -> fbad2498
[main] [INS] [002d130a] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002d130c] ret	
[main] [INS] [000082a2] mov	rbp, qword ptr [rip + 0x24112f]                           ; rbp = 0x90000040 -> 294b5c613d006261
[main] [INS] [000082a9] mov	rbx, rbp                                                  ; rbx = 0x90000040 -> 294b5c613d006261
[main] [INS] [000082ac] mov	rdi, rbx                                                  ; rdi = 0x90000040 -> 294b5c613d006261
[main] [INS] [000082af] call	0x5700                                                   ; call(0x5700)
[main] [INS] [00005700] jmp	qword ptr [rip + 0x23f7ba]                                ; jmp(0x303620)
[main] [INS] [00303620] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [00303624] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [00303628] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [0030362c] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [00303630] mov	rax, rdi                                                  ; rax = 0x90000040 -> 294b5c613d006261
[main] [INS] [00303633] mov	rcx, rdi                                                  ; rcx = 0x90000040 -> 294b5c613d006261
[main] [INS] [00303636] and	rcx, 0xfff                                                ; rcx = 0x40
[main] [INS] [0030363d] cmp	rcx, 0xfcf                                                ; 0x40 vs 0xfcf
[main] [INS] [00303644] ja	0x3036b0
[main] [INS] [00303646] movdqu	xmm4, xmmword ptr [rax]                                ; xmm4 = 0xa43006261294b5c613d006261
[main] [INS] [0030364a] pcmpeqb	xmm4, xmm0                                            ; xmm4 = 0xffffff0000ff00000000000000ff0000
[main] [INS] [0030364e] pmovmskb	edx, xmm4                                            ; edx = 0xe404 -> 2c63d358d480000
[main] [INS] [00303652] test	edx, edx                                                 ; 0xe404 vs 0xe404
[main] [INS] [00303654] je	0x30365a
[main] [INS] [00303656] bsf	eax, edx                                                  ; eax = 0x2
[main] [INS] [00303659] ret	
[main] [INS] [000082b4] mov	r13d, eax                                                 ; r13d = 0x2
[main] [INS] [000082b7] cdqe	
[main] [INS] [000082b9] cmp	byte ptr [rbx + rax - 1], 0xa                             ; 0x62 vs 0xa
[main] [INS] [000082be] je	0x83d0
[main] [INS] [000082c4] add	qword ptr [rip + 0x2405bc], 1                             ; store(0x248888,0x1)
[main] [INS] [000082cc] movsxd	rbx, r13d                                              ; rbx = 0x2
[main] [INS] [000082cf] lea	rdx, [rip + 0x32ece]                                      ; rdx = 0x3b1a4 -> "data> "
[main] [INS] [000082d6] mov	rdi, r12                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [000082d9] lea	rsi, [rbp + rbx]                                          ; rsi = 0x90000042 -> 6261294b5c613d00
[main] [INS] [000082de] call	0xf270                                                   ; call(0xf270)
[main] [INS] [0000f270] push	r15                                                      ; push(0x0)
[main] [INS] [0000f272] push	r14                                                      ; push(0x4000) -> 24a880
[main] [INS] [0000f274] push	r13                                                      ; push(0x2)
[main] [INS] [0000f276] push	r12                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [0000f278] push	rbp                                                      ; push(0x90000040) -> 294b5c613d006261
[main] [INS] [0000f279] push	rbx                                                      ; push(0x2)
[main] [INS] [0000f27a] mov	rbx, rsi                                                  ; rbx = 0x90000042 -> 6261294b5c613d00
[main] [INS] [0000f27d] sub	rsp, 0x38                                                 ; rsp = 0x7f000008c8c0 -> 7f000008ed78
[main] [INS] [0000f281] mov	ebp, dword ptr [rip + 0x235d89]                           ; ebp = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f287] mov	r15, qword ptr [rip + 0x23a14a]                           ; r15 = 0x90000040 -> 294b5c613d006261
[main] [INS] [0000f28e] mov	qword ptr [rsp + 8], rdi                                  ; store(0x7f000008c8c8,0x90018a30) -> fbad2498
[main] [INS] [0000f293] mov	qword ptr [rsp + 0x28], rdx                               ; store(0x7f000008c8e8,0x3b1a4) -> "data> "
[main] [INS] [0000f298] mov	qword ptr [rsp + 0x10], rsi                               ; store(0x7f000008c8d0,0x90000042) -> 6261294b5c613d00
[main] [INS] [0000f29d] nop	dword ptr [rax]
[main] [INS] [0000f2a0] mov	r9, rbx                                                   ; r9 = 0x90000042 -> 6261294b5c613d00
[main] [INS] [0000f2a3] movsxd	r12, ebp                                               ; r12 = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f2a6] sub	r9, r15                                                   ; r9 = 0x2
[main] [INS] [0000f2a9] mov	r14, r12                                                  ; r14 = 0xc350 -> e024bc8b4cff
[main] [INS] [0000f2ac] sub	r14, r9                                                   ; r14 = 0xc34e -> e024bc8b4cffffc9
[main] [INS] [0000f2af] cmp	r14, 0x3e8                                                ; 0xc34e vs 0x3e8
[main] [INS] [0000f2b6] jbe	0xf350
[main] [INS] [0000f2bc] add	qword ptr [rip + 0x237f9c], 1                             ; store(0x247260,0x1)
[main] [INS] [0000f2c4] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x90018a30 -> fbad2498
[main] [INS] [0000f2c9] cmp	qword ptr [rip + 0x237f00], rax                           ; 0x63da00 vs 0x90018a30
[main] [INS] [0000f2d0] je	0xf410
[main] [INS] [0000f2d6] mov	rdx, qword ptr [rsp + 8]                                  ; rdx = 0x90018a30 -> fbad2498
[main] [INS] [0000f2db] mov	esi, r14d                                                 ; esi = 0xc34e -> e024bc8b4cffffc9
[main] [INS] [0000f2de] mov	rdi, rbx                                                  ; rdi = 0x90000042 -> 6261294b5c613d00
[main] [INS] [0000f2e1] add	qword ptr [rip + 0x237f8f], 1                             ; store(0x247278,0x1)
[main] [INS] [0000f2e9] call	0x5790                                                   ; call(0x5790)
[main] [INS] [00005790] jmp	qword ptr [rip + 0x23f772]                                ; jmp(0x2d0b20)
[main] [INS] [002d0b20] test	esi, esi                                                 ; 0xc34e vs 0xc34e
[main] [INS] [002d0b22] jle	0x2d0c70
[main] [INS] [002d0b28] cmp	esi, 1                                                    ; 0xc34e vs 0x1
[main] [INS] [002d0b2b] push	r12                                                      ; push(0xc350) -> e024bc8b4cff
[main] [INS] [002d0b2d] mov	r8d, esi                                                  ; r8d = 0xc34e -> e024bc8b4cffffc9
[main] [INS] [002d0b30] push	rbp                                                      ; push(0xc350) -> e024bc8b4cff
[main] [INS] [002d0b31] mov	rbp, rdi                                                  ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d0b34] push	rbx                                                      ; push(0x90000042) -> 6261294b5c613d00
[main] [INS] [002d0b35] je	0x2d0c60
[main] [INS] [002d0b3b] mov	ecx, dword ptr [rdx]                                      ; ecx = 0xfbad2498
[main] [INS] [002d0b3d] mov	eax, ecx                                                  ; eax = 0xfbad2498
[main] [INS] [002d0b3f] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [002d0b44] jne	0x2d0ba1
[main] [INS] [002d0b46] mov	r9, qword ptr [rdx + 0x88]                                ; r9 = 0x90018b10 -> 0
[main] [INS] [002d0b4d] mov	r10, qword ptr fs:[0x10]                                  ; r10 = 0x643f00 -> 643f00
[main] [INS] [002d0b56] cmp	qword ptr [r9 + 8], r10                                   ; 0x0 vs 0x643f00
[main] [INS] [002d0b5a] je	0x2d0b9c
[main] [INS] [002d0b5c] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [002d0b61] cmp	dword ptr [rip + 0x371d90], 0                             ; 0x0 vs 0x0
[main] [INS] [002d0b68] je	0x2d0b73
[main] [INS] [002d0b73] cmpxchg	dword ptr [r9], esi                                   ; store(0x90018b10,0x1)
[main] [INS] [002d0b77] je	0x2d0b8f
[main] [INS] [002d0b8f] mov	r9, qword ptr [rdx + 0x88]                                ; r9 = 0x90018b10 -> 1
[main] [INS] [002d0b96] mov	ecx, dword ptr [rdx]                                      ; ecx = 0xfbad2498
[main] [INS] [002d0b98] mov	qword ptr [r9 + 8], r10                                   ; store(0x90018b18,0x643f00) -> 643f00
[main] [INS] [002d0b9c] add	dword ptr [r9 + 4], 1                                     ; store(0x90018b14,0x1)
[main] [INS] [002d0ba1] mov	rbx, rdx                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002d0ba4] mov	r12d, ecx                                                 ; r12d = 0xfbad2498
[main] [INS] [002d0ba7] sub	r8d, 1                                                    ; r8d = 0xc34d -> 24bc8b4cffffc9a7
[main] [INS] [002d0bab] and	ecx, 0xffffffdf                                           ; ecx = 0xfbad2498
[main] [INS] [002d0bae] mov	rsi, rbp                                                  ; rsi = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d0bb1] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002d0bb4] mov	dword ptr [rdx], ecx                                      ; store(0x90018a30,0xfbad2498)
[main] [INS] [002d0bb6] movsxd	rdx, r8d                                               ; rdx = 0xc34d -> 24bc8b4cffffc9a7
[main] [INS] [002d0bb9] mov	ecx, 0xa                                                  ; ecx = 0xa
[main] [INS] [002d0bbe] mov	r8d, 1                                                    ; r8d = 0x1
[main] [INS] [002d0bc4] and	r12d, 0x20                                                ; r12d = 0x0
[main] [INS] [002d0bc8] call	0x2d1dd0                                                 ; call(0x2d1dd0)
[main] [INS] [002d1dd0] push	r15                                                      ; push(0x90000040) -> 294b5c613d006261
[main] [INS] [002d1dd2] push	r14                                                      ; push(0xc34e) -> e024bc8b4cffffc9
[main] [INS] [002d1dd4] mov	r15, rdx                                                  ; r15 = 0xc34d -> 24bc8b4cffffc9a7
[main] [INS] [002d1dd7] push	r13                                                      ; push(0x2)
[main] [INS] [002d1dd9] push	r12                                                      ; push(0x0)
[main] [INS] [002d1ddb] mov	r14, rdi                                                  ; r14 = 0x90018a30 -> fbad2498
[main] [INS] [002d1dde] push	rbp                                                      ; push(0x90000042) -> 6261294b5c613d00
[main] [INS] [002d1ddf] push	rbx                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [002d1de0] mov	rbp, rsi                                                  ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d1de3] mov	r12d, ecx                                                 ; r12d = 0xa
[main] [INS] [002d1de6] sub	rsp, 0x18                                                 ; rsp = 0x7f000008c850 -> 90000042
[main] [INS] [002d1dea] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002d1df0] mov	dword ptr [rsp + 0xc], r8d                                ; store(0x7f000008c85c,0x1)
[main] [INS] [002d1df5] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002d1df7] je	0x2d1f05
[main] [INS] [002d1dfd] test	r15, r15                                                 ; 0xc34d vs 0xc34d
[main] [INS] [002d1e00] mov	qword ptr [rsp], rbp                                      ; store(0x7f000008c850,0x90000042) -> 6261294b5c613d00
[main] [INS] [002d1e04] jne	0x2d1e4a
[main] [INS] [002d1e4a] mov	r13, qword ptr [r14 + 8]                                  ; r13 = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002d1e4e] mov	rbx, qword ptr [r14 + 0x10]                               ; rbx = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002d1e52] sub	rbx, r13                                                  ; rbx = 0x0
[main] [INS] [002d1e55] test	rbx, rbx                                                 ; 0x0 vs 0x0
[main] [INS] [002d1e58] jg	0x2d1e10
[main] [INS] [002d1e5a] mov	rdi, r14                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002d1e5d] call	0x2e00d0                                                 ; call(0x2e00d0)
[main] [INS] [002e00d0] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002e00d6] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002e00d8] jne	0x2e0190
[main] [INS] [002e0190] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002e0193] je	0x2e00e8
[main] [INS] [002e00e8] push	rbp                                                      ; push(0x90000042) -> 6261294b5c613d00
[main] [INS] [002e00e9] push	rbx                                                      ; push(0x0)
[main] [INS] [002e00ea] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002e00ed] sub	rsp, 8                                                    ; rsp = 0x7f000008c830 -> 1
[main] [INS] [002e00f1] mov	edx, dword ptr [rdi]                                      ; edx = 0xfbad2498
[main] [INS] [002e00f3] test	dh, 8                                                    ; 0x24 vs 0x8
[main] [INS] [002e00f6] jne	0x2e01a0
[main] [INS] [002e00fc] mov	rax, qword ptr [rdi + 8]                                  ; rax = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002e0100] mov	rsi, qword ptr [rdi + 0x10]                               ; rsi = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002e0104] cmp	rax, rsi                                                  ; 0x90019c70 vs 0x90019c70
[main] [INS] [002e0107] jb	0x2e0178
[main] [INS] [002e0109] and	dh, 1                                                     ; dh = 0x0
[main] [INS] [002e010c] jne	0x2e0160
[main] [INS] [002e010e] cmp	qword ptr [rbx + 0x60], 0                                 ; 0x0 vs 0x0
[main] [INS] [002e0113] je	0x2e0220
[main] [INS] [002e0220] mov	rdi, qword ptr [rbx + 0x48]                               ; rdi = 0x0
[main] [INS] [002e0224] test	rdi, rdi                                                 ; 0x0 vs 0x0
[main] [INS] [002e0227] je	0x2e0129
[main] [INS] [002e0129] mov	rbp, qword ptr [rbx + 0xd8]                               ; rbp = 0x63a2a0 -> 0
[main] [INS] [002e0130] lea	rdx, [rip + 0x359629]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002e0137] lea	rax, [rip + 0x35a38a]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002e013e] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002e0141] mov	rcx, rbp                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002e0144] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002e0147] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002e014a] jbe	0x2e0278
[main] [INS] [002e0150] mov	rax, qword ptr [rbp + 0x28]                               ; rax = 0x2e03c0 -> 359397158d485355
[main] [INS] [002e0154] add	rsp, 8                                                    ; rsp = 0x7f000008c838 -> 0
[main] [INS] [002e0158] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002e015b] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002e015c] pop	rbp                                                       ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002e015d] jmp	rax                                                       ; jmp(0x2e03c0)
[main] [INS] [002e03c0] push	rbp                                                      ; push(0x90000042) -> 6261294b5c613d00
[main] [INS] [002e03c1] push	rbx                                                      ; push(0x0)
[main] [INS] [002e03c2] lea	rdx, [rip + 0x359397]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002e03c9] lea	rax, [rip + 0x35a0f8]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002e03d0] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002e03d3] sub	rsp, 8                                                    ; rsp = 0x7f000008c830 -> 1
[main] [INS] [002e03d7] mov	rbp, qword ptr [rdi + 0xd8]                               ; rbp = 0x63a2a0 -> 0
[main] [INS] [002e03de] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002e03e1] mov	rcx, rbp                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002e03e4] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002e03e7] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002e03ea] jbe	0x2e0410
[main] [INS] [002e03ec] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002e03ef] call	qword ptr [rbp + 0x20]                                   ; call(0x2df020)
[main] [INS] [002df020] mov	eax, dword ptr [rdi]                                      ; eax = 0xfbad2498
[main] [INS] [002df022] test	al, 4                                                    ; 0x98 vs 0x4
[main] [INS] [002df024] jne	0x2df270
[main] [INS] [002df02a] mov	rdx, qword ptr [rdi + 8]                                  ; rdx = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002df02e] cmp	rdx, qword ptr [rdi + 0x10]                               ; 0x90019c70 vs 0x90019c70
[main] [INS] [002df032] jb	0x2df180
[main] [INS] [002df038] push	r14                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [002df03a] push	r13                                                      ; push(0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df03c] push	r12                                                      ; push(0xa)
[main] [INS] [002df03e] push	rbp                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002df03f] push	rbx                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [002df040] cmp	qword ptr [rdi + 0x38], 0                                 ; 0x90019c70 vs 0x0
[main] [INS] [002df045] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002df048] je	0x2df238
[main] [INS] [002df04e] lea	r12, [rip + 0x35a70b]                                     ; r12 = 0x639760 -> 0
[main] [INS] [002df055] lea	rbp, [rip + 0x35b46c]                                     ; rbp = 0x63a4c8 -> 0
[main] [INS] [002df05c] sub	rbp, r12                                                  ; rbp = 0xd68
[main] [INS] [002df05f] test	eax, 0x202                                               ; 0xfbad2498 vs 0x202
[main] [INS] [002df064] je	0x2df100
[main] [INS] [002df100] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002df103] call	0x2dfdb0                                                 ; call(0x2dfdb0)
[main] [INS] [002dfdb0] push	rbp                                                      ; push(0xd68)
[main] [INS] [002dfdb1] push	rbx                                                      ; push(0x90018a30) -> fbad2498
[main] [INS] [002dfdb2] mov	rbx, rdi                                                  ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002dfdb5] sub	rsp, 8                                                    ; rsp = 0x7f000008c7e0 -> 90018a30
[main] [INS] [002dfdb9] mov	rax, qword ptr [rdi + 0x28]                               ; rax = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002dfdbd] cmp	rax, qword ptr [rdi + 0x20]                               ; 0x90019c70 vs 0x90019c70
[main] [INS] [002dfdc1] jbe	0x2dfdfa
[main] [INS] [002dfdfa] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2498
[main] [INS] [002dfdfc] test	dh, 1                                                    ; 0x24 vs 0x1
[main] [INS] [002dfdff] jne	0x2dfe30
[main] [INS] [002dfe01] cmp	qword ptr [rbx + 0x10], rax                               ; 0x90019c70 vs 0x90019c70
[main] [INS] [002dfe05] mov	rcx, qword ptr [rbx + 0x38]                               ; rcx = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002dfe09] mov	qword ptr [rbx + 0x18], rcx                               ; store(0x90018a48,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe0d] jae	0x2dfe13
[main] [INS] [002dfe13] and	dh, 0xf7                                                  ; dh = 0x24
[main] [INS] [002dfe16] mov	qword ptr [rbx + 8], rax                                  ; store(0x90018a38,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe1a] mov	qword ptr [rbx + 0x30], rax                               ; store(0x90018a60,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe1e] mov	qword ptr [rbx + 0x20], rax                               ; store(0x90018a50,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002dfe22] mov	dword ptr [rbx], edx                                      ; store(0x90018a30,0xfbad2498)
[main] [INS] [002dfe24] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002dfe26] add	rsp, 8                                                    ; rsp = 0x7f000008c7e8 -> 90018a30
[main] [INS] [002dfe2a] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002dfe2b] pop	rbp                                                       ; rbp = 0xd68
[main] [INS] [002dfe2c] ret	
[main] [INS] [002df108] mov	r13, qword ptr [rbx + 0xd8]                               ; r13 = 0x63a2a0 -> 0
[main] [INS] [002df10f] mov	rsi, qword ptr [rbx + 0x38]                               ; rsi = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002df113] mov	rax, r13                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002df116] mov	qword ptr [rbx + 8], rsi                                  ; store(0x90018a38,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df11a] mov	qword ptr [rbx + 0x18], rsi                               ; store(0x90018a48,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df11e] sub	rax, r12                                                  ; rax = 0xb40
[main] [INS] [002df121] mov	qword ptr [rbx + 0x10], rsi                               ; store(0x90018a40,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df125] mov	qword ptr [rbx + 0x30], rsi                               ; store(0x90018a60,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df129] cmp	rax, rbp                                                  ; 0xb40 vs 0xd68
[main] [INS] [002df12c] mov	qword ptr [rbx + 0x28], rsi                               ; store(0x90018a58,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df130] mov	qword ptr [rbx + 0x20], rsi                               ; store(0x90018a50,0x90019c70) -> "/(?=a\K)"
[main] [INS] [002df134] jae	0x2df260
[main] [INS] [002df13a] mov	rdx, qword ptr [rbx + 0x40]                               ; rdx = 0x9001ac70 -> 0
[main] [INS] [002df13e] mov	rdi, rbx                                                  ; rdi = 0x90018a30 -> fbad2498
[main] [INS] [002df141] sub	rdx, rsi                                                  ; rdx = 0x1000 -> "ELF"
[main] [INS] [002df144] call	qword ptr [r13 + 0x70]                                   ; call(0x2dd910)
[main] [INS] [002dd910] mov	rax, rdi                                                  ; rax = 0x90018a30 -> fbad2498
[main] [INS] [002dd913] mov	edi, dword ptr [rdi + 0x70]                               ; edi = 0x18
[main] [INS] [002dd916] test	byte ptr [rax + 0x74], 2                                 ; 0x0 vs 0x2
[main] [INS] [002dd91a] jne	0x2dd928
[main] [INS] [002dd91c] jmp	0x362070                                                  ; jmp(0x362070)
[main] [INS] [00362070] lea	rax, [rip + 0x2e0881]                                     ; rax = 0x6428f8 -> 0
[main] [INS] [00362077] mov	eax, dword ptr [rax]                                      ; eax = 0x0
[main] [INS] [00362079] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0036207b] jne	0x362090
[main] [INS] [0036207d] xor	eax, eax                                                  ; eax = 0x0
[main] [SYSCALL] read ( fd=0x18 (file), buf=0x90019c70, count=0x1000 ) -> 0
[main] [INS] [00362081] cmp	rax, -0x1000                                              ; 0x0 vs 0x-1000
[main] [INS] [00362087] ja	0x3620e0
[main] [INS] [00362089] ret	
[main] [INS] [002df148] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002df14b] jle	0x2df188
[main] [INS] [002df188] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2498
[main] [INS] [002df18a] mov	ecx, edx                                                  ; ecx = 0xfbad2498
[main] [INS] [002df18c] or	edx, 0x20                                                  ; edx = 0xfbad24b8
[main] [INS] [002df18f] or	ecx, 0x10                                                  ; ecx = 0xfbad2498
[main] [INS] [002df192] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002df195] mov	rax, -1                                                   ; rax = 0xffffffffffffffff
[main] [INS] [002df19c] cmove	edx, ecx                                                ; edx = 0xfbad2498
[main] [INS] [002df19f] mov	qword ptr [rbx + 0x90], rax                               ; store(0x90018ac0,0xffffffffffffffff)
[main] [INS] [002df1a6] mov	dword ptr [rbx], edx                                      ; store(0x90018a30,0xfbad2498)
[main] [INS] [002df1a8] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002df1a9] pop	rbp                                                       ; rbp = 0x63a2a0 -> 0
[main] [INS] [002df1aa] pop	r12                                                       ; r12 = 0xa
[main] [INS] [002df1ac] pop	r13                                                       ; r13 = 0x90019c70 -> "/(?=a\K)"
[main] [INS] [002df1ae] pop	r14                                                       ; r14 = 0x90018a30 -> fbad2498
[main] [INS] [002df1b0] ret	
[main] [INS] [002e03f2] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002e03f5] je	0x2e0406
[main] [INS] [002e0406] add	rsp, 8                                                    ; rsp = 0x7f000008c838 -> 0
[main] [INS] [002e040a] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002e040b] pop	rbp                                                       ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002e040c] ret	
[main] [INS] [002d1e62] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002d1e65] je	0x2d1e80
[main] [INS] [002d1e80] mov	rax, rbp                                                  ; rax = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d1e83] sub	rax, qword ptr [rsp]                                      ; rax = 0x0
[main] [INS] [002d1e87] add	rsp, 0x18                                                 ; rsp = 0x7f000008c868 -> 90018a30
[main] [INS] [002d1e8b] pop	rbx                                                       ; rbx = 0x90018a30 -> fbad2498
[main] [INS] [002d1e8c] pop	rbp                                                       ; rbp = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d1e8d] pop	r12                                                       ; r12 = 0x0
[main] [INS] [002d1e8f] pop	r13                                                       ; r13 = 0x2
[main] [INS] [002d1e91] pop	r14                                                       ; r14 = 0xc34e -> e024bc8b4cffffc9
[main] [INS] [002d1e93] pop	r15                                                       ; r15 = 0x90000040 -> 294b5c613d006261
[main] [INS] [002d1e95] ret	
[main] [INS] [002d0bcd] xor	esi, esi                                                  ; esi = 0x0
[main] [INS] [002d0bcf] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002d0bd2] mov	edx, dword ptr [rbx]                                      ; edx = 0xfbad2498
[main] [INS] [002d0bd4] je	0x2d0be8
[main] [INS] [002d0be8] or	r12d, edx                                                  ; r12d = 0xfbad2498
[main] [INS] [002d0beb] mov	dword ptr [rbx], r12d                                     ; store(0x90018a30,0xfbad2498)
[main] [INS] [002d0bee] and	r12d, 0x8000                                              ; r12d = 0x0
[main] [INS] [002d0bf5] jne	0x2d0c36
[main] [INS] [002d0bf7] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x90018b10 -> 100000001
[main] [INS] [002d0bfe] sub	dword ptr [rdx + 4], 1                                    ; store(0x90018b14,0x1)
[main] [INS] [002d0c02] jne	0x2d0c36
[main] [INS] [002d0c04] mov	qword ptr [rdx + 8], 0                                    ; store(0x90018b18,0x0)
[main] [INS] [002d0c0c] cmp	dword ptr [rip + 0x371ce5], 0                             ; 0x0 vs 0x0
[main] [INS] [002d0c13] je	0x2d0c1c
[main] [INS] [002d0c1c] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [002d0c1e] je	0x2d0c36
[main] [INS] [002d0c36] pop	rbx                                                       ; rbx = 0x90000042 -> 6261294b5c613d00
[main] [INS] [002d0c37] mov	rax, rsi                                                  ; rax = 0x0
[main] [INS] [002d0c3a] pop	rbp                                                       ; rbp = 0xc350 -> e024bc8b4cff
[main] [INS] [002d0c3b] pop	r12                                                       ; r12 = 0xc350 -> e024bc8b4cff
[main] [INS] [002d0c3d] ret	
[main] [INS] [0000f2ee] add	qword ptr [rip + 0x237faa], 1                             ; store(0x2472a0,0x1)
[main] [INS] [0000f2f6] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [0000f2f9] je	0xf438
[main] [INS] [0000f438] add	qword ptr [rip + 0x237e68], 1                             ; store(0x2472a8,0x1)
[main] [INS] [0000f440] cmp	qword ptr [rsp + 0x10], rbx                               ; 0x90000042 vs 0x90000042
[main] [INS] [0000f445] jne	0xf458
[main] [INS] [0000f447] add	qword ptr [rip + 0x237e69], 1                             ; store(0x2472b8,0x1)
[main] [INS] [0000f44f] mov	qword ptr [rsp + 0x10], 0                                 ; store(0x7f000008c8d0,0x0)
[main] [INS] [0000f458] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x0
[main] [INS] [0000f45d] add	rsp, 0x38                                                 ; rsp = 0x7f000008c8f8 -> 2
[main] [INS] [0000f461] pop	rbx                                                       ; rbx = 0x2
[main] [INS] [0000f462] pop	rbp                                                       ; rbp = 0x90000040 -> 294b5c613d006261
[main] [INS] [0000f463] pop	r12                                                       ; r12 = 0x90018a30 -> fbad2498
[main] [INS] [0000f465] pop	r13                                                       ; r13 = 0x2
[main] [INS] [0000f467] pop	r14                                                       ; r14 = 0x4000 -> 24a880
[main] [INS] [0000f469] pop	r15                                                       ; r15 = 0x0
[main] [INS] [0000f46b] ret	
[main] [INS] [000082e3] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [000082e6] jne	0x8270
[main] [INS] [000082e8] test	r13d, r13d                                               ; 0x2 vs 0x2
[main] [INS] [000082eb] jle	0xbc91
[main] [INS] [000082f1] mov	rsi, qword ptr [rip + 0x241120]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [000082f8] mov	edi, 0xa                                                  ; edi = 0xa
[main] [INS] [000082fd] add	qword ptr [rip + 0x240563], 1                             ; store(0x248868,0x1)
[main] [INS] [00008305] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0xa
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0xa
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c62 -> "RE versi"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c62 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c63 -> "E versio"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c63) -> "E versio"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c62,0xa)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0xa
[main] [INS] [002d980c] ret	
[main] [INS] [0000830a] mov	r12, qword ptr [rip + 0x2410c7]                           ; r12 = 0x90000040 -> 294b5c613d006261
[main] [INS] [00008311] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x643e98 -> 3f0cc0
[main] [INS] [00008316] mov	rcx, qword ptr [rip + 0x240573]                           ; rcx = 0x0
[main] [INS] [0000831d] mov	rbp, r12                                                  ; rbp = 0x90000040 -> 294b5c613d006261
[main] [INS] [00008320] mov	rdi, qword ptr [rax]                                      ; rdi = 0x3f0cc0 -> 2000200020002
[main] [INS] [00008323] movzx	eax, byte ptr [r12 + rbx - 1]                           ; eax = 0x62
[main] [INS] [00008329] lea	rdx, [rcx + 1]                                            ; rdx = 0x1
[main] [INS] [0000832d] mov	qword ptr [rip + 0x24055c], rdx                           ; store(0x248890,0x1)
[main] [INS] [00008334] test	byte ptr [rdi + rax*2 + 1], 0x20                         ; 0xd6 vs 0x20
[main] [INS] [00008339] je	0x9176
[main] [INS] [00009176] mov	byte ptr [r12 + rbx], 0                                   ; store(0x90000042,0x0)
[main] [INS] [0000917b] jmp	0x83f9                                                    ; jmp(0x83f9)
[main] [INS] [000083f9] mov	rax, qword ptr [rsp + 0x10]                               ; rax = 0x643e98 -> 3f0cc0
[main] [INS] [000083fe] mov	rcx, qword ptr [rax]                                      ; rcx = 0x3f0cc0 -> 2000200020002
[main] [INS] [00008401] movzx	eax, byte ptr [r12]                                     ; eax = 0x61
[main] [INS] [00008406] test	byte ptr [rcx + rax*2 + 1], 0x20                         ; 0xd6 vs 0x20
[main] [INS] [0000840b] je	0x843d
[main] [INS] [0000843d] add	qword ptr [rip + 0x24046b], 1                             ; store(0x2488b0,0x1)
[main] [INS] [00008445] test	r15, r15                                                 ; 0x0 vs 0x0
[main] [INS] [00008448] jne	0x846a
[main] [INS] [0000844a] jmp	0x8fa0                                                    ; jmp(0x8fa0)
[main] [INS] [00008fa0] add	qword ptr [rip + 0x23f910], 1                             ; store(0x2488b8,0x1)
[main] [INS] [00008fa8] jmp	0x8450                                                    ; jmp(0x8450)
[main] [INS] [00008450] add	r14, r14                                                  ; r14 = 0x8000 -> "D$H-"
[main] [INS] [00008453] mov	rdi, r15                                                  ; rdi = 0x0
[main] [INS] [00008456] mov	rsi, r14                                                  ; rsi = 0x8000 -> "D$H-"
[main] [INS] [00008459] call	0x5820                                                   ; call(0x5820)
[main] [INS] [0000845e] test	rax, rax                                                 ; 0x9003a090 vs 0x9003a090
[main] [INS] [00008461] mov	r15, rax                                                  ; r15 = 0x9003a090 -> 0
[main] [INS] [00008464] je	0xd268
[main] [INS] [0000846a] add	qword ptr [rip + 0x24044e], 1                             ; store(0x2488c0,0x1)
[main] [INS] [00008472] cmp	r14, rbx                                                  ; 0x8000 vs 0x2
[main] [INS] [00008475] jbe	0x8450
[main] [INS] [00008477] mov	eax, dword ptr [rsp + 0x98]                               ; eax = 0x0
[main] [INS] [0000847e] movzx	r9d, byte ptr [rbp]                                     ; r9d = 0x61
[main] [INS] [00008483] lea	rdx, [rbp + 1]                                            ; rdx = 0x90000041 -> 61294b5c613d0062
[main] [INS] [00008487] mov	r12, r15                                                  ; r12 = 0x9003a090 -> 0
[main] [INS] [0000848a] mov	dword ptr [rsp + 0x68], 0                                 ; store(0x7f000008c998,0x0)
[main] [INS] [00008492] mov	dword ptr [rsp + 0xe8], eax                               ; store(0x7f000008ca18,0x0)
[main] [INS] [00008499] mov	eax, dword ptr [rsp + 0x48]                               ; eax = 0x2d
[main] [INS] [0000849d] test	r9d, r9d                                                 ; 0x61 vs 0x61
[main] [INS] [000084a0] mov	dword ptr [rsp + 0x80], eax                               ; store(0x7f000008c9b0,0x2d)
[main] [INS] [000084a7] mov	rax, qword ptr [rsp + 0x40]                               ; rax = 0x90018700 -> 0
[main] [INS] [000084ac] mov	qword ptr [rsp + 0xd8], rax                               ; store(0x7f000008ca08,0x90018700) -> 0
[main] [INS] [000084b4] je	0xa683
[main] [INS] [000084ba] lea	rax, [rsp + 0x1b8]                                        ; rax = 0x7f000008cae8 -> 7f000008db40
[main] [INS] [000084c2] mov	qword ptr [rsp + 0xe0], r15                               ; store(0x7f000008ca10,0x9003a090) -> 0
[main] [INS] [000084ca] mov	dword ptr [rsp + 0xf8], r13d                              ; store(0x7f000008ca28,0x2)
[main] [INS] [000084d2] mov	qword ptr [rsp + 0xf0], r14                               ; store(0x7f000008ca20,0x8000) -> "D$H-"
[main] [INS] [000084da] mov	r13, r15                                                  ; r13 = 0x9003a090 -> 0
[main] [INS] [000084dd] mov	dword ptr [rsp + 0x12c], 1                                ; store(0x7f000008ca5c,0x1)
[main] [INS] [000084e8] mov	dword ptr [rsp + 0x50], 0                                 ; store(0x7f000008c980,0x0)
[main] [INS] [000084f0] mov	dword ptr [rsp + 0x100], 0                                ; store(0x7f000008ca30,0x0)
[main] [INS] [000084fb] mov	r15d, r9d                                                 ; r15d = 0x61
[main] [INS] [000084fe] mov	dword ptr [rsp + 0x108], 0                                ; store(0x7f000008ca38,0x0)
[main] [INS] [00008509] mov	dword ptr [rsp + 0x110], 0                                ; store(0x7f000008ca40,0x0)
[main] [INS] [00008514] mov	r14, rbp                                                  ; r14 = 0x90000040 -> 294b5c613d006261
[main] [INS] [00008517] mov	dword ptr [rsp + 0x128], 0                                ; store(0x7f000008ca58,0x0)
[main] [INS] [00008522] mov	dword ptr [rsp + 0x78], 0                                 ; store(0x7f000008c9a8,0x0)
[main] [INS] [0000852a] mov	qword ptr [rsp + 0x150], rax                              ; store(0x7f000008ca80,0x7f000008cae8) -> 7f000008db40
[main] [INS] [00008532] jmp	0x8562                                                    ; jmp(0x8562)
[main] [INS] [00008562] add	qword ptr [rip + 0x240686], 1                             ; store(0x248bf0,0x1)
[main] [INS] [0000856a] cmp	r15d, 0x5c                                                ; 0x61 vs 0x5c
[main] [INS] [0000856e] jne	0x8538
[main] [INS] [00008538] mov	eax, dword ptr [rip + 0x240e8a]                           ; eax = 0x0
[main] [INS] [0000853e] mov	r14, rdx                                                  ; r14 = 0x90000041 -> 61294b5c613d0062
[main] [INS] [00008541] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00008543] je	0x8f90
[main] [INS] [00008f90] add	qword ptr [rip + 0x23fc30], 1                             ; store(0x248bc8,0x1)
[main] [INS] [00008f98] mov	r14, rdx                                                  ; r14 = 0x90000041 -> 61294b5c613d0062
[main] [INS] [00008f9b] jmp	0x8700                                                    ; jmp(0x8700)
[main] [INS] [00008700] mov	byte ptr [r13], r15b                                      ; store(0x9003a090,0x61)
[main] [INS] [00008704] add	qword ptr [rip + 0x2404d4], 1                             ; store(0x248be0,0x1)
[main] [INS] [0000870c] add	r13, 1                                                    ; r13 = 0x9003a091 -> 0
[main] [INS] [00008710] jmp	0x8549                                                    ; jmp(0x8549)
[main] [INS] [00008549] movzx	r15d, byte ptr [r14]                                    ; r15d = 0x62
[main] [INS] [0000854d] add	qword ptr [rip + 0x240693], 1                             ; store(0x248be8,0x1)
[main] [INS] [00008555] lea	rdx, [r14 + 1]                                            ; rdx = 0x90000042 -> 6261294b5c613d00
[main] [INS] [00008559] test	r15d, r15d                                               ; 0x62 vs 0x62
[main] [INS] [0000855c] je	0x8fad
[main] [INS] [00008562] add	qword ptr [rip + 0x240686], 1                             ; store(0x248bf0,0x1)
[main] [INS] [0000856a] cmp	r15d, 0x5c                                                ; 0x62 vs 0x5c
[main] [INS] [0000856e] jne	0x8538
[main] [INS] [00008538] mov	eax, dword ptr [rip + 0x240e8a]                           ; eax = 0x0
[main] [INS] [0000853e] mov	r14, rdx                                                  ; r14 = 0x90000042 -> 6261294b5c613d00
[main] [INS] [00008541] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00008543] je	0x8f90
[main] [INS] [00008f90] add	qword ptr [rip + 0x23fc30], 1                             ; store(0x248bc8,0x1)
[main] [INS] [00008f98] mov	r14, rdx                                                  ; r14 = 0x90000042 -> 6261294b5c613d00
[main] [INS] [00008f9b] jmp	0x8700                                                    ; jmp(0x8700)
[main] [INS] [00008700] mov	byte ptr [r13], r15b                                      ; store(0x9003a091,0x62)
[main] [INS] [00008704] add	qword ptr [rip + 0x2404d4], 1                             ; store(0x248be0,0x1)
[main] [INS] [0000870c] add	r13, 1                                                    ; r13 = 0x9003a092 -> 0
[main] [INS] [00008710] jmp	0x8549                                                    ; jmp(0x8549)
[main] [INS] [00008549] movzx	r15d, byte ptr [r14]                                    ; r15d = 0x0
[main] [INS] [0000854d] add	qword ptr [rip + 0x240693], 1                             ; store(0x248be8,0x1)
[main] [INS] [00008555] lea	rdx, [r14 + 1]                                            ; rdx = 0x90000043 -> "=a\K)ab"
[main] [INS] [00008559] test	r15d, r15d                                               ; 0x0 vs 0x0
[main] [INS] [0000855c] je	0x8fad
[main] [INS] [00008fad] mov	r12, r13                                                  ; r12 = 0x9003a092 -> 0
[main] [INS] [00008fb0] mov	r15, qword ptr [rsp + 0xe0]                               ; r15 = 0x9003a090 -> 6261
[main] [INS] [00008fb8] mov	r13d, dword ptr [rsp + 0xf8]                              ; r13d = 0x2
[main] [INS] [00008fc0] mov	r14, qword ptr [rsp + 0xf0]                               ; r14 = 0x8000 -> "D$H-"
[main] [INS] [00008fc8] cmp	dword ptr [rip + 0x2403f9], 0                             ; 0x0 vs 0x0
[main] [INS] [00008fcf] jne	0x8fe4
[main] [INS] [00008fd1] add	qword ptr [rip + 0x23fc1f], 1                             ; store(0x248bf8,0x1)
[main] [INS] [00008fd9] mov	r13d, r12d                                                ; r13d = 0x9003a092 -> 0
[main] [INS] [00008fdc] mov	byte ptr [r12], 0                                         ; store(0x9003a092,0x0)
[main] [INS] [00008fe1] sub	r13d, r15d                                                ; r13d = 0x2
[main] [INS] [00008fe4] mov	ebp, dword ptr [rsp + 0x68]                               ; ebp = 0x0
[main] [INS] [00008fe8] mov	ebx, dword ptr [rsp + 0x90]                               ; ebx = 0x0
[main] [INS] [00008fef] movsxd	rdx, r13d                                              ; rdx = 0x2
[main] [INS] [00008ff2] or	ebp, dword ptr [rsp + 0x9c]                                ; ebp = 0x0
[main] [INS] [00008ff9] or	ebx, dword ptr [rsp + 0x20]                                ; ebx = 0x0
[main] [INS] [00008ffd] mov	dword ptr [rsp + 0xf8], ebp                               ; store(0x7f000008ca28,0x0)
[main] [INS] [00009004] je	0x9180
[main] [INS] [00009180] mov	rdi, r14                                                  ; rdi = 0x8000 -> "D$H-"
[main] [INS] [00009183] mov	rsi, r15                                                  ; rsi = 0x9003a090 -> 6261
[main] [INS] [00009186] sub	rdi, rdx                                                  ; rdi = 0x7ffe -> 2d482444c700
[main] [INS] [00009189] add	rdi, r15                                                  ; rdi = 0x9004208e -> 0
[main] [INS] [0000918c] call	0x5860                                                   ; call(0x5860)
[main] [INS] [00005860] jmp	qword ptr [rip + 0x23f70a]                                ; jmp(0x3c1120)
[main] [INS] [003c1120] mov	rax, rdi                                                  ; rax = 0x9004208e -> 0
[main] [INS] [003c1123] cmp	rdi, rsi                                                  ; 0x9004208e vs 0x9003a090
[main] [INS] [003c1126] jb	0x3c1136
[main] [INS] [003c1128] je	0x3c2ba8
[main] [INS] [003c112e] cmp	rdx, 0x4f                                                 ; 0x2 vs 0x4f
[main] [INS] [003c1132] jbe	0x3c1136
[main] [INS] [003c1136] cmp	rdx, 0x4f                                                 ; 0x2 vs 0x4f
[main] [INS] [003c113a] lea	r11, [rip + 0x4df3f]                                      ; r11 = 0x40f080 -> fffb3cf0fffb3b28
[main] [INS] [003c1141] ja	0x3c1160
[main] [INS] [003c1143] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb3ed0
[main] [INS] [003c1147] add	rsi, rdx                                                  ; rsi = 0x9003a092 -> 0
[main] [INS] [003c114a] add	rdi, rdx                                                  ; rdi = 0x90042090 -> 0
[main] [INS] [003c114d] add	r9, r11                                                   ; r9 = 0x3c2f50 -> fe578966fe568b66
[main] [INS] [003c1150] jmp	r9                                                        ; jmp(0x3c2f50)
[main] [INS] [003c2f50] mov	dx, word ptr [rsi - 2]                                    ; dx = 0x6261 -> 5834800030b8ae8
[main] [INS] [003c2f54] mov	word ptr [rdi - 2], dx                                    ; store(0x9004208e,0x6261) -> 5834800030b8ae8
[main] [INS] [003c2f58] ret	
[main] [INS] [00009191] add	qword ptr [rip + 0x23fa6f], 1                             ; store(0x248c08,0x1)
[main] [INS] [00009199] cmp	dword ptr [rsp + 0xf8], 0                                 ; 0x0 vs 0x0
[main] [INS] [000091a1] mov	qword ptr [rsp + 0x68], rax                               ; store(0x7f000008c998,0x9004208e) -> 6261
[main] [INS] [000091a6] je	0x91be
[main] [INS] [000091be] add	qword ptr [rip + 0x23fa62], 1                             ; store(0x248c28,0x1)
[main] [INS] [000091c6] cmp	qword ptr [rsp + 0x18], 0                                 ; 0x0 vs 0x0
[main] [INS] [000091cc] jne	0x9200
[main] [INS] [000091ce] cmp	dword ptr [rsp + 0x4c], 0                                 ; 0x0 vs 0x0
[main] [INS] [000091d3] je	0x9200
[main] [INS] [00009200] mov	eax, dword ptr [rsp + 0x80]                               ; eax = 0x2d
[main] [INS] [00009207] mov	ecx, 3                                                    ; ecx = 0x3
[main] [INS] [0000920c] mov	ebx, dword ptr [rsp + 0x80]                               ; ebx = 0x2d
[main] [INS] [00009213] add	qword ptr [rip + 0x23fac5], 1                             ; store(0x248ce0,0x1)
[main] [INS] [0000921b] mov	qword ptr [rsp + 0xe0], r15                               ; store(0x7f000008ca10,0x9003a090) -> 6261
[main] [INS] [00009223] cdq	
[main] [INS] [00009224] mov	rbp, qword ptr [rsp + 0x68]                               ; rbp = 0x9004208e -> 6261
[main] [INS] [00009229] mov	dword ptr [rsp + 0x140], 0                                ; store(0x7f000008ca70,0x0)
[main] [INS] [00009234] idiv	ecx                                                      ; ecx = 0x3
[main] [INS] [00009236] cmp	ebx, 2                                                    ; 0x2d vs 0x2
[main] [INS] [00009239] mov	ecx, 2                                                    ; ecx = 0x2
[main] [INS] [0000923e] mov	dword ptr [rsp + 0x68], r13d                              ; store(0x7f000008c998,0x2)
[main] [INS] [00009243] mov	qword ptr [rsp + 0xf0], r14                               ; store(0x7f000008ca20,0x8000) -> "D$H-"
[main] [INS] [0000924b] mov	dword ptr [rsp + 0x12c], eax                              ; store(0x7f000008ca5c,0xf)
[main] [INS] [00009252] mov	eax, 1                                                    ; eax = 0x1
[main] [INS] [00009257] mov	esi, eax                                                  ; esi = 0x1
[main] [INS] [00009259] mov	eax, ebx                                                  ; eax = 0x2d
[main] [INS] [0000925b] cmovne	esi, dword ptr [rsp + 0x12c]                           ; esi = 0xf
[main] [INS] [00009263] cdq	
[main] [INS] [00009264] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [00009267] idiv	ecx                                                      ; ecx = 0x2
[main] [INS] [00009269] mov	r15d, r12d                                                ; r15d = 0x0
[main] [INS] [0000926c] mov	r12, qword ptr [rsp + 0x40]                               ; r12 = 0x90018700 -> 0
[main] [INS] [00009271] mov	dword ptr [rsp + 0x158], esi                              ; store(0x7f000008ca88,0xf)
[main] [INS] [00009278] mov	dword ptr [rsp + 0x138], eax                              ; store(0x7f000008ca68,0x16)
[main] [INS] [0000927f] cmp	dword ptr [rsp + 0x5c], 0                                 ; 0x0 vs 0x0
[main] [INS] [00009284] mov	qword ptr [rsp + 0x1c8], 0                                ; store(0x7f000008caf8,0x0)
[main] [INS] [00009290] mov	dword ptr [rip + 0x24015e], 0                             ; store(0x2493f8,0x0)
[main] [INS] [0000929a] jg	0x9d5d
[main] [INS] [000092a0] mov	ebx, dword ptr [rsp + 0x78]                               ; ebx = 0x0
[main] [INS] [000092a4] or	ebx, r15d                                                  ; ebx = 0x0
[main] [INS] [000092a7] cmp	dword ptr [rsp + 0xe8], 0                                 ; 0x0 vs 0x0
[main] [INS] [000092af] je	0x9ce1
[main] [INS] [00009ce1] cmp	dword ptr [rsp + 0x128], 0                                ; 0x0 vs 0x0
[main] [INS] [00009ce9] je	0x9e79
[main] [INS] [00009e79] cmp	dword ptr [rsp + 0xf8], 0                                 ; 0x0 vs 0x0
[main] [INS] [00009e81] je	0xa968
[main] [INS] [0000a968] mov	eax, dword ptr [rsp + 0x80]                               ; eax = 0x2d
[main] [INS] [0000a96f] mov	r9d, ebx                                                  ; r9d = 0x0
[main] [INS] [0000a972] mov	rdx, rbp                                                  ; rdx = 0x9004208e -> 6261
[main] [INS] [0000a975] add	qword ptr [rip + 0x23e3fb], 1                             ; store(0x248d78,0x1)
[main] [INS] [0000a97d] push	rax                                                      ; push(0x2d)
[main] [INS] [0000a97e] push	r12                                                      ; push(0x90018700) -> 0
[main] [INS] [0000a980] mov	r8d, dword ptr [rsp + 0x60]                               ; r8d = 0x0
[main] [INS] [0000a985] mov	ecx, dword ptr [rsp + 0x78]                               ; ecx = 0x2
[main] [INS] [0000a989] mov	rsi, qword ptr [rsp + 0x18]                               ; rsi = 0x0
[main] [INS] [0000a98e] mov	rdi, qword ptr [rsp + 0x98]                               ; rdi = 0x9003a000 -> "ERCP~"
[main] [INS] [0000a996] call	0x31d50                                                  ; call(0x31d50)
[main] [INS] [00031d50] push	r15                                                      ; push(0x0)
[main] [INS] [00031d52] push	r14                                                      ; push(0x8000) -> "D$H-"
[main] [INS] [00031d54] mov	r10, rsi                                                  ; r10 = 0x0
[main] [INS] [00031d57] push	r13                                                      ; push(0x2)
[main] [INS] [00031d59] push	r12                                                      ; push(0x90018700) -> 0
[main] [INS] [00031d5b] mov	r11, rdx                                                  ; r11 = 0x9004208e -> 6261
[main] [INS] [00031d5e] push	rbp                                                      ; push(0x9004208e) -> 6261
[main] [INS] [00031d5f] push	rbx                                                      ; push(0x0)
[main] [INS] [00031d60] mov	r12, rdi                                                  ; r12 = 0x9003a000 -> "ERCP~"
[main] [INS] [00031d63] mov	r14d, ecx                                                 ; r14d = 0x2
[main] [INS] [00031d66] mov	r13d, r9d                                                 ; r13d = 0x0
[main] [INS] [00031d69] sub	rsp, 0x1d8                                                ; rsp = 0x7f000008c710 -> 1000
[main] [INS] [00031d70] add	qword ptr [rip + 0x21db68], 1                             ; store(0x24f8e0,0x1)
[main] [INS] [00031d78] mov	rax, qword ptr [rsp + 0x210]                              ; rax = 0x90018700 -> 0
[main] [INS] [00031d80] mov	qword ptr [rsp], rax                                      ; store(0x7f000008c710,0x90018700) -> 0
[main] [INS] [00031d84] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00031d8d] mov	qword ptr [rsp + 0x1c8], rax                              ; store(0x7f000008c8d8,0x59424d4f444e4100)
[main] [INS] [00031d95] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00031d97] test	rdi, rdi                                                 ; 0x9003a000 vs 0x9003a000
[main] [INS] [00031d9a] sete	al                                                       ; al = 0x0
[main] [INS] [00031d9d] test	rsi, rsi                                                 ; 0x0 vs 0x0
[main] [INS] [00031da0] jne	0x31e18
[main] [INS] [00031da2] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [00031da4] je	0x31e18
[main] [INS] [00031e18] mov	r15d, r13d                                                ; r15d = 0x0
[main] [INS] [00031e1b] and	r15d, 0xe20f5a6f                                          ; r15d = 0x0
[main] [INS] [00031e22] jne	0x33764
[main] [INS] [00031e28] add	qword ptr [rip + 0x21dad8], 1                             ; store(0x24f908,0x1)
[main] [INS] [00031e30] test	r11, r11                                                 ; 0x9004208e vs 0x9004208e
[main] [INS] [00031e33] je	0x332f8
[main] [INS] [00031e39] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [00031e3b] jne	0x332f8
[main] [INS] [00031e41] add	qword ptr [rip + 0x21dac7], 1                             ; store(0x24f910,0x1)
[main] [INS] [00031e49] cmp	qword ptr [rsp], 0                                        ; 0x90018700 vs 0x0
[main] [INS] [00031e4e] jne	0x31e5f
[main] [INS] [00031e5f] mov	ebx, dword ptr [rsp + 0x218]                              ; ebx = 0x2d
[main] [INS] [00031e66] add	qword ptr [rip + 0x21daaa], 1                             ; store(0x24f918,0x1)
[main] [INS] [00031e6e] test	ebx, ebx                                                 ; 0x2d vs 0x2d
[main] [INS] [00031e70] js	0x33593
[main] [INS] [00031e76] add	qword ptr [rip + 0x21daa2], 1                             ; store(0x24f920,0x1)
[main] [INS] [00031e7e] test	r14d, r14d                                               ; 0x2 vs 0x2
[main] [INS] [00031e81] js	0x3359e
[main] [INS] [00031e87] mov	eax, r8d                                                  ; eax = 0x0
[main] [INS] [00031e8a] add	qword ptr [rip + 0x21da96], 1                             ; store(0x24f928,0x1)
[main] [INS] [00031e92] shr	eax, 0x1f                                                 ; eax = 0x0
[main] [INS] [00031e95] cmp	r8d, r14d                                                 ; 0x0 vs 0x2
[main] [INS] [00031e98] setg	dl                                                       ; dl = 0x0
[main] [INS] [00031e9b] or	dl, al                                                     ; dl = 0x0
[main] [INS] [00031e9d] mov	byte ptr [rsp + 8], dl                                    ; store(0x7f000008c718,0x0)
[main] [INS] [00031ea1] jne	0x33500
[main] [INS] [00031ea7] mov	eax, dword ptr [r12]                                      ; eax = 0x50435245
[main] [INS] [00031eab] cmp	eax, 0x50435245                                           ; 0x50435245 vs 0x50435245
[main] [INS] [00031eb0] je	0x31ee0
[main] [INS] [00031ee0] mov	ecx, dword ptr [r12 + 0xc]                                ; ecx = 0x51
[main] [INS] [00031ee5] add	qword ptr [rip + 0x21da4b], 1                             ; store(0x24f938,0x1)
[main] [INS] [00031eed] test	cl, 1                                                    ; 0x51 vs 0x1
[main] [INS] [00031ef0] mov	dword ptr [rsp + 0x2c], ecx                               ; store(0x7f000008c73c,0x51)
[main] [INS] [00031ef4] je	0x336b1
[main] [INS] [00031efa] mov	ebx, dword ptr [r12 + 8]                                  ; ebx = 0x4000 -> 24a880
[main] [INS] [00031eff] add	qword ptr [rip + 0x21da41], 1                             ; store(0x24f948,0x1)
[main] [INS] [00031f07] mov	edi, 2                                                    ; edi = 0x2
[main] [INS] [00031f0c] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00031f0e] shr	eax, 0xb                                                  ; eax = 0x8
[main] [INS] [00031f11] and	eax, 1                                                    ; eax = 0x0
[main] [INS] [00031f14] test	r13d, 0x8000000                                          ; 0x0 vs 0x8000000
[main] [INS] [00031f1b] mov	dword ptr [rsp + 0x18], eax                               ; store(0x7f000008c728,0x0)
[main] [INS] [00031f1f] mov	dword ptr [rsp + 0x120], eax                              ; store(0x7f000008c830,0x0)
[main] [INS] [00031f26] je	0x321d0
[main] [INS] [000321d0] mov	edi, r13d                                                 ; edi = 0x0
[main] [INS] [000321d3] add	qword ptr [rip + 0x21d775], 1                             ; store(0x24f950,0x1)
[main] [INS] [000321db] sar	edi, 0xf                                                  ; edi = 0x0
[main] [INS] [000321de] and	edi, 1                                                    ; edi = 0x0
[main] [INS] [000321e1] jmp	0x31f2c                                                   ; jmp(0x31f2c)
[main] [INS] [00031f2c] movzx	r9d, word ptr [r12 + 0x22]                              ; r9d = 0x40
[main] [INS] [00031f32] movzx	ebp, word ptr [r12 + 0x24]                              ; ebp = 0x0
[main] [INS] [00031f38] test	r10, r10                                                 ; 0x0 vs 0x0
[main] [INS] [00031f3b] mov	dword ptr [rsp + 0x178], edi                              ; store(0x7f000008c888,0x0)
[main] [INS] [00031f42] mov	qword ptr [rsp + 0xb8], 0x989680                          ; store(0x7f000008c7c8,0x989680)
[main] [INS] [00031f4e] mov	qword ptr [rsp + 0xc0], 0x989680                          ; store(0x7f000008c7d0,0x989680)
[main] [INS] [00031f5a] mov	qword ptr [rsp + 0x1a8], 0                                ; store(0x7f000008c8b8,0x0)
[main] [INS] [00031f66] mov	rdx, qword ptr [r12 + 0x30]                               ; rdx = 0x0
[main] [INS] [00031f6b] mov	qword ptr [rsp + 0x20], 0                                 ; store(0x7f000008c730,0x0)
[main] [INS] [00031f74] lea	rax, [r12 + r9]                                           ; rax = 0x9003a040 -> ff763a0083
[main] [INS] [00031f78] mov	dword ptr [rsp + 0xe4], ebp                               ; store(0x7f000008c7f4,0x0)
[main] [INS] [00031f7f] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008c800,0x9003a040) -> ff763a0083
[main] [INS] [00031f87] movzx	eax, word ptr [r12 + 0x26]                              ; eax = 0x0
[main] [INS] [00031f8d] mov	dword ptr [rsp + 0x10], eax                               ; store(0x7f000008c720,0x0)
[main] [INS] [00031f91] mov	dword ptr [rsp + 0xe0], eax                               ; store(0x7f000008c7f0,0x0)
[main] [INS] [00031f98] je	0x3201f
[main] [INS] [0003201f] test	ch, 0x20                                                 ; 0x0 vs 0x20
[main] [INS] [00032022] je	0x3204b
[main] [INS] [0003204b] test	ch, 0x40                                                 ; 0x0 vs 0x40
[main] [INS] [0003204e] jne	0x321a0
[main] [INS] [00032054] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [00032057] je	0x32298
[main] [INS] [00032298] add	qword ptr [rip + 0x21d708], 1                             ; store(0x24f9a8,0x1)
[main] [INS] [000322a0] lea	rdx, [rip + 0xe499]                                       ; rdx = 0x40740 -> 706050403020100
[main] [INS] [000322a7] jmp	0x3205d                                                   ; jmp(0x3205d)
[main] [INS] [0003205d] mov	eax, dword ptr [rsp + 0x10]                               ; eax = 0x0
[main] [INS] [00032061] mov	qword ptr [rsp + 0x100], rdx                              ; store(0x7f000008c810,0x40740) -> 706050403020100
[main] [INS] [00032069] mov	qword ptr [rsp + 0x150], r11                              ; store(0x7f000008c860,0x9004208e) -> 6261
[main] [INS] [00032071] mov	dword ptr [rsp + 0x184], r8d                              ; store(0x7f000008c894,0x0)
[main] [INS] [00032079] mov	dword ptr [rsp + 0xec], 0                                 ; store(0x7f000008c7fc,0x0)
[main] [INS] [00032084] mov	dword ptr [rsp + 0x138], 0                                ; store(0x7f000008c848,0x0)
[main] [INS] [0003208f] imul	eax, ebp                                                 ; eax = 0x0
[main] [INS] [00032092] mov	qword ptr [rsp + 0x1b8], 0                                ; store(0x7f000008c8c8,0x0)
[main] [INS] [0003209e] mov	qword ptr [rsp + 0x1b0], 0                                ; store(0x7f000008c8c0,0x0)
[main] [INS] [000320aa] mov	qword ptr [rsp + 0x1a0], 0                                ; store(0x7f000008c8b0,0x0)
[main] [INS] [000320b6] cdqe	
[main] [INS] [000320b8] add	rax, r9                                                   ; rax = 0x40
[main] [INS] [000320bb] add	rax, r12                                                  ; rax = 0x9003a040 -> ff763a0083
[main] [INS] [000320be] mov	qword ptr [rsp + 0x148], rax                              ; store(0x7f000008c858,0x9003a040) -> ff763a0083
[main] [INS] [000320c6] movsxd	rax, r14d                                              ; rax = 0x2
[main] [INS] [000320c9] add	rax, r11                                                  ; rax = 0x90042090 -> 0
[main] [INS] [000320cc] mov	qword ptr [rsp + 0x38], rax                               ; store(0x7f000008c748,0x90042090) -> 0
[main] [INS] [000320d1] mov	qword ptr [rsp + 0x158], rax                              ; store(0x7f000008c868,0x90042090) -> 0
[main] [INS] [000320d9] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [000320db] shr	eax, 5                                                    ; eax = 0x200
[main] [INS] [000320de] and	eax, 1                                                    ; eax = 0x0
[main] [INS] [000320e1] mov	dword ptr [rsp + 0x12c], eax                              ; store(0x7f000008c83c,0x0)
[main] [INS] [000320e8] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [000320ea] shr	eax, 0x1d                                                 ; eax = 0x0
[main] [INS] [000320ed] and	eax, 1                                                    ; eax = 0x0
[main] [INS] [000320f0] mov	dword ptr [rsp + 0x128], eax                              ; store(0x7f000008c838,0x0)
[main] [INS] [000320f7] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [000320f9] shr	eax, 0x19                                                 ; eax = 0x0
[main] [INS] [000320fc] and	eax, 1                                                    ; eax = 0x0
[main] [INS] [000320ff] mov	dword ptr [rsp + 0x124], eax                              ; store(0x7f000008c834,0x0)
[main] [INS] [00032106] mov	eax, r13d                                                 ; eax = 0x0
[main] [INS] [00032109] shr	eax, 7                                                    ; eax = 0x0
[main] [INS] [0003210c] and	eax, 1                                                    ; eax = 0x0
[main] [INS] [0003210f] mov	dword ptr [rsp + 0x118], eax                              ; store(0x7f000008c828,0x0)
[main] [INS] [00032116] mov	eax, r13d                                                 ; eax = 0x0
[main] [INS] [00032119] shr	eax, 8                                                    ; eax = 0x0
[main] [INS] [0003211c] and	eax, 1                                                    ; eax = 0x0
[main] [INS] [0003211f] mov	dword ptr [rsp + 0x11c], eax                              ; store(0x7f000008c82c,0x0)
[main] [INS] [00032126] mov	eax, r13d                                                 ; eax = 0x0
[main] [INS] [00032129] shr	eax, 0xa                                                  ; eax = 0x0
[main] [INS] [0003212c] and	eax, 1                                                    ; eax = 0x0
[main] [INS] [0003212f] mov	dword ptr [rsp + 0x130], eax                              ; store(0x7f000008c840,0x0)
[main] [INS] [00032136] mov	eax, r13d                                                 ; eax = 0x0
[main] [INS] [00032139] shr	eax, 0x1c                                                 ; eax = 0x0
[main] [INS] [0003213c] and	eax, 1                                                    ; eax = 0x0
[main] [INS] [0003213f] mov	dword ptr [rsp + 0x134], eax                              ; store(0x7f000008c844,0x0)
[main] [INS] [00032146] mov	eax, ecx                                                  ; eax = 0x51
[main] [INS] [00032148] shr	eax, 0xc                                                  ; eax = 0x0
[main] [INS] [0003214b] and	eax, 1                                                    ; eax = 0x0
[main] [INS] [0003214e] mov	dword ptr [rsp + 0x140], eax                              ; store(0x7f000008c850,0x0)
[main] [INS] [00032155] lea	rax, [rdx + 0x100]                                        ; rax = 0x40840 -> 706050403020100
[main] [INS] [0003215c] add	rdx, 0x340                                                ; rdx = 0x40a80 -> 80
[main] [INS] [00032163] mov	qword ptr [rsp + 0x110], rdx                              ; store(0x7f000008c820,0x40a80) -> 80
[main] [INS] [0003216b] mov	qword ptr [rsp + 0x108], rax                              ; store(0x7f000008c818,0x40840) -> 706050403020100
[main] [INS] [00032173] mov	eax, r13d                                                 ; eax = 0x0
[main] [INS] [00032176] and	eax, 0x1800000                                            ; eax = 0x0
[main] [INS] [0003217b] cmp	eax, 0x800000                                             ; 0x0 vs 0x800000
[main] [INS] [00032180] je	0x322b0
[main] [INS] [00032186] cmp	eax, 0x1000000                                            ; 0x0 vs 0x1000000
[main] [INS] [0003218b] je	0x321f0
[main] [INS] [0003218d] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0003218f] je	0x322d0
[main] [INS] [000322d0] test	ebx, 0x1800000                                           ; 0x4000 vs 0x1800000
[main] [INS] [000322d6] je	0x331c8
[main] [INS] [000331c8] mov	dword ptr [rsp + 0x13c], 0                                ; store(0x7f000008c84c,0x0)
[main] [INS] [000331d3] add	qword ptr [rip + 0x21c7d5], 1                             ; store(0x24f9b0,0x1)
[main] [INS] [000331db] jmp	0x32203                                                   ; jmp(0x32203)
[main] [INS] [00032203] mov	eax, r13d                                                 ; eax = 0x0
[main] [INS] [00032206] and	eax, 0x700000                                             ; eax = 0x0
[main] [INS] [0003220b] jne	0x32288
[main] [INS] [0003220d] add	qword ptr [rip + 0x21d7b3], 1                             ; store(0x24f9c8,0x1)
[main] [INS] [00032215] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00032217] and	eax, 0x700000                                             ; eax = 0x0
[main] [INS] [0003221c] cmp	eax, 0x200000                                             ; 0x0 vs 0x200000
[main] [INS] [00032221] je	0x33510
[main] [INS] [00032227] jbe	0x322f0
[main] [INS] [000322f0] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [000322f2] je	0x33510
[main] [INS] [00033510] mov	dword ptr [rsp + 0xd8], 0                                 ; store(0x7f000008c7e8,0x0)
[main] [INS] [0003351b] mov	eax, 0xa                                                  ; eax = 0xa
[main] [INS] [00033520] jmp	0x3231b                                                   ; jmp(0x3231b)
[main] [INS] [0003231b] mov	dword ptr [rsp + 0xdc], 1                                 ; store(0x7f000008c7ec,0x1)
[main] [INS] [00032326] mov	byte ptr [rsp + 0xf8], al                                 ; store(0x7f000008c808,0xa)
[main] [INS] [0003232d] add	qword ptr [rip + 0x21d6d3], 1                             ; store(0x24fa08,0x1)
[main] [INS] [00032335] jmp	0x3235b                                                   ; jmp(0x3235b)
[main] [INS] [0003235b] test	edi, edi                                                 ; 0x0 vs 0x0
[main] [INS] [0003235d] je	0x32370
[main] [INS] [00032370] mov	esi, 0x55555556                                           ; esi = 0x55555556
[main] [INS] [00032375] mov	eax, esi                                                  ; eax = 0x55555556
[main] [INS] [00032377] imul	dword ptr [rsp + 0x218]                                  ; mem is (0x2d)
[main] [INS] [0003237e] mov	eax, dword ptr [rsp + 0x218]                              ; eax = 0x2d
[main] [INS] [00032385] sar	eax, 0x1f                                                 ; eax = 0x0
[main] [INS] [00032388] sub	edx, eax                                                  ; edx = 0xf
[main] [INS] [0003238a] lea	ebp, [rdx + rdx*2]                                        ; ebp = 0x2d
[main] [INS] [0003238d] lea	edi, [rbp + rbp]                                          ; edi = 0x5a
[main] [INS] [00032391] mov	eax, edi                                                  ; eax = 0x5a
[main] [INS] [00032393] sar	edi, 0x1f                                                 ; edi = 0x0
[main] [INS] [00032396] imul	esi                                                      ; esi = 0x55555556
[main] [INS] [00032398] sub	edx, edi                                                  ; edx = 0x1e
[main] [INS] [0003239a] movzx	edi, word ptr [r12 + 0x20]                              ; edi = 0x0
[main] [INS] [000323a0] mov	dword ptr [rsp + 0x40], edx                               ; store(0x7f000008c750,0x1e)
[main] [INS] [000323a4] test	di, di                                                   ; 0x0 vs 0x0
[main] [INS] [000323a7] je	0x32600
[main] [INS] [00032600] mov	rax, qword ptr [rsp]                                      ; rax = 0x90018700 -> 0
[main] [INS] [00032604] mov	edi, dword ptr [rsp + 0x40]                               ; edi = 0x1e
[main] [INS] [00032608] add	qword ptr [rip + 0x21d420], 1                             ; store(0x24fa30,0x1)
[main] [INS] [00032610] mov	dword ptr [rsp + 0xd0], ebp                               ; store(0x7f000008c7e0,0x2d)
[main] [INS] [00032617] mov	dword ptr [rsp + 0x180], 0                                ; store(0x7f000008c890,0x0)
[main] [INS] [00032622] test	rax, rax                                                 ; 0x90018700 vs 0x90018700
[main] [INS] [00032625] mov	qword ptr [rsp + 0xc8], rax                               ; store(0x7f000008c7d8,0x90018700) -> 0
[main] [INS] [0003262d] mov	dword ptr [rsp + 0xd4], edi                               ; store(0x7f000008c7e4,0x1e)
[main] [INS] [00032634] jne	0x33308
[main] [INS] [00033308] mov	rcx, qword ptr [rsp]                                      ; rcx = 0x90018700 -> 0
[main] [INS] [0003330c] mov	dword ptr [rsp + 0x60], 0                                 ; store(0x7f000008c770,0x0)
[main] [INS] [00033314] jmp	0x32449                                                   ; jmp(0x32449)
[main] [INS] [00032449] movzx	eax, word ptr [r12 + 0x1e]                              ; eax = 0x0
[main] [INS] [0003244f] movsxd	rbp, ebp                                               ; rbp = 0x2d
[main] [INS] [00032452] lea	rdx, [rcx + rbp*4]                                        ; rdx = 0x900187b4 -> 0
[main] [INS] [00032456] mov	rsi, rdx                                                  ; rsi = 0x900187b4 -> 0
[main] [INS] [00032459] shl	rax, 2                                                    ; rax = 0x0
[main] [INS] [0003245d] sub	rsi, rax                                                  ; rsi = 0x900187b4 -> 0
[main] [INS] [00032460] lea	rax, [rcx + 8]                                            ; rax = 0x90018708 -> 0
[main] [INS] [00032464] cmp	rax, rsi                                                  ; 0x90018708 vs 0x900187b4
[main] [INS] [00032467] jbe	0x32474
[main] [INS] [00032474] lea	rax, [rdx - 4]                                            ; rax = 0x900187b0 -> 0
[main] [INS] [00032478] cmp	rsi, rax                                                  ; 0x900187b4 vs 0x900187b0
[main] [INS] [0003247b] ja	0x324c0
[main] [INS] [000324c0] mov	esi, dword ptr [rsp + 0x218]                              ; esi = 0x2d
[main] [INS] [000324c7] add	qword ptr [rip + 0x21d579], 1                             ; store(0x24fa48,0x1)
[main] [INS] [000324cf] test	esi, esi                                                 ; 0x2d vs 0x2d
[main] [INS] [000324d1] je	0x324fa
[main] [INS] [000324d3] add	qword ptr [rip + 0x21d575], 1                             ; store(0x24fa50,0x1)
[main] [INS] [000324db] cmp	dword ptr [rsp + 0x218], 1                                ; 0x2d vs 0x1
[main] [INS] [000324e3] mov	dword ptr [rcx], 0xffffffff                               ; store(0x90018700,0xffffffff)
[main] [INS] [000324e9] je	0x324fa
[main] [INS] [000324eb] add	qword ptr [rip + 0x21d565], 1                             ; store(0x24fa58,0x1)
[main] [INS] [000324f3] mov	dword ptr [rcx + 4], 0xffffffff                           ; store(0x90018704,0xffffffff)
[main] [INS] [000324fa] mov	ecx, dword ptr [r12 + 0xc]                                ; ecx = 0x51
[main] [INS] [000324ff] mov	edi, dword ptr [rsp + 0x2c]                               ; edi = 0x51
[main] [INS] [00032503] mov	eax, ebx                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00032505] or	eax, r13d                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00032508] and	edi, 0x100                                                ; edi = 0x0
[main] [INS] [0003250e] and	eax, 0x10                                                 ; eax = 0x0
[main] [INS] [00032511] mov	dword ptr [rsp + 0x64], edi                               ; store(0x7f000008c774,0x0)
[main] [INS] [00032515] jne	0x32580
[main] [INS] [00032517] test	cl, 0x10                                                 ; 0x51 vs 0x10
[main] [INS] [0003251a] jne	0x33150
[main] [INS] [00033150] movzx	edx, word ptr [r12 + 0x18]                              ; edx = 0x61
[main] [INS] [00033156] add	qword ptr [rip + 0x21c902], 1                             ; store(0x24fa60,0x1)
[main] [INS] [0003315e] test	cl, 0x20                                                 ; 0x51 vs 0x20
[main] [INS] [00033161] mov	byte ptr [rsp + 0x94], dl                                 ; store(0x7f000008c7a4,0x61)
[main] [INS] [00033168] je	0x334c0
[main] [INS] [000334c0] mov	byte ptr [rsp + 0x95], dl                                 ; store(0x7f000008c7a5,0x61)
[main] [INS] [000334c7] mov	qword ptr [rsp + 0x80], 0                                 ; store(0x7f000008c790,0x0)
[main] [INS] [000334d3] mov	dword ptr [rsp + 0x2c], 1                                 ; store(0x7f000008c73c,0x1)
[main] [INS] [000334db] jmp	0x325a4                                                   ; jmp(0x325a4)
[main] [INS] [000325a4] test	cl, 0x40                                                 ; 0x51 vs 0x40
[main] [INS] [000325a7] je	0x32650
[main] [INS] [000325ad] movzx	edx, word ptr [r12 + 0x1a]                              ; edx = 0x62
[main] [INS] [000325b3] add	qword ptr [rip + 0x21d4cd], 1                             ; store(0x24fa88,0x1)
[main] [INS] [000325bb] and	ecx, 0x80                                                 ; ecx = 0x0
[main] [INS] [000325c1] mov	byte ptr [rsp + 0x96], dl                                 ; store(0x7f000008c7a6,0x62)
[main] [INS] [000325c8] je	0x33130
[main] [INS] [00033130] mov	byte ptr [rsp + 0x97], dl                                 ; store(0x7f000008c7a7,0x62)
[main] [INS] [00033137] mov	dword ptr [rsp + 0x90], 1                                 ; store(0x7f000008c7a0,0x1)
[main] [INS] [00033142] jmp	0x3266b                                                   ; jmp(0x3266b)
[main] [INS] [0003266b] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0003266d] mov	eax, dword ptr [rsp + 0x2c]                               ; eax = 0x1
[main] [INS] [00032671] movsxd	rdi, r8d                                               ; rdi = 0x0
[main] [INS] [00032674] setne	byte ptr [rsp + 0x44]                                   ; mem is (0x0)
[main] [INS] [00032679] lea	rbp, [r11 + rdi]                                          ; rbp = 0x9004208e -> 6261
[main] [INS] [0003267d] and	ebx, 0x40000                                              ; ebx = 0x0
[main] [INS] [00032683] mov	dword ptr [rsp + 0x10], ebx                               ; store(0x7f000008c720,0x0)
[main] [INS] [00032687] mov	dword ptr [rsp + 0x5c], r14d                              ; store(0x7f000008c76c,0x2)
[main] [INS] [0003268c] and	eax, 1                                                    ; eax = 0x1
[main] [INS] [0003268f] lea	rcx, [rbp - 1]                                            ; rcx = 0x9004208d -> 626100
[main] [INS] [00032693] mov	qword ptr [rsp + 0x48], rbp                               ; store(0x7f000008c758,0x9004208e) -> 6261
[main] [INS] [00032698] mov	qword ptr [rsp + 0x88], rax                               ; store(0x7f000008c798,0x1)
[main] [INS] [000326a0] lea	rax, [rsp + 0xb0]                                         ; rax = 0x7f000008c7c0 -> 90018a30
[main] [INS] [000326a8] mov	dword ptr [rsp + 0x58], r15d                              ; store(0x7f000008c768,0x0)
[main] [INS] [000326ad] mov	r15, rbp                                                  ; r15 = 0x9004208e -> 6261
[main] [INS] [000326b0] mov	rbp, qword ptr [rsp + 0x38]                               ; rbp = 0x90042090 -> 0
[main] [INS] [000326b5] add	qword ptr [rip + 0x21d3db], 1                             ; store(0x24fa98,0x1)
[main] [INS] [000326bd] mov	r14, rax                                                  ; r14 = 0x7f000008c7c0 -> 90018a30
[main] [INS] [000326c0] mov	eax, dword ptr [rsp + 0x10]                               ; eax = 0x0
[main] [INS] [000326c4] mov	qword ptr [rsp + 0x78], rdi                               ; store(0x7f000008c788,0x0)
[main] [INS] [000326c9] mov	qword ptr [rsp + 0x70], rcx                               ; store(0x7f000008c780,0x9004208d) -> 626100
[main] [INS] [000326ce] mov	qword ptr [rsp + 0x68], 0                                 ; store(0x7f000008c778,0x0)
[main] [INS] [000326d7] mov	qword ptr [rsp + 0x30], 0                                 ; store(0x7f000008c740,0x0)
[main] [INS] [000326e0] mov	rbx, rbp                                                  ; rbx = 0x90042090 -> 0
[main] [INS] [000326e3] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [000326e5] mov	qword ptr [rsp + 0x38], r10                               ; store(0x7f000008c748,0x0)
[main] [INS] [000326ea] mov	qword ptr [rsp + 0x50], r11                               ; store(0x7f000008c760,0x9004208e) -> 6261
[main] [INS] [000326ef] jne	0x32aeb
[main] [INS] [000326f5] nop	dword ptr [rax]
[main] [INS] [000326f8] mov	eax, dword ptr [r12 + 8]                                  ; eax = 0x4000 -> 24a880
[main] [INS] [000326fd] or	eax, r13d                                                  ; eax = 0x4000 -> 24a880
[main] [INS] [00032700] test	eax, 0x4000000                                           ; 0x4000 vs 0x4000000
[main] [INS] [00032705] jne	0x329a0
[main] [INS] [0003270b] mov	eax, dword ptr [rsp + 0x2c]                               ; eax = 0x1
[main] [INS] [0003270f] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [00032711] je	0x32c90
[main] [INS] [00032717] movzx	ecx, byte ptr [rsp + 0x95]                              ; ecx = 0x61
[main] [INS] [0003271f] add	qword ptr [rip + 0x21d3d1], 1                             ; store(0x24faf8,0x1)
[main] [INS] [00032727] cmp	byte ptr [rsp + 0x94], cl                                 ; 0x61 vs 0x61
[main] [INS] [0003272e] je	0x333e0
[main] [INS] [000333e0] cmp	r15, rbx                                                  ; 0x9004208e vs 0x90042090
[main] [INS] [000333e3] jae	0x33462
[main] [INS] [000333e5] mov	rcx, qword ptr [rip + 0x21c72c]                           ; rcx = 0x0
[main] [INS] [000333ec] movzx	edi, byte ptr [rsp + 0x94]                              ; edi = 0x61
[main] [INS] [000333f4] cmp	dil, byte ptr [r15]                                       ; 0x61 vs 0x61
[main] [INS] [000333f7] lea	rax, [rcx + 1]                                            ; rax = 0x1
[main] [INS] [000333fb] mov	qword ptr [rip + 0x21c716], rax                           ; store(0x24fb18,0x1)
[main] [INS] [00033402] je	0x327f8
[main] [INS] [000327f8] mov	r11d, dword ptr [rsp + 0x178]                             ; r11d = 0x0
[main] [INS] [00032800] add	qword ptr [rip + 0x21d3d0], 1                             ; store(0x24fbd8,0x1)
[main] [INS] [00032808] test	r11d, r11d                                               ; 0x0 vs 0x0
[main] [INS] [0003280b] jne	0x329a0
[main] [INS] [00032811] add	qword ptr [rip + 0x21d3c7], 1                             ; store(0x24fbe0,0x1)
[main] [INS] [00032819] cmp	qword ptr [rsp + 0x20], 0                                 ; 0x0 vs 0x0
[main] [INS] [0003281f] je	0x32860
[main] [INS] [00032860] mov	r10d, dword ptr [rsp + 0x90]                              ; r10d = 0x1
[main] [INS] [00032868] test	r10d, r10d                                               ; 0x1 vs 0x1
[main] [INS] [0003286b] je	0x329a0
[main] [INS] [00032871] mov	rax, rbp                                                  ; rax = 0x90042090 -> 0
[main] [INS] [00032874] add	qword ptr [rip + 0x21d37c], 1                             ; store(0x24fbf8,0x1)
[main] [INS] [0003287c] sub	rax, r15                                                  ; rax = 0x2
[main] [INS] [0003287f] cmp	rax, 0x3e7                                                ; 0x2 vs 0x3e7
[main] [INS] [00032885] jg	0x329a0
[main] [INS] [0003288b] mov	r9d, dword ptr [rsp + 0x2c]                               ; r9d = 0x1
[main] [INS] [00032890] add	qword ptr [rip + 0x21d368], 1                             ; store(0x24fc00,0x1)
[main] [INS] [00032898] test	r9d, r9d                                                 ; 0x1 vs 0x1
[main] [INS] [0003289b] jne	0x328a5
[main] [INS] [000328a5] mov	rax, qword ptr [rsp + 0x88]                               ; rax = 0x1
[main] [INS] [000328ad] lea	rdx, [r15 + rax]                                          ; rdx = 0x9004208f -> 62
[main] [INS] [000328b1] cmp	qword ptr [rsp + 0x70], rdx                               ; 0x9004208d vs 0x9004208f
[main] [INS] [000328b6] jae	0x329a0
[main] [INS] [000328bc] movzx	ebx, byte ptr [rsp + 0x97]                              ; ebx = 0x62
[main] [INS] [000328c4] add	qword ptr [rip + 0x21d344], 1                             ; store(0x24fc10,0x1)
[main] [INS] [000328cc] cmp	byte ptr [rsp + 0x96], bl                                 ; 0x62 vs 0x62
[main] [INS] [000328d3] je	0x33628
[main] [INS] [00033628] cmp	rbp, rdx                                                  ; 0x90042090 vs 0x9004208f
[main] [INS] [0003362b] jbe	0x33716
[main] [INS] [00033631] mov	rax, qword ptr [rip + 0x21c600]                           ; rax = 0x0
[main] [INS] [00033638] movzx	r9d, byte ptr [rsp + 0x96]                              ; r9d = 0x62
[main] [INS] [00033641] cmp	byte ptr [rdx], r9b                                       ; 0x62 vs 0x62
[main] [INS] [00033644] lea	rcx, [rax + 1]                                            ; rcx = 0x1
[main] [INS] [00033648] lea	rax, [rdx + 1]                                            ; rax = 0x90042090 -> 0
[main] [INS] [0003364c] mov	qword ptr [rip + 0x21c5e5], rcx                           ; store(0x24fc38,0x1)
[main] [INS] [00033653] je	0x336f7
[main] [INS] [000336f7] mov	qword ptr [rsp + 0x70], rdx                               ; store(0x7f000008c780,0x9004208f) -> 62
[main] [INS] [000336fc] jmp	0x32996                                                   ; jmp(0x32996)
[main] [INS] [00032996] add	qword ptr [rip + 0x21d2aa], 1                             ; store(0x24fc48,0x1)
[main] [INS] [0003299e] nop	
[main] [INS] [000329a0] mov	qword ptr [rsp + 0x160], r15                              ; store(0x7f000008c870,0x9004208e) -> 6261
[main] [INS] [000329a8] mov	qword ptr [rsp + 0x170], r15                              ; store(0x7f000008c880,0x9004208e) -> 6261
[main] [INS] [000329b0] sub	rsp, 8                                                    ; rsp = 0x7f000008c708 -> 1000
[main] [INS] [000329b4] mov	qword ptr [rsp + 0xb8], 0                                 ; store(0x7f000008c7c0,0x0)
[main] [INS] [000329c0] mov	dword ptr [rsp + 0x190], 0                                ; store(0x7f000008c898,0x0)
[main] [INS] [000329cb] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [000329ce] mov	dword ptr [rsp + 0x184], 0                                ; store(0x7f000008c88c,0x0)
[main] [INS] [000329d9] mov	r8, r14                                                   ; r8 = 0x7f000008c7c0 -> 0
[main] [INS] [000329dc] mov	rdi, r15                                                  ; rdi = 0x9004208e -> 6261
[main] [INS] [000329df] mov	dword ptr [rsp + 0xf0], 0                                 ; store(0x7f000008c7f8,0x0)
[main] [INS] [000329ea] mov	ecx, 2                                                    ; ecx = 0x2
[main] [INS] [000329ef] mov	rdx, r15                                                  ; rdx = 0x9004208e -> 6261
[main] [INS] [000329f2] push	0                                                        ; push(0x0)
[main] [INS] [000329f4] mov	rsi, qword ptr [rsp + 0x158]                              ; rsi = 0x9003a040 -> ff763a0083
[main] [INS] [000329fc] call	0x28820                                                  ; call(0x28820)
[main] [INS] [00028820] push	r15                                                      ; push(0x9004208e) -> 6261
[main] [INS] [00028822] push	r14                                                      ; push(0x7f000008c7c0) -> 0
[main] [INS] [00028824] push	r13                                                      ; push(0x0)
[main] [INS] [00028826] push	r12                                                      ; push(0x9003a000) -> "ERCP~"
[main] [INS] [00028828] push	rbp                                                      ; push(0x90042090) -> 0
[main] [INS] [00028829] push	rbx                                                      ; push(0x62)
[main] [INS] [0002882a] sub	rsp, 0x198                                                ; rsp = 0x7f000008c530 -> b229ce8
[main] [INS] [00028831] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [0002883a] mov	qword ptr [rsp + 0x188], rax                              ; store(0x7f000008c6b8,0x59424d4f444e4100)
[main] [INS] [00028842] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00028844] test	rsi, rsi                                                 ; 0x9003a040 vs 0x9003a040
[main] [INS] [00028847] mov	qword ptr [rsp + 8], rdx                                  ; store(0x7f000008c538,0x9004208e) -> 6261
[main] [INS] [0002884c] mov	dword ptr [rsp + 0x68], ecx                               ; store(0x7f000008c598,0x2)
[main] [INS] [00028850] mov	qword ptr [rsp], r9                                       ; store(0x7f000008c530,0x0)
[main] [INS] [00028854] je	0x28910
[main] [INS] [0002885a] mov	rax, qword ptr [r8]                                       ; rax = 0x0
[main] [INS] [0002885d] add	qword ptr [rip + 0x2252bb], 1                             ; store(0x24db20,0x1)
[main] [INS] [00028865] cmp	qword ptr [r8 + 8], rax                                   ; 0x989680 vs 0x0
[main] [INS] [00028869] lea	rdx, [rax + 1]                                            ; rdx = 0x1
[main] [INS] [0002886d] mov	qword ptr [r8], rdx                                       ; store(0x7f000008c7c0,0x1)
[main] [INS] [00028870] jbe	0x2d2de
[main] [INS] [00028876] mov	eax, dword ptr [rsp + 0x1d0]                              ; eax = 0x0
[main] [INS] [0002887d] add	qword ptr [rip + 0x2252c3], 1                             ; store(0x24db48,0x1)
[main] [INS] [00028885] cmp	qword ptr [r8 + 0x10], rax                                ; 0x989680 vs 0x0
[main] [INS] [00028889] jbe	0x2d44d
[main] [INS] [0002888f] lea	r15, [rip + 0x1707a]                                      ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [00028896] mov	r12, r8                                                   ; r12 = 0x7f000008c7c0 -> 1
[main] [INS] [00028899] mov	r13, rsi                                                  ; r13 = 0x9003a040 -> ff763a0083
[main] [INS] [0002889c] mov	r14, rdi                                                  ; r14 = 0x9004208e -> 6261
[main] [INS] [0002889f] cmp	dword ptr [r12 + 0xd8], 2                                 ; 0x0 vs 0x2
[main] [INS] [000288a8] je	0x288d0
[main] [INS] [000288aa] add	qword ptr [rip + 0x2252a6], 1                             ; store(0x24db58,0x1)
[main] [INS] [000288b2] movzx	eax, byte ptr [r13]                                     ; eax = 0x83
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x83
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x83 vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x83
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x83
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffe90f0
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x28a00 -> 970f00000087fd81
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x28a00)
[main] [INS] [00028a00] cmp	ebp, 0x87                                                 ; 0x83 vs 0x87
[main] [INS] [00028a06] seta	dl                                                       ; dl = 0x0
[main] [INS] [00028a09] cmp	ebp, 0x81                                                 ; 0x83 vs 0x81
[main] [INS] [00028a0f] sete	al                                                       ; al = 0x0
[main] [INS] [00028a12] or	edx, eax                                                   ; edx = 0x28a00 -> 970f00000087fd81
[main] [INS] [00028a14] lea	rax, [rip + 0x17bc5]                                      ; rax = 0x405e0 -> ""
[main] [INS] [00028a1b] mov	byte ptr [rsp + 0x18], dl                                 ; store(0x7f000008c548,0x0)
[main] [INS] [00028a1f] cmp	byte ptr [rsp + 0x18], 0                                  ; 0x0 vs 0x0
[main] [INS] [00028a24] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c540,0x405e0) -> ""
[main] [INS] [00028a29] jne	0x28b10
[main] [INS] [00028a2f] mov	ebx, dword ptr [r12 + 0x90]                               ; ebx = 0x0
[main] [INS] [00028a37] add	qword ptr [rip + 0x225351], 1                             ; store(0x24dd90,0x1)
[main] [INS] [00028a3f] test	ebx, ebx                                                 ; 0x0 vs 0x0
[main] [INS] [00028a41] jne	0x28a63
[main] [INS] [00028a43] movzx	eax, word ptr [r13 + 1]                                 ; eax = 0x3a00 -> 363a0
[main] [INS] [00028a48] add	qword ptr [rip + 0x225350], 1                             ; store(0x24dda0,0x1)
[main] [INS] [00028a50] rol	ax, 8                                                     ; ax = 0x3a
[main] [INS] [00028a54] movzx	eax, ax                                                 ; eax = 0x3a
[main] [INS] [00028a57] cmp	byte ptr [r13 + rax], 0x77                                ; 0x78 vs 0x77
[main] [INS] [00028a5d] jne	0x2d3fb
[main] [INS] [0002d3fb] movzx	eax, byte ptr [r13]                                     ; eax = 0x83
[main] [INS] [0002d400] mov	rcx, qword ptr [rsp + 0x10]                               ; rcx = 0x405e0 -> ""
[main] [INS] [0002d405] add	qword ptr [rip + 0x22099b], 1                             ; store(0x24dda8,0x1)
[main] [INS] [0002d40d] movzx	eax, byte ptr [rcx + rax]                               ; eax = 0x3
[main] [INS] [0002d411] add	r13, rax                                                  ; r13 = 0x9003a043 -> 7d07000000ff76
[main] [INS] [0002d414] mov	rax, qword ptr [r12]                                      ; rax = 0x1
[main] [INS] [0002d418] add	qword ptr [rip + 0x220720], 1                             ; store(0x24db40,0x1)
[main] [INS] [0002d420] cmp	rax, qword ptr [r12 + 8]                                  ; 0x1 vs 0x989680
[main] [INS] [0002d425] lea	rdx, [rax + 1]                                            ; rdx = 0x2
[main] [INS] [0002d429] mov	qword ptr [r12], rdx                                      ; store(0x7f000008c7c0,0x2)
[main] [INS] [0002d42d] jae	0x2d2de
[main] [INS] [0002d433] mov	eax, dword ptr [rsp + 0x1d0]                              ; eax = 0x0
[main] [INS] [0002d43a] add	qword ptr [rip + 0x220706], 1                             ; store(0x24db48,0x1)
[main] [INS] [0002d442] cmp	rax, qword ptr [r12 + 0x10]                               ; 0x0 vs 0x989680
[main] [INS] [0002d447] jb	0x2889f
[main] [INS] [0002889f] cmp	dword ptr [r12 + 0xd8], 2                                 ; 0x0 vs 0x2
[main] [INS] [000288a8] je	0x288d0
[main] [INS] [000288aa] add	qword ptr [rip + 0x2252a6], 1                             ; store(0x24db58,0x1)
[main] [INS] [000288b2] movzx	eax, byte ptr [r13]                                     ; eax = 0x76
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x76
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x76
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffea578
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x29e88 -> 48002262e9158b48
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x29e88)
[main] [INS] [00029e88] mov	rdx, qword ptr [rip + 0x2262e9]                           ; rdx = 0xeb80 -> "AWAVAUAT"
[main] [INS] [00029e8f] test	rdx, rdx                                                 ; 0xeb80 vs 0xeb80
[main] [INS] [00029e92] je	0x29fa1
[main] [INS] [00029e98] mov	dword ptr [rsp + 0xc0], 2                                 ; store(0x7f000008c5f0,0x2)
[main] [INS] [00029ea3] movzx	eax, byte ptr [r13 + 1]                                 ; eax = 0xff
[main] [INS] [00029ea8] mov	rdi, r14                                                  ; rdi = 0x9004208e -> 6261
[main] [INS] [00029eab] mov	rcx, qword ptr [r12 + 0xa8]                               ; rcx = 0x90042090 -> 0
[main] [INS] [00029eb3] add	qword ptr [rip + 0x224265], 1                             ; store(0x24e120,0x1)
[main] [INS] [00029ebb] mov	dword ptr [rsp + 0xc4], eax                               ; store(0x7f000008c5f4,0xff)
[main] [INS] [00029ec2] mov	rax, qword ptr [r12 + 0x18]                               ; rax = 0x90018700 -> ffffffffffffffff
[main] [INS] [00029ec7] mov	qword ptr [rsp + 0xc8], rax                               ; store(0x7f000008c5f8,0x90018700) -> ffffffffffffffff
[main] [INS] [00029ecf] mov	rax, qword ptr [r12 + 0xa0]                               ; rax = 0x9004208e -> 6261
[main] [INS] [00029ed7] sub	rcx, rax                                                  ; rcx = 0x2
[main] [INS] [00029eda] sub	rdi, rax                                                  ; rdi = 0x0
[main] [INS] [00029edd] mov	qword ptr [rsp + 0xd0], rax                               ; store(0x7f000008c600,0x9004208e) -> 6261
[main] [INS] [00029ee5] mov	dword ptr [rsp + 0xd8], ecx                               ; store(0x7f000008c608,0x2)
[main] [INS] [00029eec] mov	rcx, qword ptr [rsp + 8]                                  ; rcx = 0x9004208e -> 6261
[main] [INS] [00029ef1] mov	dword ptr [rsp + 0xe0], edi                               ; store(0x7f000008c610,0x0)
[main] [INS] [00029ef8] mov	edi, dword ptr [rsp + 0x68]                               ; edi = 0x2
[main] [INS] [00029efc] sub	rcx, rax                                                  ; rcx = 0x0
[main] [INS] [00029eff] mov	dword ptr [rsp + 0xdc], ecx                               ; store(0x7f000008c60c,0x0)
[main] [INS] [00029f06] movzx	eax, word ptr [r13 + 2]                                 ; eax = 0x0
[main] [INS] [00029f0b] rol	ax, 8                                                     ; ax = 0x0
[main] [INS] [00029f0f] movzx	eax, ax                                                 ; eax = 0x0
[main] [INS] [00029f12] mov	dword ptr [rsp + 0xf8], eax                               ; store(0x7f000008c628,0x0)
[main] [INS] [00029f19] movzx	eax, word ptr [r13 + 4]                                 ; eax = 0x700
[main] [INS] [00029f1e] rol	ax, 8                                                     ; ax = 0x7
[main] [INS] [00029f22] movzx	eax, ax                                                 ; eax = 0x7
[main] [INS] [00029f25] mov	dword ptr [rsp + 0xfc], eax                               ; store(0x7f000008c62c,0x7)
[main] [INS] [00029f2c] mov	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f2e] shr	eax, 0x1f                                                 ; eax = 0x0
[main] [INS] [00029f31] add	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f33] sar	eax, 1                                                    ; eax = 0x1
[main] [INS] [00029f35] mov	dword ptr [rsp + 0xe4], eax                               ; store(0x7f000008c614,0x1)
[main] [INS] [00029f3c] movzx	eax, word ptr [r12 + 0xd0]                              ; eax = 0x0
[main] [INS] [00029f45] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f47] je	0x2dbd0
[main] [INS] [0002dbd0] mov	dword ptr [rsp + 0xe8], 0xffffffff                        ; store(0x7f000008c618,0xffffffff)
[main] [INS] [0002dbdb] add	qword ptr [rip + 0x220545], 1                             ; store(0x24e128,0x1)
[main] [INS] [0002dbe3] jmp	0x29f54                                                   ; jmp(0x29f54)
[main] [INS] [00029f54] mov	rax, qword ptr [r12 + 0xf8]                               ; rax = 0x0
[main] [INS] [00029f5c] lea	rdi, [rsp + 0xc0]                                         ; rdi = 0x7f000008c5f0 -> ff00000002
[main] [INS] [00029f64] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008c620,0x0)
[main] [INS] [00029f6c] mov	rax, qword ptr [r12 + 0x108]                              ; rax = 0x0
[main] [INS] [00029f74] mov	qword ptr [rsp + 0x100], rax                              ; store(0x7f000008c630,0x0)
[main] [INS] [00029f7c] call	rdx                                                      ; call(0xeb80)
[main] [INS] [0000eb80] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [0000eb82] push	r14                                                      ; push(0x9004208e) -> 6261
[main] [INS] [0000eb84] push	r13                                                      ; push(0x9003a043) -> 7d07000000ff76
[main] [INS] [0000eb86] push	r12                                                      ; push(0x7f000008c7c0) -> 2
[main] [INS] [0000eb88] push	rbp                                                      ; push(0x76)
[main] [INS] [0000eb89] push	rbx                                                      ; push(0x76)
[main] [INS] [0000eb8a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb8c] mov	rbx, rdi                                                  ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [0000eb8f] sub	rsp, 8                                                    ; rsp = 0x7f000008c4f0 -> 1
[main] [INS] [0000eb93] mov	eax, dword ptr [rip + 0x23a873]                           ; eax = 0x0
[main] [INS] [0000eb99] add	qword ptr [rip + 0x23885f], 1                             ; store(0x247400,0x1)
[main] [INS] [0000eba1] mov	edx, eax                                                  ; edx = 0x0
[main] [INS] [0000eba3] or	edx, dword ptr [rip + 0x23a853]                            ; edx = 0x1
[main] [INS] [0000eba9] je	0xed06
[main] [INS] [0000ebaf] add	qword ptr [rip + 0x238851], 1                             ; store(0x247408,0x1)
[main] [INS] [0000ebb7] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [0000ebb9] mov	rbp, qword ptr [rip + 0x23a858]                           ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0000ebc0] je	0xecd8
[main] [INS] [0000ecd8] test	rbp, rbp                                                 ; 0x63e760 vs 0x63e760
[main] [INS] [0000ecdb] je	0xed06
[main] [INS] [0000ecdd] lea	rdi, [rip + 0x2be1b]                                      ; rdi = 0x3aaff -> "--->"
[main] [INS] [0000ece4] mov	rcx, rbp                                                  ; rcx = 0x63e760 -> fbad2884
[main] [INS] [0000ece7] mov	edx, 4                                                    ; edx = 0x4
[main] [INS] [0000ecec] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000ecf1] add	qword ptr [rip + 0x23875f], 1                             ; store(0x247458,0x1)
[main] [INS] [0000ecf9] call	0x58b0                                                   ; call(0x58b0)
[main] [INS] [000058b0] jmp	qword ptr [rip + 0x23f6e2]                                ; jmp(0x2d18a0)
[main] [INS] [002d18a0] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002d18a2] push	r14                                                      ; push(0x9004208e) -> 6261
[main] [INS] [002d18a4] push	r13                                                      ; push(0x9003a043) -> 7d07000000ff76
[main] [INS] [002d18a6] push	r12                                                      ; push(0x7f000008c7c0) -> 2
[main] [INS] [002d18a8] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002d18a9] mov	rbp, rsi                                                  ; rbp = 0x1
[main] [INS] [002d18ac] push	rbx                                                      ; push(0x7f000008c5f0) -> ff00000002
[main] [INS] [002d18ad] imul	rbp, rdx                                                 ; rbp = 0x4
[main] [INS] [002d18b1] sub	rsp, 8                                                    ; rsp = 0x7f000008c4b0 -> b229ce8
[main] [INS] [002d18b5] test	rbp, rbp                                                 ; 0x4 vs 0x4
[main] [INS] [002d18b8] je	0x2d19ff
[main] [INS] [002d18be] mov	eax, dword ptr [rcx]                                      ; eax = 0xfbad2884
[main] [INS] [002d18c0] mov	r14, rdi                                                  ; r14 = 0x3aaff -> "--->"
[main] [INS] [002d18c3] mov	r13, rsi                                                  ; r13 = 0x1
[main] [INS] [002d18c6] mov	r8, rcx                                                   ; r8 = 0x63e760 -> fbad2884
[main] [INS] [002d18c9] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [002d18ce] jne	0x2d1926
[main] [INS] [002d18d0] mov	rbx, qword ptr [rcx + 0x88]                               ; rbx = 0x63f8c0 -> 0
[main] [INS] [002d18d7] mov	r12, qword ptr fs:[0x10]                                  ; r12 = 0x643f00 -> 643f00
[main] [INS] [002d18e0] cmp	qword ptr [rbx + 8], r12                                  ; 0x0 vs 0x643f00
[main] [INS] [002d18e4] je	0x2d1922
[main] [INS] [002d18e6] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [002d18eb] cmp	dword ptr [rip + 0x371006], 0                             ; 0x0 vs 0x0
[main] [INS] [002d18f2] je	0x2d18fc
[main] [INS] [002d18fc] cmpxchg	dword ptr [rbx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [002d18ff] je	0x2d1917
[main] [INS] [002d1917] mov	rbx, qword ptr [r8 + 0x88]                                ; rbx = 0x63f8c0 -> 1
[main] [INS] [002d191e] mov	qword ptr [rbx + 8], r12                                  ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [002d1922] add	dword ptr [rbx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002d1926] mov	eax, dword ptr [r8 + 0xc0]                                ; eax = 0xffffffff
[main] [INS] [002d192d] mov	r12, r8                                                   ; r12 = 0x63e760 -> fbad2884
[main] [INS] [002d1930] mov	rbx, rdx                                                  ; rbx = 0x4
[main] [INS] [002d1933] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002d1935] jne	0x2d19a0
[main] [INS] [002d19a0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002d19a3] je	0x2d1942
[main] [INS] [002d1942] mov	r15, qword ptr [r12 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002d194a] lea	rdx, [rip + 0x367e0f]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002d1951] lea	rax, [rip + 0x368b70]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002d1958] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002d195b] mov	rcx, r15                                                  ; rcx = 0x63a2a0 -> 0
[main] [INS] [002d195e] sub	rcx, rdx                                                  ; rcx = 0xb40
[main] [INS] [002d1961] cmp	rax, rcx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002d1964] jbe	0x2d1a20
[main] [INS] [002d196a] mov	rdx, rbp                                                  ; rdx = 0x4
[main] [INS] [002d196d] mov	rsi, r14                                                  ; rsi = 0x3aaff -> "--->"
[main] [INS] [002d1970] mov	rdi, r12                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002d1973] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x3aaff) -> "--->"
[main] [INS] [002dd934] push	r13                                                      ; push(0x1)
[main] [INS] [002dd936] push	r12                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x4)
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x4)
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008c460 -> 7f000008c560
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x4 vs 0x4
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x3aaff -> "--->"
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x4
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c63 -> "E versio"
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c63
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xffd
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xffd vs 0xffd
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x4 vs 0xffd
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x3aaff -> "--->"
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x4
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x4
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x4
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x3ab03 -> 753c203a64322500
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c63 -> "E versio"
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c67 -> "rsion 8."
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x4 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb1a80
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x3ab03 -> 753c203a64322500
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c67 -> "rsion 8."
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c0940 -> 66c3fc5789fc568b
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c0940)
[main] [INS] [003c0940] mov	edx, dword ptr [rsi - 4]                                  ; edx = 0x3e2d2d2d
[main] [INS] [003c0943] mov	dword ptr [rdi - 4], edx                                  ; store(0x90018c63,0x3e2d2d2d)
[main] [INS] [003c0946] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c67) -> "rsion 8."
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x4
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x4
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008c478 -> 4
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x4
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x4
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x4
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x63e760 -> fbad2884
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x1
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x3aaff -> "--->"
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002d1977] cmp	rax, -1                                                   ; 0x4 vs 0x-1
[main] [INS] [002d197b] mov	rdx, rax                                                  ; rdx = 0x4
[main] [INS] [002d197e] sete	r8b                                                      ; r8b = 0x0
[main] [INS] [002d1982] test	dword ptr [r12], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002d198a] jne	0x2d19f2
[main] [INS] [002d198c] mov	rsi, qword ptr [r12 + 0x88]                               ; rsi = 0x63f8c0 -> 100000001
[main] [INS] [002d1994] sub	dword ptr [rsi + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002d1998] jne	0x2d19f2
[main] [INS] [002d199a] jmp	0x2d19c0                                                  ; jmp(0x2d19c0)
[main] [INS] [002d19c0] mov	qword ptr [rsi + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [002d19c8] cmp	dword ptr [rip + 0x370f29], 0                             ; 0x0 vs 0x0
[main] [INS] [002d19cf] je	0x2d19d8
[main] [INS] [002d19d8] dec	dword ptr [rsi]                                           ; mem is (0x0)
[main] [INS] [002d19da] je	0x2d19f2
[main] [INS] [002d19f2] cmp	rbp, rdx                                                  ; 0x4 vs 0x4
[main] [INS] [002d19f5] je	0x2d19fc
[main] [INS] [002d19fc] mov	rbp, rbx                                                  ; rbp = 0x4
[main] [INS] [002d19ff] add	rsp, 8                                                    ; rsp = 0x7f000008c4b8 -> 7f000008c5f0
[main] [INS] [002d1a03] mov	rax, rbp                                                  ; rax = 0x4
[main] [INS] [002d1a06] pop	rbx                                                       ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [002d1a07] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [002d1a08] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 2
[main] [INS] [002d1a0a] pop	r13                                                       ; r13 = 0x9003a043 -> 7d07000000ff76
[main] [INS] [002d1a0c] pop	r14                                                       ; r14 = 0x9004208e -> 6261
[main] [INS] [002d1a0e] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002d1a10] ret	
[main] [INS] [0000ecfe] add	qword ptr [rip + 0x23875a], 1                             ; store(0x247460,0x1)
[main] [INS] [0000ed06] mov	esi, dword ptr [rbx + 0x1c]                               ; esi = 0x0
[main] [INS] [0000ed09] mov	rdx, rbp                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [0000ed0c] mov	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed10] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a043) -> 7d07000000ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 2
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x63e760 -> fbad2884
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c5f0) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c4c0 -> 63e760
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb78] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb7a] jmp	0xeb5f                                                    ; jmp(0xeb5f)
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c4c8 -> 7f000008c5f0
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 2
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x9003a043 -> 7d07000000ff76
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed15] movsxd	rdi, dword ptr [rbx + 0x1c]                            ; rdi = 0x0
[main] [INS] [0000ed19] mov	esi, dword ptr [rbx + 0x20]                               ; esi = 0x0
[main] [INS] [0000ed1c] mov	rdx, rbp                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [0000ed1f] add	qword ptr [rip + 0x238741], 1                             ; store(0x247468,0x1)
[main] [INS] [0000ed27] mov	r14d, eax                                                 ; r14d = 0x0
[main] [INS] [0000ed2a] sub	esi, edi                                                  ; esi = 0x0
[main] [INS] [0000ed2c] add	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed30] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a043) -> 7d07000000ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 2
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x63e760 -> fbad2884
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c5f0) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c4c0 -> 63e760
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb78] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb7a] jmp	0xeb5f                                                    ; jmp(0xeb5f)
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c4c8 -> 7f000008c5f0
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 2
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x9003a043 -> 7d07000000ff76
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed35] mov	esi, dword ptr [rbx + 0x18]                               ; esi = 0x2
[main] [INS] [0000ed38] mov	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed3c] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0000ed3e] add	qword ptr [rip + 0x23872a], 1                             ; store(0x247470,0x1)
[main] [INS] [0000ed46] mov	r13d, eax                                                 ; r13d = 0x0
[main] [INS] [0000ed49] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x0)
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 2
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c5f0) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c4c0 -> 63e760
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x1
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x90042090 -> 0
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x61
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x61
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x41
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x41 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x9004208f -> 62
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x9004208f
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x90042090 -> 0
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x62
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x1)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x90042090) -> 0
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x62
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x42
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x42 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x90042090 -> 0
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x2
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x90042090
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c4c8 -> 7f000008c5f0
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x2
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 2
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x0
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed4e] movsxd	rdi, dword ptr [rbx + 0x20]                            ; rdi = 0x0
[main] [INS] [0000ed52] mov	rdx, rbp                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [0000ed55] mov	r12d, eax                                                 ; r12d = 0x2
[main] [INS] [0000ed58] mov	esi, dword ptr [rbx + 0x18]                               ; esi = 0x2
[main] [INS] [0000ed5b] add	qword ptr [rip + 0x238715], 1                             ; store(0x247478,0x1)
[main] [INS] [0000ed63] sub	esi, edi                                                  ; esi = 0x2
[main] [INS] [0000ed65] add	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed69] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x0)
[main] [INS] [0000eb02] push	r12                                                      ; push(0x2)
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x63e760 -> fbad2884
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c5f0) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c4c0 -> 63e760
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x1
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x90042090 -> 0
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x61
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x61
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x41
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x41 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x63e760 vs 0x63e760
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9b4] lea	rdx, [rip + 0x2c131]                                      ; rdx = 0x3aaec -> 30257b785c006325
[main] [INS] [0000e9bb] mov	ecx, ebx                                                  ; ecx = 0x61
[main] [INS] [0000e9bd] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000e9c2] mov	rdi, rbp                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000e9c5] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000e9c7] add	qword ptr [rip + 0x238961], 1                             ; store(0x247330,0x1)
[main] [INS] [0000e9cf] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [003843c1] push	rbx                                                      ; push(0x61)
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3aaec -> 30257b785c006325
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c3b0 -> b2289f0
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c3e8,0x61)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c3f0,0x63e700) -> 0
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c3f8,0x3c0940) -> 66c3fc5789fc568b
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c3c8,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c4a0 -> 9004208f
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c3b0 -> b2289f0
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3aaec -> 30257b785c006325
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c3b0,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c3b4,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c3b8,0x7f000008c4a0) -> 9004208f
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c3d0 -> 10a96a5
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c3c0,0x7f000008c3d0) -> 10a96a5
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c3a0 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x0)
[main] [INS] [002ad398] push	r13                                                      ; push(0x90042090) -> 0
[main] [INS] [002ad39a] push	r12                                                      ; push(0x1)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c3b0 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008be30 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c368,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bee8,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3aaec vs 0x3aaec
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bed8,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c3d0 -> 10a96a5
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c4a00000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bf68,0x7f000008c3d0) -> 10a96a5
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bf58,0x7f000008c4a00000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3aaec -> 30257b785c006325
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xaec
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xaec vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x3025785c007d783230257b785c006325
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x3025785c007d783230257b785c006325
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff00000000000000ff0000000000ff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff0000000000000000ff0000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff0000ff00000000ff000000ff00ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x4845 -> 2457c0000000
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x4845 vs 0x4845
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3aaec -> 30257b785c006325
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bee0,0x3aaec) -> 30257b785c006325
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008beec,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008beec,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bf38,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bf30,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bed0,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c3b0) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3a0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3aaec) -> 30257b785c006325
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bde0 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bdf8 -> 3aaec
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3aaec -> 30257b785c006325
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3a0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c3b0 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bf80 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008be68,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008be6c,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008be60,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008be50,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008beb0,0x7f000008bf80) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x63
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3aaed -> 3230257b785c0063
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0x43
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0x43 vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x63
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0x43
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x14
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xfffffffffffffed0
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2adbb0 -> fffc3f850fc98545
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bf80 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008be80,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008be78,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008be88,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008be90,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bea8,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c368 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bed8,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bea0,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008be98,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008beb8,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bec0,0x7f000008c368) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bec8,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2adbb0)
[main] [INS] [002adbb0] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002adbb3] jne	0x2ad7f8
[main] [INS] [002adbb9] lea	r15d, [r10 - 1]                                           ; r15d = 0xffffffff
[main] [INS] [002adbbd] mov	eax, dword ptr [rbp - 0x4c8]                              ; eax = 0x0
[main] [INS] [002adbc3] test	r15d, r15d                                               ; 0xffffffff vs 0xffffffff
[main] [INS] [002adbc6] setg	cl                                                       ; cl = 0x0
[main] [INS] [002adbc9] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002adbcb] jne	0x2adbd5
[main] [INS] [002adbcd] test	cl, cl                                                   ; 0x0 vs 0x0
[main] [INS] [002adbcf] jne	0x2afb28
[main] [INS] [002adbd5] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002adbd9] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002adbdc] ja	0x2b0515
[main] [INS] [002adbe2] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002adbe4] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c3e8 -> 61
[main] [INS] [002adbe9] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002adbec] mov	dword ptr [r12], eax                                      ; store(0x7f000008c3b0,0x20)
[main] [INS] [002adbf0] mov	rax, qword ptr [r14 + 0x28]                               ; rax = 0x90018c67 -> "rsion 8."
[main] [INS] [002adbf4] cmp	rax, qword ptr [r14 + 0x30]                               ; 0x90018c67 vs 0x90019c60
[main] [INS] [002adbf8] mov	edx, dword ptr [rdx]                                      ; edx = 0x61
[main] [INS] [002adbfa] jae	0x2b00b9
[main] [INS] [002adc00] lea	rsi, [rax + 1]                                            ; rsi = 0x90018c68 -> "sion 8.3"
[main] [INS] [002adc04] mov	qword ptr [r14 + 0x28], rsi                               ; store(0x63e788,0x90018c68) -> "sion 8.3"
[main] [INS] [002adc08] mov	byte ptr [rax], dl                                        ; store(0x90018c67,0x61)
[main] [INS] [002adc0a] cmp	r13d, 0x7fffffff                                          ; 0x0 vs 0x7fffffff
[main] [INS] [002adc11] je	0x2add00
[main] [INS] [002adc17] mov	eax, dword ptr [rbp - 0x4c8]                              ; eax = 0x0
[main] [INS] [002adc1d] add	r13d, 1                                                   ; r13d = 0x1
[main] [INS] [002adc21] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002adc23] je	0x2ad930
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008be6c,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bed8,0x3aaee) -> 783230257b785c00
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3aaee -> 783230257b785c00
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xaee
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xaee vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x78323025785c007d783230257b785c00
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x78323025785c007d783230257b785c00
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff00000000000000ff00000000
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff0000000000000000ff
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff0000ff00000000ff000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1211 -> 5000000000002434
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1211 vs 0x1211
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3aaee -> 783230257b785c00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x1 vs 0x1
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bed8,0x3aaee) -> 783230257b785c00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x0
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x0
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x0)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x1)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c3b0) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3a0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3aaec) -> 30257b785c006325
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bde0 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bdf8 -> 3aaec
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3aaec -> 30257b785c006325
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3a0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c3b0 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x1
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffffe
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x0 vs 0x7ffffffe
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x1
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x1
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c378 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x1
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x90042090 -> 0
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x0
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x1
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x1
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c488 -> 61
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x61
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0038452e] ret	
[main] [INS] [0000e9d4] add	qword ptr [rip + 0x23895c], 1                             ; store(0x247338,0x1)
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x9004208f -> 62
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x63e760 -> fbad2884
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x9004208f
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x90042090 -> 0
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x62
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [0000e978] push	rbp                                                      ; push(0x1)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x90042090) -> 0
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x62
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x42
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x42 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x63e760 vs 0x63e760
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9b4] lea	rdx, [rip + 0x2c131]                                      ; rdx = 0x3aaec -> 30257b785c006325
[main] [INS] [0000e9bb] mov	ecx, ebx                                                  ; ecx = 0x62
[main] [INS] [0000e9bd] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000e9c2] mov	rdi, rbp                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000e9c5] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000e9c7] add	qword ptr [rip + 0x238961], 1                             ; store(0x247330,0x1)
[main] [INS] [0000e9cf] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [003843c1] push	rbx                                                      ; push(0x62)
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3aaec -> 30257b785c006325
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c3b0 -> 3000000020
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c3e8,0x62)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c3f0,0x0)
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c3f8,0x0)
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c3c8,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c4a0 -> 90042090
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c3b0 -> 3000000020
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3aaec -> 30257b785c006325
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c3b0,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c3b4,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c3b8,0x7f000008c4a0) -> 90042090
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c3d0 -> 10a96a5
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c3c0,0x7f000008c3d0) -> 10a96a5
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c3a0 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x0)
[main] [INS] [002ad398] push	r13                                                      ; push(0x90042090) -> 0
[main] [INS] [002ad39a] push	r12                                                      ; push(0x1)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c3b0 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008be30 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c368,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bee8,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3aaec vs 0x3aaec
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bed8,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c3d0 -> 10a96a5
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c4a00000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bf68,0x7f000008c3d0) -> 10a96a5
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bf58,0x7f000008c4a00000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3aaec -> 30257b785c006325
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xaec
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xaec vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x3025785c007d783230257b785c006325
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x3025785c007d783230257b785c006325
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff00000000000000ff0000000000ff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff0000000000000000ff0000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff0000ff00000000ff000000ff00ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x4845 -> 2457c0000000
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x4845 vs 0x4845
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3aaec -> 30257b785c006325
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bee0,0x3aaec) -> 30257b785c006325
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008beec,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008beec,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bf38,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bf30,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bed0,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c3b0) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3a0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3aaec) -> 30257b785c006325
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bde0 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bdf8 -> 3aaec
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3aaec -> 30257b785c006325
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3a0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c3b0 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3aaec -> 30257b785c006325
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bf80 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008be68,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008be6c,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008be60,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008be50,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008beb0,0x7f000008bf80) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x63
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3aaed -> 3230257b785c0063
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0x43
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0x43 vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x63
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0x43
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x14
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xfffffffffffffed0
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2adbb0 -> fffc3f850fc98545
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bf80 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008be80,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008be78,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008be88,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008be90,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bea8,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c368 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bed8,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bea0,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008be98,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008beb8,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bec0,0x7f000008c368) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bec8,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2adbb0)
[main] [INS] [002adbb0] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002adbb3] jne	0x2ad7f8
[main] [INS] [002adbb9] lea	r15d, [r10 - 1]                                           ; r15d = 0xffffffff
[main] [INS] [002adbbd] mov	eax, dword ptr [rbp - 0x4c8]                              ; eax = 0x0
[main] [INS] [002adbc3] test	r15d, r15d                                               ; 0xffffffff vs 0xffffffff
[main] [INS] [002adbc6] setg	cl                                                       ; cl = 0x0
[main] [INS] [002adbc9] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002adbcb] jne	0x2adbd5
[main] [INS] [002adbcd] test	cl, cl                                                   ; 0x0 vs 0x0
[main] [INS] [002adbcf] jne	0x2afb28
[main] [INS] [002adbd5] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002adbd9] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002adbdc] ja	0x2b0515
[main] [INS] [002adbe2] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002adbe4] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c3e8 -> 62
[main] [INS] [002adbe9] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002adbec] mov	dword ptr [r12], eax                                      ; store(0x7f000008c3b0,0x20)
[main] [INS] [002adbf0] mov	rax, qword ptr [r14 + 0x28]                               ; rax = 0x90018c68 -> "sion 8.3"
[main] [INS] [002adbf4] cmp	rax, qword ptr [r14 + 0x30]                               ; 0x90018c68 vs 0x90019c60
[main] [INS] [002adbf8] mov	edx, dword ptr [rdx]                                      ; edx = 0x62
[main] [INS] [002adbfa] jae	0x2b00b9
[main] [INS] [002adc00] lea	rsi, [rax + 1]                                            ; rsi = 0x90018c69 -> "ion 8.38"
[main] [INS] [002adc04] mov	qword ptr [r14 + 0x28], rsi                               ; store(0x63e788,0x90018c69) -> "ion 8.38"
[main] [INS] [002adc08] mov	byte ptr [rax], dl                                        ; store(0x90018c68,0x62)
[main] [INS] [002adc0a] cmp	r13d, 0x7fffffff                                          ; 0x0 vs 0x7fffffff
[main] [INS] [002adc11] je	0x2add00
[main] [INS] [002adc17] mov	eax, dword ptr [rbp - 0x4c8]                              ; eax = 0x0
[main] [INS] [002adc1d] add	r13d, 1                                                   ; r13d = 0x1
[main] [INS] [002adc21] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002adc23] je	0x2ad930
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008be6c,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bed8,0x3aaee) -> 783230257b785c00
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3aaee -> 783230257b785c00
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xaee
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xaee vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x78323025785c007d783230257b785c00
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x78323025785c007d783230257b785c00
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff00000000000000ff00000000
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff0000000000000000ff
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff0000ff00000000ff000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1211 -> 5000000000002434
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1211 vs 0x1211
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3aaee -> 783230257b785c00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x1 vs 0x1
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bed8,0x3aaee) -> 783230257b785c00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x0
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x0
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x0)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x1)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c3b0) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3a0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3aaec) -> 30257b785c006325
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bde0 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bdf8 -> 3aaec
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3aaec -> 30257b785c006325
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3a0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c3b0 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x1
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffffe
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x0 vs 0x7ffffffe
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3aaee -> 783230257b785c00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x1
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x1
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c378 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x1
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x90042090 -> 0
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x0
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x1
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x1
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c488 -> 62
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x62
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0038452e] ret	
[main] [INS] [0000e9d4] add	qword ptr [rip + 0x23895c], 1                             ; store(0x247338,0x1)
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x90042090 -> 0
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x63e760 -> fbad2884
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x2
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x90042090
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c4c8 -> 7f000008c5f0
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x2
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x2
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x0
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed6e] add	qword ptr [rip + 0x23870a], 1                             ; store(0x247480,0x1)
[main] [INS] [0000ed76] test	rbp, rbp                                                 ; 0x63e760 vs 0x63e760
[main] [INS] [0000ed79] je	0xed90
[main] [INS] [0000ed7b] mov	rsi, rbp                                                  ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ed7e] mov	edi, 0xa                                                  ; edi = 0xa
[main] [INS] [0000ed83] add	qword ptr [rip + 0x2386fd], 1                             ; store(0x247488,0x1)
[main] [INS] [0000ed8b] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0xa
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0xa
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c69 -> "ion 8.38"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c69 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c6a -> "on 8.38 "
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c6a) -> "on 8.38 "
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c69,0xa)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0xa
[main] [INS] [002d980c] ret	
[main] [INS] [0000ed90] mov	ecx, dword ptr [rbx + 4]                                  ; ecx = 0xff
[main] [INS] [0000ed93] mov	rdi, qword ptr [rip + 0x23a67e]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000ed9a] cmp	ecx, 0xff                                                 ; 0xff vs 0xff
[main] [INS] [0000eda0] je	0xf0d8
[main] [INS] [0000f0d8] mov	ecx, dword ptr [rbx + 0x38]                               ; ecx = 0x0
[main] [INS] [0000f0db] lea	rdx, [rip + 0x2ba36]                                      ; rdx = 0x3ab18 -> "%+3d "
[main] [INS] [0000f0e2] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000f0e4] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000f0e9] add	qword ptr [rip + 0x23839f], 1                             ; store(0x247490,0x1)
[main] [INS] [0000f0f1] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [003843c1] push	rbx                                                      ; push(0x7f000008c5f0) -> ff00000002
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3ab18 -> "%+3d "
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c400 -> 1
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c438,0x0)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c440,0xa)
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c448,0x0)
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c418,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c4f0 -> 1
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c400 -> 1
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3ab18 -> "%+3d "
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c400,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c404,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c408,0x7f000008c4f0) -> 1
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c420 -> b229ea0
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c410,0x7f000008c420) -> b229ea0
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c3f0 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x0)
[main] [INS] [002ad398] push	r13                                                      ; push(0x0)
[main] [INS] [002ad39a] push	r12                                                      ; push(0x2)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c400 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008be80 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c3b8,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bf38,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3ab18 vs 0x3ab18
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bf28,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c420 -> b229ea0
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3ab18 -> "%+3d "
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c4f00000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bfb8,0x7f000008c420) -> b229ea0
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bfa8,0x7f000008c4f00000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab18 -> "%+3d "
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb18
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb18 vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x2064332500202020200a002064332b25
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x2064332500202020200a002064332b25
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff0000000000000000000000ff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff0000000000ff0000000000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xffff0000000000ff00000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1821 -> 0
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1821 vs 0x1821
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab18 -> "%+3d "
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bf30,0x3ab18) -> "%+3d "
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008bf3c,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008bf3c,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bf88,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bf80,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bf20,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3ab18 -> "%+3d "
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3ab18 -> "%+3d "
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c400) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3f0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008be30 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008be48 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3f0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c400 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3ab18 -> "%+3d "
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3ab18 -> "%+3d "
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bfd0 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008beb8,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008bebc,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008beb0,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008bea0,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008bf00,0x7f000008bfd0) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x2b
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3ab19 -> "+3d "
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0xb
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0xb vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x2b
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0xb
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x2
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0x40
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2add20 -> 538d49017bb60f45
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bfd0 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008bed0,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008bec8,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008bed8,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008bee0,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bef8,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c3b8 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bf28,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bef0,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008bee8,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008bf08,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bf10,0x7f000008c3b8) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bf18,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2add20)
[main] [INS] [002add20] movzx	r15d, byte ptr [r11 + 1]                                ; r15d = 0x33
[main] [INS] [002add25] lea	rdx, [r11 + 1]                                            ; rdx = 0x3ab1a -> "3d "
[main] [INS] [002add29] lea	rax, [rip - 0x50]                                         ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002add30] lea	esi, [r15 - 0x20]                                         ; esi = 0x13
[main] [INS] [002add34] cmp	sil, 0x5a                                                 ; 0x13 vs 0x5a
[main] [INS] [002add38] ja	0x2af35a
[main] [INS] [002add3e] movsx	eax, r15b                                               ; eax = 0x33
[main] [INS] [002add42] lea	rsi, [rip + 0x151d97]                                     ; rsi = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002add49] lea	rdi, [rip - 0x70]                                         ; rdi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002add50] sub	eax, 0x20                                                 ; eax = 0x13
[main] [INS] [002add53] mov	r11, rdx                                                  ; r11 = 0x3ab1a -> "3d "
[main] [INS] [002add56] mov	dword ptr [rbp - 0x4f8], 1                                ; store(0x7f000008bef8,0x1)
[main] [INS] [002add60] cdqe	
[main] [INS] [002add62] movzx	eax, byte ptr [rsi + rax]                               ; eax = 0x8
[main] [INS] [002add66] lea	rsi, [rip + 0x151cf3]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002add6d] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xb60
[main] [INS] [002add71] add	rax, rdi                                                  ; rax = 0x2ae840 -> ffffffba3bb60f45
[main] [INS] [002add74] jmp	rax                                                       ; jmp(0x2ae840)
[main] [INS] [002ae840] movzx	r15d, byte ptr [r11]                                    ; r15d = 0x33
[main] [INS] [002ae844] mov	edx, 0x7fffffff                                           ; edx = 0x7fffffff
[main] [INS] [002ae849] lea	r10d, [r15 - 0x30]                                        ; r10d = 0x3
[main] [INS] [002ae84d] movzx	eax, byte ptr [r11 + 1]                                 ; eax = 0x64
[main] [INS] [002ae852] lea	rsi, [r11 + 1]                                            ; rsi = 0x3ab1b -> 202020200a002064
[main] [INS] [002ae856] mov	r15d, eax                                                 ; r15d = 0x64
[main] [INS] [002ae859] sub	eax, 0x30                                                 ; eax = 0x34
[main] [INS] [002ae85c] cmp	eax, 9                                                    ; 0x34 vs 0x9
[main] [INS] [002ae85f] ja	0x2afe08
[main] [INS] [002afe08] cmp	r10d, 0x7fffffde                                          ; 0x3 vs 0x7fffffde
[main] [INS] [002afe0f] mov	qword ptr [rbp - 0x530], rsi                              ; store(0x7f000008bec0,0x3ab1b) -> 202020200a002064
[main] [INS] [002afe16] ja	0x2aec30
[main] [INS] [002afe1c] cmp	r10d, 0x3c7                                               ; 0x3 vs 0x3c7
[main] [INS] [002afe23] jle	0x2afeab
[main] [INS] [002afeab] cmp	r15b, 0x24                                                ; 0x64 vs 0x24
[main] [INS] [002afeaf] je	0x2af2ab
[main] [INS] [002afeb5] lea	edx, [r15 - 0x20]                                         ; edx = 0x44
[main] [INS] [002afeb9] lea	rax, [rip - 0x21e0]                                       ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002afec0] cmp	dl, 0x5a                                                  ; 0x44 vs 0x5a
[main] [INS] [002afec3] ja	0x2aef90
[main] [INS] [002afec9] movsx	eax, r15b                                               ; eax = 0x64
[main] [INS] [002afecd] lea	rdx, [rip + 0x14fc0c]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002afed4] lea	rdi, [rip - 0x21fb]                                       ; rdi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002afedb] sub	eax, 0x20                                                 ; eax = 0x44
[main] [INS] [002afede] mov	r11, qword ptr [rbp - 0x530]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002afee5] cdqe	
[main] [INS] [002afee7] movzx	edx, byte ptr [rdx + rax]                               ; edx = 0xf
[main] [INS] [002afeeb] lea	rax, [rip + 0x14faee]                                     ; rax = 0x3ff9e0 -> 0
[main] [INS] [002afef2] movsxd	rax, dword ptr [rax + rdx*4]                           ; rax = 0xbd0
[main] [INS] [002afef6] add	rax, rdi                                                  ; rax = 0x2ae8b0 -> b21840fc98545
[main] [INS] [002afef9] jmp	rax                                                       ; jmp(0x2ae8b0)
[main] [INS] [002ae8b0] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002ae8b3] je	0x2af3da
[main] [INS] [002af3da] mov	edx, dword ptr [rbp - 0x528]                              ; edx = 0x0
[main] [INS] [002af3e0] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002af3e4] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002af3e6] je	0x2af8db
[main] [INS] [002af8db] mov	r9d, dword ptr [rbp - 0x518]                              ; r9d = 0x0
[main] [INS] [002af8e2] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002af8e5] jne	0x2b0491
[main] [INS] [002af8eb] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002af8ee] ja	0x2b047e
[main] [INS] [002af8f4] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002af8f6] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c438 -> 0
[main] [INS] [002af8fb] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002af8fe] mov	dword ptr [r12], eax                                      ; store(0x7f000008c400,0x20)
[main] [INS] [002af902] movsxd	rax, dword ptr [rdx]                                   ; rax = 0x0
[main] [INS] [002af905] jmp	0x2ae8d7                                                  ; jmp(0x2ae8d7)
[main] [INS] [002ae8d7] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [002ae8da] js	0x2af4d8
[main] [INS] [002ae8e0] mov	qword ptr [rbp - 0x518], rax                              ; store(0x7f000008bed8,0x0)
[main] [INS] [002ae8e7] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ae8ea] mov	dword ptr [rbp - 0x530], 0xa                              ; store(0x7f000008bec0,0xa)
[main] [INS] [002ae8f4] jmp	0x2adeb8                                                  ; jmp(0x2adeb8)
[main] [INS] [002adeb8] test	ecx, ecx                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002adeba] js	0x2aef60
[main] [INS] [002aef60] mov	qword ptr [rbp - 0x548], 1                                ; store(0x7f000008bea8,0x1)
[main] [INS] [002aef6b] jmp	0x2aded7                                                  ; jmp(0x2aded7)
[main] [INS] [002aded7] mov	edx, dword ptr [rbp - 0x530]                              ; edx = 0xa
[main] [INS] [002adedd] mov	rsi, qword ptr [rbp - 0x4e0]                              ; rsi = 0x7f000008c3b8 -> 59424d4f444e4100
[main] [INS] [002adee4] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [002adee6] mov	rdi, qword ptr [rbp - 0x518]                              ; rdi = 0x0
[main] [INS] [002adeed] cmp	r15b, 0x58                                                ; 0x64 vs 0x58
[main] [INS] [002adef1] mov	dword ptr [rbp - 0x568], r10d                             ; store(0x7f000008be88,0x3)
[main] [INS] [002adef8] sete	cl                                                       ; cl = 0x0
[main] [INS] [002adefb] mov	qword ptr [rbp - 0x560], r11                              ; store(0x7f000008be90,0x3ab1b) -> 202020200a002064
[main] [INS] [002adf02] mov	dword ptr [rbp - 0x558], r9d                              ; store(0x7f000008be98,0x0)
[main] [INS] [002adf09] call	0x2aa7b0                                                 ; call(0x2aa7b0)
[main] [INS] [002aa7b0] lea	r8, [rip + 0x154de9]                                      ; r8 = 0x3ff5a0 -> "01234567"
[main] [INS] [002aa7b7] lea	rax, [rip + 0x154e22]                                     ; rax = 0x3ff5e0 -> "01234567"
[main] [INS] [002aa7be] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [002aa7c0] cmovne	r8, rax                                                ; r8 = 0x3ff5a0 -> "01234567"
[main] [INS] [002aa7c4] cmp	edx, 0xa                                                  ; 0xa vs 0xa
[main] [INS] [002aa7c7] je	0x2aa840
[main] [INS] [002aa840] movabs	rcx, 0xcccccccccccccccd                                ; rcx = 0xcccccccccccccccd
[main] [INS] [002aa84a] nop	word ptr [rax + rax]
[main] [INS] [002aa850] mov	rax, rdi                                                  ; rax = 0x0
[main] [INS] [002aa853] sub	rsi, 1                                                    ; rsi = 0x7f000008c3b7 -> 424d4f444e410000
[main] [INS] [002aa857] mul	rcx                                                       ; rcx = 0xcccccccccccccccd
[main] [INS] [002aa85a] shr	rdx, 3                                                    ; rdx = 0x0
[main] [INS] [002aa85e] lea	rax, [rdx + rdx*4]                                        ; rax = 0x0
[main] [INS] [002aa862] add	rax, rax                                                  ; rax = 0x0
[main] [INS] [002aa865] sub	rdi, rax                                                  ; rdi = 0x0
[main] [INS] [002aa868] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002aa86b] movzx	eax, byte ptr [r8 + rdi]                                ; eax = 0x30
[main] [INS] [002aa870] mov	rdi, rdx                                                  ; rdi = 0x0
[main] [INS] [002aa873] mov	byte ptr [rsi], al                                        ; store(0x7f000008c3b7,0x30)
[main] [INS] [002aa875] jne	0x2aa850
[main] [INS] [002aa877] mov	rax, rsi                                                  ; rax = 0x7f000008c3b7 -> 424d4f444e410030
[main] [INS] [002aa87a] ret	
[main] [INS] [002adf0e] mov	rcx, qword ptr [rbp - 0x540]                              ; rcx = 0xffffffffffffffff
[main] [INS] [002adf15] mov	qword ptr [rbp - 0x528], rax                              ; store(0x7f000008bec8,0x7f000008c3b7) -> 424d4f444e410030
[main] [INS] [002adf1c] mov	r9d, dword ptr [rbp - 0x558]                              ; r9d = 0x0
[main] [INS] [002adf23] mov	r11, qword ptr [rbp - 0x560]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002adf2a] mov	r10d, dword ptr [rbp - 0x568]                             ; r10d = 0x3
[main] [INS] [002adf31] test	rcx, rcx                                                 ; 0xffffffffffffffff vs 0xffffffffffffffff
[main] [INS] [002adf34] je	0x2adf8e
[main] [INS] [002adf36] mov	edx, dword ptr [rbp - 0x510]                              ; edx = 0x0
[main] [INS] [002adf3c] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002adf3e] je	0x2adf8e
[main] [INS] [002adf8e] cmp	dword ptr [rbp - 0x530], 0xa                              ; 0xa vs 0xa
[main] [INS] [002adf95] jne	0x2adfea
[main] [INS] [002adf97] mov	r8d, dword ptr [rbp - 0x520]                              ; r8d = 0x0
[main] [INS] [002adf9e] test	r8d, r8d                                                 ; 0x0 vs 0x0
[main] [INS] [002adfa1] je	0x2adfea
[main] [INS] [002adfea] mov	rax, qword ptr [rbp - 0x4e0]                              ; rax = 0x7f000008c3b8 -> 59424d4f444e4100
[main] [INS] [002adff1] sub	rax, qword ptr [rbp - 0x528]                              ; rax = 0x1
[main] [INS] [002adff8] cmp	rax, qword ptr [rbp - 0x548]                              ; 0x1 vs 0x1
[main] [INS] [002adfff] mov	qword ptr [rbp - 0x510], rax                              ; store(0x7f000008bee0,0x1)
[main] [INS] [002ae006] jl	0x2aea90
[main] [INS] [002ae00c] cmp	qword ptr [rbp - 0x518], 0                                ; 0x0 vs 0x0
[main] [INS] [002ae014] je	0x2af090
[main] [INS] [002af090] mov	r8, qword ptr [rbp - 0x548]                               ; r8 = 0x1
[main] [INS] [002af097] sub	r8, qword ptr [rbp - 0x510]                               ; r8 = 0x0
[main] [INS] [002af09e] cmovs	r8, qword ptr [rbp - 0x518]                             ; r8 = 0x0
[main] [INS] [002af0a6] mov	ecx, r8d                                                  ; ecx = 0x0
[main] [INS] [002af0a9] jmp	0x2aed24                                                  ; jmp(0x2aed24)
[main] [INS] [002aed24] mov	eax, dword ptr [rbp - 0x4c8]                              ; eax = 0x0
[main] [INS] [002aed2a] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002aed2c] jne	0x2ae080
[main] [INS] [002aed32] mov	rsi, qword ptr [rbp - 0x510]                              ; rsi = 0x1
[main] [INS] [002aed39] mov	eax, r10d                                                 ; eax = 0x3
[main] [INS] [002aed3c] sub	eax, esi                                                  ; eax = 0x2
[main] [INS] [002aed3e] mov	dword ptr [rbp - 0x4c8], esi                              ; store(0x7f000008bf28,0x1)
[main] [INS] [002aed44] sub	eax, r8d                                                  ; eax = 0x2
[main] [INS] [002aed47] mov	r8d, eax                                                  ; r8d = 0x2
[main] [INS] [002aed4a] jmp	0x2aeaeb                                                  ; jmp(0x2aeaeb)
[main] [INS] [002aeaeb] mov	eax, dword ptr [rbp - 0x500]                              ; eax = 0x0
[main] [INS] [002aeaf1] or	eax, dword ptr [rbp - 0x4f8]                               ; eax = 0x1
[main] [INS] [002aeaf7] or	eax, r9d                                                   ; eax = 0x1
[main] [INS] [002aeafa] je	0x2aedf0
[main] [INS] [002aeb00] sub	r8d, 1                                                    ; r8d = 0x1
[main] [INS] [002aeb04] cmp	byte ptr [rbp - 0x4e8], 0x20                              ; 0x20 vs 0x20
[main] [INS] [002aeb0b] je	0x2af028
[main] [INS] [002af028] test	r8d, r8d                                                 ; 0x1 vs 0x1
[main] [INS] [002af02b] jg	0x2af42d
[main] [INS] [002af42d] movsxd	r10, r8d                                               ; r10 = 0x1
[main] [INS] [002af430] mov	esi, 0x20                                                 ; esi = 0x20
[main] [INS] [002af435] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002af438] mov	rdx, r10                                                  ; rdx = 0x1
[main] [INS] [002af43b] mov	qword ptr [rbp - 0x4e0], r10                              ; store(0x7f000008bf10,0x1)
[main] [INS] [002af442] mov	qword ptr [rbp - 0x558], r11                              ; store(0x7f000008be98,0x3ab1b) -> 202020200a002064
[main] [INS] [002af449] mov	dword ptr [rbp - 0x548], ecx                              ; store(0x7f000008bea8,0x0)
[main] [INS] [002af44f] mov	dword ptr [rbp - 0x520], r9d                              ; store(0x7f000008bed0,0x0)
[main] [INS] [002af456] mov	dword ptr [rbp - 0x4e8], r8d                              ; store(0x7f000008bf08,0x1)
[main] [INS] [002af45d] call	0x2d2260                                                 ; call(0x2d2260)
[main] [INS] [002d2260] push	r15                                                      ; push(0x64)
[main] [INS] [002d2262] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002d2264] lea	r14, [rip + 0x13bdd5]                                     ; r14 = 0x40e040 -> "        "
[main] [INS] [002d226b] push	r13                                                      ; push(0x0)
[main] [INS] [002d226d] push	r12                                                      ; push(0x7f000008c400) -> 3000000020
[main] [INS] [002d226f] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002d2272] push	rbp                                                      ; push(0x7f000008c3f0) -> 1
[main] [INS] [002d2273] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002d2274] mov	rbp, rdi                                                  ; rbp = 0x63e760 -> fbad2884
[main] [INS] [002d2277] sub	rsp, 0x38                                                 ; rsp = 0x7f000008be10 -> 1
[main] [INS] [002d227b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002d2284] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008be38,0x59424d4f444e4100)
[main] [INS] [002d2289] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002d228b] cmp	esi, 0x20                                                 ; 0x20 vs 0x20
[main] [INS] [002d228e] je	0x2d22c6
[main] [INS] [002d22c6] cmp	r12d, 0xf                                                 ; 0x1 vs 0xf
[main] [INS] [002d22ca] mov	r15d, r12d                                                ; r15d = 0x1
[main] [INS] [002d22cd] jle	0x2d2340
[main] [INS] [002d2340] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [002d2342] nop	word ptr [rax + rax]
[main] [INS] [002d2348] test	r15d, r15d                                               ; 0x1 vs 0x1
[main] [INS] [002d234b] jle	0x2d2381
[main] [INS] [002d234d] mov	r12, qword ptr [rbp + 0xd8]                               ; r12 = 0x63a2a0 -> 0
[main] [INS] [002d2354] lea	rdx, [rip + 0x367405]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002d235b] lea	rax, [rip + 0x368166]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002d2362] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002d2365] mov	rdi, r12                                                  ; rdi = 0x63a2a0 -> 0
[main] [INS] [002d2368] sub	rdi, rdx                                                  ; rdi = 0xb40
[main] [INS] [002d236b] cmp	rax, rdi                                                  ; 0xd68 vs 0xb40
[main] [INS] [002d236e] jbe	0x2d23a3
[main] [INS] [002d2370] movsxd	rdx, r15d                                              ; rdx = 0x1
[main] [INS] [002d2373] mov	rsi, r14                                                  ; rsi = 0x40e040 -> "        "
[main] [INS] [002d2376] mov	rdi, rbp                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002d2379] call	qword ptr [r12 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x1)
[main] [INS] [002dd932] push	r14                                                      ; push(0x40e040) -> "        "
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x0)
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bdc0 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x40e040 -> "        "
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c6a -> "on 8.38 "
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c6a
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xff6
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xff6 vs 0xff6
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xff6
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x40e040 -> "        "
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x40e041 -> "        "
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c6a -> "on 8.38 "
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c6b -> "n 8.38 2"
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x40e041 -> "        "
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c6b -> "n 8.38 2"
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x20
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c6a,0x20)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c6b) -> "n 8.38 2"
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bdd8 -> 0
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x63a2a0 -> 0
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x40e040 -> "        "
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x1
[main] [INS] [002dd9b4] ret	
[main] [INS] [002d237e] add	rbx, rax                                                  ; rbx = 0x1
[main] [INS] [002d2381] mov	rdi, qword ptr [rsp + 0x28]                               ; rdi = 0x59424d4f444e4100
[main] [INS] [002d2386] xor	rdi, qword ptr fs:[0x28]                                  ; rdi = 0x0
[main] [INS] [002d238f] mov	rax, rbx                                                  ; rax = 0x1
[main] [INS] [002d2392] jne	0x2d23aa
[main] [INS] [002d2394] add	rsp, 0x38                                                 ; rsp = 0x7f000008be48 -> 3ab18
[main] [INS] [002d2398] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002d2399] pop	rbp                                                       ; rbp = 0x7f000008c3f0 -> 1
[main] [INS] [002d239a] pop	r12                                                       ; r12 = 0x7f000008c400 -> 3000000020
[main] [INS] [002d239c] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002d239e] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002d23a0] pop	r15                                                       ; r15 = 0x64
[main] [INS] [002d23a2] ret	
[main] [INS] [002af462] mov	r10, qword ptr [rbp - 0x4e0]                              ; r10 = 0x1
[main] [INS] [002af469] cmp	r10, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002af46c] jne	0x2add00
[main] [INS] [002af472] cmp	r13d, 0x7ffffffe                                          ; 0x0 vs 0x7ffffffe
[main] [INS] [002af479] mov	r8d, dword ptr [rbp - 0x4e8]                              ; r8d = 0x1
[main] [INS] [002af480] mov	r9d, dword ptr [rbp - 0x520]                              ; r9d = 0x0
[main] [INS] [002af487] mov	ecx, dword ptr [rbp - 0x548]                              ; ecx = 0x0
[main] [INS] [002af48d] mov	r11, qword ptr [rbp - 0x558]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002af494] ja	0x2b04d3
[main] [INS] [002af49a] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002af49f] sub	eax, r13d                                                 ; eax = 0x7fffffff
[main] [INS] [002af4a2] cmp	eax, r8d                                                  ; 0x7fffffff vs 0x1
[main] [INS] [002af4a5] jb	0x2aec30
[main] [INS] [002af4ab] add	r13d, r8d                                                 ; r13d = 0x1
[main] [INS] [002af4ae] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002af4b1] jmp	0x2aeb11                                                  ; jmp(0x2aeb11)
[main] [INS] [002aeb11] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002aeb14] je	0x2aedfd
[main] [INS] [002aedfd] mov	eax, dword ptr [rbp - 0x4f8]                              ; eax = 0x1
[main] [INS] [002aee03] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [002aee05] je	0x2af167
[main] [INS] [002aee0b] mov	rax, qword ptr [r14 + 0x28]                               ; rax = 0x90018c6b -> "n 8.38 2"
[main] [INS] [002aee0f] cmp	rax, qword ptr [r14 + 0x30]                               ; 0x90018c6b vs 0x90019c60
[main] [INS] [002aee13] jae	0x2b0046
[main] [INS] [002aee19] lea	rdx, [rax + 1]                                            ; rdx = 0x90018c6c -> " 8.38 20"
[main] [INS] [002aee1d] mov	qword ptr [r14 + 0x28], rdx                               ; store(0x63e788,0x90018c6c) -> " 8.38 20"
[main] [INS] [002aee21] mov	byte ptr [rax], 0x2b                                      ; store(0x90018c6b,0x2b)
[main] [INS] [002aee24] jmp	0x2aeb33                                                  ; jmp(0x2aeb33)
[main] [INS] [002aeb33] cmp	r13d, 0x7fffffff                                          ; 0x1 vs 0x7fffffff
[main] [INS] [002aeb3a] je	0x2add00
[main] [INS] [002aeb40] add	r13d, 1                                                   ; r13d = 0x2
[main] [INS] [002aeb44] cmp	qword ptr [rbp - 0x518], 0                                ; 0x0 vs 0x0
[main] [INS] [002aeb4c] je	0x2aebb1
[main] [INS] [002aebb1] add	ecx, r8d                                                  ; ecx = 0x0
[main] [INS] [002aebb4] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [002aebb6] jg	0x2aef00
[main] [INS] [002aebbc] test	r13d, r13d                                               ; 0x2 vs 0x2
[main] [INS] [002aebbf] js	0x2b0416
[main] [INS] [002aebc5] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002aebcc] lea	rsi, [rip + 0x38ab8d]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002aebd3] mov	rax, r15                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002aebd6] sub	rax, rsi                                                  ; rax = 0xb40
[main] [INS] [002aebd9] cmp	qword ptr [rbp - 0x4d0], rax                              ; 0xd68 vs 0xb40
[main] [INS] [002aebe0] jbe	0x2af960
[main] [INS] [002aebe6] mov	rsi, qword ptr [rbp - 0x528]                              ; rsi = 0x7f000008c3b7 -> 424d4f444e410030
[main] [INS] [002aebed] mov	qword ptr [rbp - 0x4e0], r11                              ; store(0x7f000008bf10,0x3ab1b) -> 202020200a002064
[main] [INS] [002aebf4] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002aebf7] mov	rdx, qword ptr [rbp - 0x510]                              ; rdx = 0x1
[main] [INS] [002aebfe] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x2)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c400) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3f0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008be30 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x7f000008c3b7 -> 424d4f444e410030
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c6c -> " 8.38 20"
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c6c
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xff4
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xff4 vs 0xff4
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xff4
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x7f000008c3b7 -> 424d4f444e410030
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x7f000008c3b8 -> 59424d4f444e4100
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c6c -> " 8.38 20"
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c6d -> "8.38 201"
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x7f000008c3b8 -> 59424d4f444e4100
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c6d -> "8.38 201"
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x30
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c6c,0x30)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c6d) -> "8.38 201"
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008be48 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3f0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c400 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x2
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002aec02] mov	rsi, qword ptr [rbp - 0x510]                              ; rsi = 0x1
[main] [INS] [002aec09] cmp	rsi, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002aec0c] jne	0x2add00
[main] [INS] [002aec12] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002aec17] mov	r11, qword ptr [rbp - 0x4e0]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002aec1e] sub	eax, r13d                                                 ; eax = 0x7ffffffd
[main] [INS] [002aec21] cdqe	
[main] [INS] [002aec23] cmp	rax, rsi                                                  ; 0x7ffffffd vs 0x1
[main] [INS] [002aec26] jge	0x2ae21b
[main] [INS] [002ae21b] add	r13d, dword ptr [rbp - 0x4c8]                             ; r13d = 0x3
[main] [INS] [002ae222] jmp	0x2ad930                                                  ; jmp(0x2ad930)
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008bebc,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bf28,0x3ab1c) -> 202020200a0020
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab1c -> 202020200a0020
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb1c
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb1c vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x2a2e25002064332500202020200a0020
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x2a2e25002064332500202020200a0020
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff00000000ff0000000000000000
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff00000000ff0000000000ff00
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xffff000000ffff0000000000ff00
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x3182 -> 8000000000024
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x3182 vs 0x3182
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x1
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab1d -> 2500202020200a00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x3 vs 0x3
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bf28,0x3ab1d) -> 2500202020200a00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x1
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x1
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x1)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x3)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c400) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3f0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008be30 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x3ab1c -> 202020200a0020
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c6d -> "8.38 201"
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c6d
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xff3
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xff3 vs 0xff3
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xff3
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x3ab1c -> 202020200a0020
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x3ab1d -> 2500202020200a00
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c6d -> "8.38 201"
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c6e -> ".38 2015"
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x3ab1d -> 2500202020200a00
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c6e -> ".38 2015"
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x20
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c6d,0x20)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c6e) -> ".38 2015"
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008be48 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3f0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c400 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x3
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x1
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffffc
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x1 vs 0x7ffffffc
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x4
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x4
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c3c8 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x2
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x0
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x4
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x4
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c4d8 -> 7f000008c5f0
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [0038452e] ret	
[main] [INS] [0000f0f6] add	qword ptr [rip + 0x23839a], 1                             ; store(0x247498,0x1)
[main] [INS] [0000f0fe] cmp	dword ptr [rbx + 0x38], 0x63                              ; 0x0 vs 0x63
[main] [INS] [0000f102] jle	0xedd7
[main] [INS] [0000edd7] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000edd9] test	r14d, r14d                                               ; 0x0 vs 0x0
[main] [INS] [0000eddc] jle	0xee09
[main] [INS] [0000ee09] mov	rsi, qword ptr [rip + 0x23a608]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ee10] mov	edi, 0x5e                                                 ; edi = 0x5e
[main] [INS] [0000ee15] add	qword ptr [rip + 0x2386bb], 1                             ; store(0x2474d8,0x1)
[main] [INS] [0000ee1d] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x5e
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x5e
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c6e -> ".38 2015"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c6e vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c6f -> "38 2015-"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c6f) -> "38 2015-"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c6e,0x5e)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x5e
[main] [INS] [002d980c] ret	
[main] [INS] [0000ee22] add	qword ptr [rip + 0x2386b6], 1                             ; store(0x2474e0,0x1)
[main] [INS] [0000ee2a] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [0000ee2d] jle	0xee82
[main] [INS] [0000ee82] sub	r12d, r14d                                                ; r12d = 0x2
[main] [INS] [0000ee85] mov	eax, r12d                                                 ; eax = 0x2
[main] [INS] [0000ee88] sub	eax, r13d                                                 ; eax = 0x2
[main] [INS] [0000ee8b] cmp	eax, -3                                                   ; 0x2 vs 0x-3
[main] [INS] [0000ee8e] jl	0xeec9
[main] [INS] [0000ee90] lea	r12d, [rax + 4]                                           ; r12d = 0x6
[main] [INS] [0000ee94] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000ee96] nop	word ptr cs:[rax + rax]
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x1
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c6f -> "38 2015-"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c6f vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c70 -> "8 2015-1"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c70) -> "8 2015-1"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c6f,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x1 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x2
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c70 -> "8 2015-1"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c70 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c71 -> " 2015-11"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c71) -> " 2015-11"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c70,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x2 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x3
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c71 -> " 2015-11"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c71 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c72 -> "2015-11-"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c72) -> "2015-11-"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c71,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x3 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x4
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c72 -> "2015-11-"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c72 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c73 -> "015-11-2"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c73) -> "015-11-2"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c72,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x4 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x5
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c73 -> "015-11-2"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c73 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c74 -> "15-11-23"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c74) -> "15-11-23"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c73,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x5 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x6
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c74 -> "15-11-23"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c74 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c75 -> "5-11-23
"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c75) -> "5-11-23
"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c74,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x6 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eec9] mov	ecx, dword ptr [rbx + 0x3c]                               ; ecx = 0x7
[main] [INS] [0000eecc] movsxd	r8, dword ptr [rbx + 0x38]                             ; r8 = 0x0
[main] [INS] [0000eed0] add	qword ptr [rip + 0x238638], 1                             ; store(0x247510,0x1)
[main] [INS] [0000eed8] add	r8, qword ptr [rip + 0x23a4f1]                            ; r8 = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [0000eedf] test	ecx, ecx                                                 ; 0x7 vs 0x7
[main] [INS] [0000eee1] je	0xf030
[main] [INS] [0000eee7] add	qword ptr [rip + 0x238629], 1                             ; store(0x247518,0x1)
[main] [INS] [0000eeef] mov	rdi, qword ptr [rip + 0x23a522]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000eef6] lea	rdx, [rip + 0x2bc2c]                                      ; rdx = 0x3ab29 -> "%.*s"
[main] [INS] [0000eefd] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000ef02] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000ef04] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x6)
[main] [INS] [003843c1] push	rbx                                                      ; push(0x7f000008c5f0) -> ff00000002
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3ab29 -> "%.*s"
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c400 -> 3000000020
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c438,0x7)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c440,0x9000c3a0) -> "(?=a\K)a"
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c448,0x3c03a0) -> 66c3ff5788ff568a
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c418,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c4f0 -> 1
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c400 -> 3000000020
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3ab29 -> "%.*s"
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c400,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c404,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c408,0x7f000008c4f0) -> 1
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c420 -> b229ea0
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c410,0x7f000008c420) -> b229ea0
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c3f0 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x0)
[main] [INS] [002ad398] push	r13                                                      ; push(0x0)
[main] [INS] [002ad39a] push	r12                                                      ; push(0x6)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c400 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008be80 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c3b8,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bf38,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3ab29 vs 0x3ab29
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bf28,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c420 -> b229ea0
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3ab29 -> "%.*s"
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c4f00000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bfb8,0x7f000008c420) -> b229ea0
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bfa8,0x7f000008c4f00000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab29 -> "%.*s"
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb29
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb29 vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x6b72614d2074736574614c00732a2e25
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x6b72614d2074736574614c00732a2e25
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff00000000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x11
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x11 vs 0x11
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab29 -> "%.*s"
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bf30,0x3ab29) -> "%.*s"
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008bf3c,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008bf3c,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bf88,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bf80,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bf20,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3ab29 -> "%.*s"
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3ab29 -> "%.*s"
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c400) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3f0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008be30 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008be48 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3f0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c400 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3ab29 -> "%.*s"
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3ab29 -> "%.*s"
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bfd0 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008beb8,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008bebc,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008beb0,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008bea0,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008bf00,0x7f000008bfd0) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x2e
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3ab2a -> ".*s"
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0xe
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0xe vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x2e
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0xe
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x9
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xd0
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2addb0 -> 438d49017bb60f45
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bfd0 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008bed0,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008bec8,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008bed8,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008bee0,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bef8,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c3b8 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bf28,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bef0,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008bee8,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008bf08,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bf10,0x7f000008c3b8) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bf18,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2addb0)
[main] [INS] [002addb0] movzx	r15d, byte ptr [r11 + 1]                                ; r15d = 0x2a
[main] [INS] [002addb5] lea	rax, [r11 + 1]                                            ; rax = 0x3ab2b -> 736574614c00732a
[main] [INS] [002addb9] cmp	r15b, 0x2a                                                ; 0x2a vs 0x2a
[main] [INS] [002addbd] je	0x2af57a
[main] [INS] [002af57a] movzx	eax, byte ptr [r11 + 2]                                 ; eax = 0x73
[main] [INS] [002af57f] lea	rsi, [r11 + 2]                                            ; rsi = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af583] sub	eax, 0x30                                                 ; eax = 0x43
[main] [INS] [002af586] cmp	eax, 9                                                    ; 0x43 vs 0x9
[main] [INS] [002af589] jbe	0x2afd17
[main] [INS] [002af58f] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002af593] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002af596] ja	0x2b0333
[main] [INS] [002af59c] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002af59e] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c438 -> 7
[main] [INS] [002af5a3] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002af5a6] mov	dword ptr [r12], eax                                      ; store(0x7f000008c400,0x20)
[main] [INS] [002af5aa] mov	ecx, dword ptr [rdx]                                      ; ecx = 0x7
[main] [INS] [002af5ac] test	ecx, ecx                                                 ; 0x7 vs 0x7
[main] [INS] [002af5ae] js	0x2afb93
[main] [INS] [002af5b4] mov	r11, rsi                                                  ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af5b7] cmp	r10d, 0x3c8                                               ; 0x0 vs 0x3c8
[main] [INS] [002af5be] mov	eax, 0x3c8                                                ; eax = 0x3c8
[main] [INS] [002af5c3] cmovge	eax, r10d                                              ; eax = 0x3c8
[main] [INS] [002af5c7] cmp	eax, ecx                                                  ; 0x3c8 vs 0x7
[main] [INS] [002af5c9] jge	0x2b0295
[main] [INS] [002b0295] movzx	r15d, byte ptr [r11]                                    ; r15d = 0x73
[main] [INS] [002b0299] jmp	0x2adddd                                                  ; jmp(0x2adddd)
[main] [INS] [002adddd] lea	eax, [r15 - 0x20]                                         ; eax = 0x53
[main] [INS] [002adde1] cmp	al, 0x5a                                                  ; 0x53 vs 0x5a
[main] [INS] [002adde3] ja	0x2adce0
[main] [INS] [002adde9] movsx	eax, r15b                                               ; eax = 0x73
[main] [INS] [002added] lea	rdx, [rip + 0x151cec]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002addf4] lea	rsi, [rip - 0x11b]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002addfb] sub	eax, 0x20                                                 ; eax = 0x53
[main] [INS] [002addfe] cdqe	
[main] [INS] [002ade00] movzx	edx, byte ptr [rdx + rax]                               ; edx = 0x15
[main] [INS] [002ade04] lea	rax, [rip + 0x151b55]                                     ; rax = 0x3ff960 -> 0
[main] [INS] [002ade0b] movsxd	rax, dword ptr [rax + rdx*4]                           ; rax = 0xfffffffffffffd40
[main] [INS] [002ade0f] add	rax, rsi                                                  ; rax = 0x2ada20 -> f2ff88324048b41
[main] [INS] [002ade12] jmp	rax                                                       ; jmp(0x2ada20)
[main] [INS] [002ada20] mov	eax, dword ptr [r12]                                      ; eax = 0x20
[main] [INS] [002ada24] cmp	eax, 0x2f                                                 ; 0x20 vs 0x2f
[main] [INS] [002ada27] ja	0x2b056d
[main] [INS] [002ada2d] mov	edx, eax                                                  ; edx = 0x20
[main] [INS] [002ada2f] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c440 -> 9000c3a0
[main] [INS] [002ada34] add	eax, 8                                                    ; eax = 0x28
[main] [INS] [002ada37] mov	dword ptr [r12], eax                                      ; store(0x7f000008c400,0x28)
[main] [INS] [002ada3b] mov	r8, qword ptr [rdx]                                       ; r8 = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [002ada3e] test	r8, r8                                                   ; 0x9000c3a0 vs 0x9000c3a0
[main] [INS] [002ada41] je	0x2af0ae
[main] [INS] [002ada47] cmp	r15b, 0x53                                                ; 0x73 vs 0x53
[main] [INS] [002ada4b] je	0x2af1af
[main] [INS] [002ada51] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002ada54] jne	0x2af1af
[main] [INS] [002ada5a] cmp	ecx, -1                                                   ; 0x7 vs 0x-1
[main] [INS] [002ada5d] je	0x2af4b6
[main] [INS] [002ada63] movsxd	rsi, ecx                                               ; rsi = 0x7
[main] [INS] [002ada66] mov	rdi, r8                                                   ; rdi = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [002ada69] mov	dword ptr [rbp - 0x500], r10d                             ; store(0x7f000008bef0,0x0)
[main] [INS] [002ada70] mov	qword ptr [rbp - 0x4e8], r11                              ; store(0x7f000008bf08,0x3ab2c) -> 74736574614c0073
[main] [INS] [002ada77] mov	qword ptr [rbp - 0x4e0], r8                               ; store(0x7f000008bf10,0x9000c3a0) -> "(?=a\K)a"
[main] [INS] [002ada7e] call	0x273000                                                 ; call(0x273000)
[main] [INS] [00273000] jmp	qword ptr [rip + 0x3ca022]                                ; jmp(0x3037c0)
[main] [INS] [003037c0] test	rsi, rsi                                                 ; 0x7 vs 0x7
[main] [INS] [003037c3] jne	0x3037c9
[main] [INS] [003037c9] add	rsi, rdi                                                  ; rsi = 0x9000c3a7 -> 6261
[main] [INS] [003037cc] mov	r10, rsi                                                  ; r10 = 0x9000c3a7 -> 6261
[main] [INS] [003037cf] and	r10, 0xffffffffffffffc0                                   ; r10 = 0x9000c380 -> 0
[main] [INS] [003037d3] mov	r11, rsi                                                  ; r11 = 0x9000c3a7 -> 6261
[main] [INS] [003037d6] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [003037da] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [003037de] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [003037e2] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [003037e6] mov	rax, rdi                                                  ; rax = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [003037e9] mov	rcx, rdi                                                  ; rcx = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [003037ec] and	rcx, 0xfff                                                ; rcx = 0x3a0
[main] [INS] [003037f3] cmp	rcx, 0xfcf                                                ; 0x3a0 vs 0xfcf
[main] [INS] [003037fa] ja	0x303870
[main] [INS] [003037fc] and	rax, 0xfffffffffffffff0                                   ; rax = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [00303800] pcmpeqb	xmm0, xmmword ptr [rax]                               ; xmm0 = 0xffffffffffffff000000000000000000
[main] [INS] [00303804] pcmpeqb	xmm1, xmmword ptr [rax + 0x10]                        ; xmm1 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00303809] pcmpeqb	xmm2, xmmword ptr [rax + 0x20]                        ; xmm2 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [0030380e] pcmpeqb	xmm3, xmmword ptr [rax + 0x30]                        ; xmm3 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00303813] pmovmskb	esi, xmm0                                            ; esi = 0xfe00 -> 100239718058348
[main] [INS] [00303817] pmovmskb	edx, xmm1                                            ; edx = 0xffff -> 1246c8d41010023
[main] [INS] [0030381b] pmovmskb	r8d, xmm2                                            ; r8d = 0xffff -> 1246c8d41010023
[main] [INS] [00303820] pmovmskb	ecx, xmm3                                            ; ecx = 0xffff -> 1246c8d41010023
[main] [INS] [00303824] shl	rdx, 0x10                                                 ; rdx = 0xffff0000
[main] [INS] [00303828] shl	rcx, 0x10                                                 ; rcx = 0xffff0000
[main] [INS] [0030382c] or	rdx, rsi                                                   ; rdx = 0xfffffe00
[main] [INS] [0030382f] or	rcx, r8                                                    ; rcx = 0xffffffff
[main] [INS] [00303832] shl	rcx, 0x20                                                 ; rcx = 0xffffffff00000000
[main] [INS] [00303836] or	rdx, rcx                                                   ; rdx = 0xfffffffffffffe00
[main] [INS] [00303839] mov	rcx, rdi                                                  ; rcx = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [0030383c] xor	rcx, rax                                                  ; rcx = 0x0
[main] [INS] [0030383f] mov	rsi, r11                                                  ; rsi = 0x9000c3a7 -> 6261
[main] [INS] [00303842] sub	rsi, rax                                                  ; rsi = 0x7
[main] [INS] [00303845] and	rax, 0xffffffffffffffc0                                   ; rax = 0x9000c380 -> 0
[main] [INS] [00303849] test	rsi, -0x40                                               ; 0x7 vs 0x-40
[main] [INS] [00303850] je	0x3038d3
[main] [INS] [003038d3] bts	rdx, rsi                                                  ; rdx = 0xfffffffffffffe80
[main] [INS] [003038d7] sar	rdx, cl                                                   ; rdx = 0xfffffffffffffe80
[main] [INS] [003038da] test	rdx, rdx                                                 ; 0xfffffffffffffe80 vs 0xfffffffffffffe80
[main] [INS] [003038dd] je	0x3038f0
[main] [INS] [003038df] bsf	rax, rdx                                                  ; rax = 0x7
[main] [INS] [003038e3] ret	
[main] [INS] [002ada83] mov	r8, qword ptr [rbp - 0x4e0]                               ; r8 = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [002ada8a] mov	r11, qword ptr [rbp - 0x4e8]                              ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002ada91] mov	r9, rax                                                   ; r9 = 0x7
[main] [INS] [002ada94] mov	r10d, dword ptr [rbp - 0x500]                             ; r10d = 0x0
[main] [INS] [002ada9b] mov	ecx, eax                                                  ; ecx = 0x7
[main] [INS] [002ada9d] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bef8,0x0)
[main] [INS] [002adaa7] sub	r10d, ecx                                                 ; r10d = 0xfffffff9
[main] [INS] [002adaaa] mov	dword ptr [rbp - 0x4e8], r10d                             ; store(0x7f000008bf08,0xfffffff9)
[main] [INS] [002adab1] js	0x2aefa0
[main] [INS] [002aefa0] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [002aefa3] js	0x2b053b
[main] [INS] [002aefa9] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002aefb0] lea	rdi, [rip + 0x38a7a9]                                     ; rdi = 0x639760 -> 0
[main] [INS] [002aefb7] mov	rax, r15                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002aefba] sub	rax, rdi                                                  ; rax = 0xb40
[main] [INS] [002aefbd] cmp	qword ptr [rbp - 0x4d0], rax                              ; 0xd68 vs 0xb40
[main] [INS] [002aefc4] jbe	0x2afdc8
[main] [INS] [002aefca] mov	rdx, r9                                                   ; rdx = 0x7
[main] [INS] [002aefcd] mov	qword ptr [rbp - 0x4c8], r9                               ; store(0x7f000008bf28,0x7)
[main] [INS] [002aefd4] mov	dword ptr [rbp - 0x4e8], ecx                              ; store(0x7f000008bf08,0x7)
[main] [INS] [002aefda] mov	qword ptr [rbp - 0x4e0], r11                              ; store(0x7f000008bf10,0x3ab2c) -> 74736574614c0073
[main] [INS] [002aefe1] mov	rsi, r8                                                   ; rsi = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [002aefe4] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002aefe7] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c400) -> 3000000028
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3f0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008be30 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x7 vs 0x7
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x7
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c75 -> "5-11-23
"
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c75
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfeb
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfeb vs 0xfeb
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x7 vs 0xfeb
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x7
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x7
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x7
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x9000c3a7 -> 6261
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c75 -> "5-11-23
"
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c7c -> "

/(?=a\"
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x7 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb2080
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x9000c3a7 -> 6261
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c7c -> "

/(?=a\"
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c0f40 -> 5789fc4e8bf9568b
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c0f40)
[main] [INS] [003c0f40] mov	edx, dword ptr [rsi - 7]                                  ; edx = 0x613d3f28
[main] [INS] [003c0f43] mov	ecx, dword ptr [rsi - 4]                                  ; ecx = 0x294b5c61
[main] [INS] [003c0f46] mov	dword ptr [rdi - 7], edx                                  ; store(0x90018c75,0x613d3f28)
[main] [INS] [003c0f49] mov	dword ptr [rdi - 4], ecx                                  ; store(0x90018c78,0x294b5c61)
[main] [INS] [003c0f4c] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c7c) -> "

/(?=a\"
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x7
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x7
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008be48 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x7
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3f0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c400 -> 3000000028
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002aefeb] mov	r9, qword ptr [rbp - 0x4c8]                               ; r9 = 0x7
[main] [INS] [002aeff2] cmp	r9, rax                                                   ; 0x7 vs 0x7
[main] [INS] [002aeff5] jne	0x2add00
[main] [INS] [002aeffb] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002af000] mov	r11, qword ptr [rbp - 0x4e0]                              ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af007] mov	ecx, dword ptr [rbp - 0x4e8]                              ; ecx = 0x7
[main] [INS] [002af00d] sub	eax, r13d                                                 ; eax = 0x7fffffff
[main] [INS] [002af010] cdqe	
[main] [INS] [002af012] cmp	r9, rax                                                   ; 0x7 vs 0x7fffffff
[main] [INS] [002af015] ja	0x2aec30
[main] [INS] [002af01b] add	r13d, ecx                                                 ; r13d = 0x7
[main] [INS] [002af01e] jmp	0x2ad930                                                  ; jmp(0x2ad930)
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008bebc,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bf28,0x3ab2d) -> 2074736574614c00
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab2d -> 2074736574614c00
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb2d
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb2d vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x753c203a6b72614d2074736574614c00
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x753c203a6b72614d2074736574614c00
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0x0
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab2d -> 2074736574614c00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x7 vs 0x7
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bf28,0x3ab2d) -> 2074736574614c00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x0
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x0
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x0)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x7)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c400) -> 3000000028
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c3f0) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008be30 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008be48 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c3f0 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c400 -> 3000000028
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x7
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffff8
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x0 vs 0x7ffffff8
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x7
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x7
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c3c8 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x6
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x0
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x7
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x7
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c4d8 -> 7f000008c5f0
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x6
[main] [INS] [0038452e] ret	
[main] [INS] [0000ef09] mov	rsi, qword ptr [rip + 0x23a508]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ef10] mov	edi, 0xa                                                  ; edi = 0xa
[main] [INS] [0000ef15] add	qword ptr [rip + 0x238603], 1                             ; store(0x247520,0x1)
[main] [INS] [0000ef1d] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0xa
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0xa
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c7c -> "

/(?=a\"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c7c vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c7d -> "
/(?=a\K"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c7d) -> "
/(?=a\K"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c7c,0xa)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0xa
[main] [INS] [002d980c] ret	
[main] [INS] [0000ef22] add	qword ptr [rip + 0x2385fe], 1                             ; store(0x247528,0x1)
[main] [INS] [0000ef2a] mov	rax, qword ptr [rbx + 0x40]                               ; rax = 0x0
[main] [INS] [0000ef2e] cmp	rax, qword ptr [rip + 0x23a4ab]                           ; 0x0 vs 0x0
[main] [INS] [0000ef35] mov	dword ptr [rip + 0x23a4bd], 0                             ; store(0x2493fc,0x0)
[main] [INS] [0000ef3f] je	0xefc0
[main] [INS] [0000efc0] mov	rax, qword ptr [rbx + 0x30]                               ; rax = 0x0
[main] [INS] [0000efc4] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [0000efc7] je	0xefdb
[main] [INS] [0000efdb] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000efdd] mov	eax, dword ptr [rip + 0x23a421]                           ; eax = 0xffffffff
[main] [INS] [0000efe3] cmp	dword ptr [rbx + 4], eax                                  ; 0xff vs 0xffffffff
[main] [INS] [0000efe6] je	0xf040
[main] [INS] [0000efe8] add	rsp, 8                                                    ; rsp = 0x7f000008c4f8 -> 76
[main] [INS] [0000efec] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000efee] pop	rbx                                                       ; rbx = 0x76
[main] [INS] [0000efef] pop	rbp                                                       ; rbp = 0x76
[main] [INS] [0000eff0] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 2
[main] [INS] [0000eff2] pop	r13                                                       ; r13 = 0x9003a043 -> 7d07000000ff76
[main] [INS] [0000eff4] pop	r14                                                       ; r14 = 0x9004208e -> 6261
[main] [INS] [0000eff6] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [0000eff8] ret	
[main] [INS] [00029f7e] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f80] mov	r9d, eax                                                  ; r9d = 0x0
[main] [INS] [00029f83] jg	0x2f6d4
[main] [INS] [00029f89] add	qword ptr [rip + 0x22419f], 1                             ; store(0x24e130,0x1)
[main] [INS] [00029f91] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f93] jne	0x2f6d7
[main] [INS] [00029f99] add	qword ptr [rip + 0x224197], 1                             ; store(0x24e138,0x1)
[main] [INS] [00029fa1] movzx	eax, byte ptr [r13 + 6]                                 ; eax = 0x7d
[main] [INS] [00029fa6] add	r13, 6                                                    ; r13 = 0x9003a049 -> 300ff7618007d
[main] [INS] [00029faa] add	qword ptr [rip + 0x224196], 1                             ; store(0x24e148,0x1)
[main] [INS] [00029fb2] jmp	0x28b50                                                   ; jmp(0x28b50)
[main] [INS] [00028b50] add	qword ptr [rip + 0x225008], 1                             ; store(0x24db60,0x1)
[main] [INS] [00028b58] jmp	0x288b7                                                   ; jmp(0x288b7)
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x7d
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x7d vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x7d
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x7d
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffea070
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x29980 -> d824ac8b41
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x29980)
[main] [INS] [00029980] mov	ebp, dword ptr [r12 + 0xd8]                               ; ebp = 0x0
[main] [INS] [00029988] mov	rbx, qword ptr [r12 + 0x100]                              ; rbx = 0x0
[main] [INS] [00029990] cmp	ebp, 1                                                    ; 0x0 vs 0x1
[main] [INS] [00029993] je	0x2dbe8
[main] [INS] [00029999] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0002999b] add	qword ptr [rip + 0x2246a5], 1                             ; store(0x24e048,0x1)
[main] [INS] [000299a3] mov	dword ptr [rsp + 0x10], ebp                               ; store(0x7f000008c540,0x0)
[main] [INS] [000299a7] mov	rax, r12                                                  ; rax = 0x7f000008c7c0 -> 2
[main] [INS] [000299aa] mov	ebp, dword ptr [rsp + 0x68]                               ; ebp = 0x2
[main] [INS] [000299ae] mov	r12, rbx                                                  ; r12 = 0x0
[main] [INS] [000299b1] mov	rbx, rax                                                  ; rbx = 0x7f000008c7c0 -> 2
[main] [INS] [000299b4] sub	rsp, 8                                                    ; rsp = 0x7f000008c528 -> 29f7e
[main] [INS] [000299b8] lea	rsi, [r13 + 3]                                            ; rsi = 0x9003a04c -> 611d01000300ff76
[main] [INS] [000299bc] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [000299bf] mov	eax, dword ptr [rsp + 0x1d8]                              ; eax = 0x0
[main] [INS] [000299c6] mov	r8, rbx                                                   ; r8 = 0x7f000008c7c0 -> 2
[main] [INS] [000299c9] mov	ecx, ebp                                                  ; ecx = 0x2
[main] [INS] [000299cb] mov	rdi, r14                                                  ; rdi = 0x9004208e -> 6261
[main] [INS] [000299ce] add	eax, 1                                                    ; eax = 0x1
[main] [INS] [000299d1] push	rax                                                      ; push(0x1)
[main] [INS] [000299d2] mov	rdx, qword ptr [rsp + 0x18]                               ; rdx = 0x9004208e -> 6261
[main] [INS] [000299d7] call	0x28820                                                  ; call(0x28820)
[main] [INS] [00028820] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [00028822] push	r14                                                      ; push(0x9004208e) -> 6261
[main] [INS] [00028824] push	r13                                                      ; push(0x9003a049) -> 300ff7618007d
[main] [INS] [00028826] push	r12                                                      ; push(0x0)
[main] [INS] [00028828] push	rbp                                                      ; push(0x2)
[main] [INS] [00028829] push	rbx                                                      ; push(0x7f000008c7c0) -> 2
[main] [INS] [0002882a] sub	rsp, 0x198                                                ; rsp = 0x7f000008c350 -> 3ae75
[main] [INS] [00028831] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [0002883a] mov	qword ptr [rsp + 0x188], rax                              ; store(0x7f000008c4d8,0x59424d4f444e4100)
[main] [INS] [00028842] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [00028844] test	rsi, rsi                                                 ; 0x9003a04c vs 0x9003a04c
[main] [INS] [00028847] mov	qword ptr [rsp + 8], rdx                                  ; store(0x7f000008c358,0x9004208e) -> 6261
[main] [INS] [0002884c] mov	dword ptr [rsp + 0x68], ecx                               ; store(0x7f000008c3b8,0x2)
[main] [INS] [00028850] mov	qword ptr [rsp], r9                                       ; store(0x7f000008c350,0x0)
[main] [INS] [00028854] je	0x28910
[main] [INS] [0002885a] mov	rax, qword ptr [r8]                                       ; rax = 0x2
[main] [INS] [0002885d] add	qword ptr [rip + 0x2252bb], 1                             ; store(0x24db20,0x1)
[main] [INS] [00028865] cmp	qword ptr [r8 + 8], rax                                   ; 0x989680 vs 0x2
[main] [INS] [00028869] lea	rdx, [rax + 1]                                            ; rdx = 0x3
[main] [INS] [0002886d] mov	qword ptr [r8], rdx                                       ; store(0x7f000008c7c0,0x3)
[main] [INS] [00028870] jbe	0x2d2de
[main] [INS] [00028876] mov	eax, dword ptr [rsp + 0x1d0]                              ; eax = 0x1
[main] [INS] [0002887d] add	qword ptr [rip + 0x2252c3], 1                             ; store(0x24db48,0x1)
[main] [INS] [00028885] cmp	qword ptr [r8 + 0x10], rax                                ; 0x989680 vs 0x1
[main] [INS] [00028889] jbe	0x2d44d
[main] [INS] [0002888f] lea	r15, [rip + 0x1707a]                                      ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [00028896] mov	r12, r8                                                   ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [00028899] mov	r13, rsi                                                  ; r13 = 0x9003a04c -> 611d01000300ff76
[main] [INS] [0002889c] mov	r14, rdi                                                  ; r14 = 0x9004208e -> 6261
[main] [INS] [0002889f] cmp	dword ptr [r12 + 0xd8], 2                                 ; 0x0 vs 0x2
[main] [INS] [000288a8] je	0x288d0
[main] [INS] [000288aa] add	qword ptr [rip + 0x2252a6], 1                             ; store(0x24db58,0x1)
[main] [INS] [000288b2] movzx	eax, byte ptr [r13]                                     ; eax = 0x76
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x76
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x76
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffea578
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x29e88 -> 48002262e9158b48
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x29e88)
[main] [INS] [00029e88] mov	rdx, qword ptr [rip + 0x2262e9]                           ; rdx = 0xeb80 -> "AWAVAUAT"
[main] [INS] [00029e8f] test	rdx, rdx                                                 ; 0xeb80 vs 0xeb80
[main] [INS] [00029e92] je	0x29fa1
[main] [INS] [00029e98] mov	dword ptr [rsp + 0xc0], 2                                 ; store(0x7f000008c410,0x2)
[main] [INS] [00029ea3] movzx	eax, byte ptr [r13 + 1]                                 ; eax = 0xff
[main] [INS] [00029ea8] mov	rdi, r14                                                  ; rdi = 0x9004208e -> 6261
[main] [INS] [00029eab] mov	rcx, qword ptr [r12 + 0xa8]                               ; rcx = 0x90042090 -> 0
[main] [INS] [00029eb3] add	qword ptr [rip + 0x224265], 1                             ; store(0x24e120,0x1)
[main] [INS] [00029ebb] mov	dword ptr [rsp + 0xc4], eax                               ; store(0x7f000008c414,0xff)
[main] [INS] [00029ec2] mov	rax, qword ptr [r12 + 0x18]                               ; rax = 0x90018700 -> ffffffffffffffff
[main] [INS] [00029ec7] mov	qword ptr [rsp + 0xc8], rax                               ; store(0x7f000008c418,0x90018700) -> ffffffffffffffff
[main] [INS] [00029ecf] mov	rax, qword ptr [r12 + 0xa0]                               ; rax = 0x9004208e -> 6261
[main] [INS] [00029ed7] sub	rcx, rax                                                  ; rcx = 0x2
[main] [INS] [00029eda] sub	rdi, rax                                                  ; rdi = 0x0
[main] [INS] [00029edd] mov	qword ptr [rsp + 0xd0], rax                               ; store(0x7f000008c420,0x9004208e) -> 6261
[main] [INS] [00029ee5] mov	dword ptr [rsp + 0xd8], ecx                               ; store(0x7f000008c428,0x2)
[main] [INS] [00029eec] mov	rcx, qword ptr [rsp + 8]                                  ; rcx = 0x9004208e -> 6261
[main] [INS] [00029ef1] mov	dword ptr [rsp + 0xe0], edi                               ; store(0x7f000008c430,0x0)
[main] [INS] [00029ef8] mov	edi, dword ptr [rsp + 0x68]                               ; edi = 0x2
[main] [INS] [00029efc] sub	rcx, rax                                                  ; rcx = 0x0
[main] [INS] [00029eff] mov	dword ptr [rsp + 0xdc], ecx                               ; store(0x7f000008c42c,0x0)
[main] [INS] [00029f06] movzx	eax, word ptr [r13 + 2]                                 ; eax = 0x300
[main] [INS] [00029f0b] rol	ax, 8                                                     ; ax = 0x3
[main] [INS] [00029f0f] movzx	eax, ax                                                 ; eax = 0x3
[main] [INS] [00029f12] mov	dword ptr [rsp + 0xf8], eax                               ; store(0x7f000008c448,0x3)
[main] [INS] [00029f19] movzx	eax, word ptr [r13 + 4]                                 ; eax = 0x100
[main] [INS] [00029f1e] rol	ax, 8                                                     ; ax = 0x1
[main] [INS] [00029f22] movzx	eax, ax                                                 ; eax = 0x1
[main] [INS] [00029f25] mov	dword ptr [rsp + 0xfc], eax                               ; store(0x7f000008c44c,0x1)
[main] [INS] [00029f2c] mov	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f2e] shr	eax, 0x1f                                                 ; eax = 0x0
[main] [INS] [00029f31] add	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f33] sar	eax, 1                                                    ; eax = 0x1
[main] [INS] [00029f35] mov	dword ptr [rsp + 0xe4], eax                               ; store(0x7f000008c434,0x1)
[main] [INS] [00029f3c] movzx	eax, word ptr [r12 + 0xd0]                              ; eax = 0x0
[main] [INS] [00029f45] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f47] je	0x2dbd0
[main] [INS] [0002dbd0] mov	dword ptr [rsp + 0xe8], 0xffffffff                        ; store(0x7f000008c438,0xffffffff)
[main] [INS] [0002dbdb] add	qword ptr [rip + 0x220545], 1                             ; store(0x24e128,0x1)
[main] [INS] [0002dbe3] jmp	0x29f54                                                   ; jmp(0x29f54)
[main] [INS] [00029f54] mov	rax, qword ptr [r12 + 0xf8]                               ; rax = 0x0
[main] [INS] [00029f5c] lea	rdi, [rsp + 0xc0]                                         ; rdi = 0x7f000008c410 -> ff00000002
[main] [INS] [00029f64] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008c440,0x0)
[main] [INS] [00029f6c] mov	rax, qword ptr [r12 + 0x108]                              ; rax = 0x0
[main] [INS] [00029f74] mov	qword ptr [rsp + 0x100], rax                              ; store(0x7f000008c450,0x0)
[main] [INS] [00029f7c] call	rdx                                                      ; call(0xeb80)
[main] [INS] [0000eb80] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [0000eb82] push	r14                                                      ; push(0x9004208e) -> 6261
[main] [INS] [0000eb84] push	r13                                                      ; push(0x9003a04c) -> 611d01000300ff76
[main] [INS] [0000eb86] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb88] push	rbp                                                      ; push(0x76)
[main] [INS] [0000eb89] push	rbx                                                      ; push(0x76)
[main] [INS] [0000eb8a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb8c] mov	rbx, rdi                                                  ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb8f] sub	rsp, 8                                                    ; rsp = 0x7f000008c310 -> 0
[main] [INS] [0000eb93] mov	eax, dword ptr [rip + 0x23a873]                           ; eax = 0x0
[main] [INS] [0000eb99] add	qword ptr [rip + 0x23885f], 1                             ; store(0x247400,0x1)
[main] [INS] [0000eba1] mov	edx, eax                                                  ; edx = 0x0
[main] [INS] [0000eba3] or	edx, dword ptr [rip + 0x23a853]                            ; edx = 0x0
[main] [INS] [0000eba9] je	0xed06
[main] [INS] [0000ed06] mov	esi, dword ptr [rbx + 0x1c]                               ; esi = 0x0
[main] [INS] [0000ed09] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed0c] mov	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed10] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a04c) -> 611d01000300ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb78] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb7a] jmp	0xeb5f                                                    ; jmp(0xeb5f)
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x9003a04c -> 611d01000300ff76
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed15] movsxd	rdi, dword ptr [rbx + 0x1c]                            ; rdi = 0x0
[main] [INS] [0000ed19] mov	esi, dword ptr [rbx + 0x20]                               ; esi = 0x0
[main] [INS] [0000ed1c] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed1f] add	qword ptr [rip + 0x238741], 1                             ; store(0x247468,0x1)
[main] [INS] [0000ed27] mov	r14d, eax                                                 ; r14d = 0x0
[main] [INS] [0000ed2a] sub	esi, edi                                                  ; esi = 0x0
[main] [INS] [0000ed2c] add	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed30] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a04c) -> 611d01000300ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb78] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb7a] jmp	0xeb5f                                                    ; jmp(0xeb5f)
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x9003a04c -> 611d01000300ff76
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed35] mov	esi, dword ptr [rbx + 0x18]                               ; esi = 0x2
[main] [INS] [0000ed38] mov	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed3c] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0000ed3e] add	qword ptr [rip + 0x23872a], 1                             ; store(0x247470,0x1)
[main] [INS] [0000ed46] mov	r13d, eax                                                 ; r13d = 0x0
[main] [INS] [0000ed49] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x0)
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x1
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x90042090 -> 0
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x61
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x61
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x41
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x41 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x9004208f -> 62
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x9004208f
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x90042090 -> 0
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x62
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x1)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x90042090) -> 0
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x62
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x42
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x42 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x90042090 -> 0
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x2
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x90042090
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x2
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x0
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed4e] movsxd	rdi, dword ptr [rbx + 0x20]                            ; rdi = 0x0
[main] [INS] [0000ed52] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed55] mov	r12d, eax                                                 ; r12d = 0x2
[main] [INS] [0000ed58] mov	esi, dword ptr [rbx + 0x18]                               ; esi = 0x2
[main] [INS] [0000ed5b] add	qword ptr [rip + 0x238715], 1                             ; store(0x247478,0x1)
[main] [INS] [0000ed63] sub	esi, edi                                                  ; esi = 0x2
[main] [INS] [0000ed65] add	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed69] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x0)
[main] [INS] [0000eb02] push	r12                                                      ; push(0x2)
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x1
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x90042090 -> 0
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x61
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x61
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x41
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x41 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x9004208f -> 62
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x9004208f
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x90042090 -> 0
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x62
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x1)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x90042090) -> 0
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x62
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x42
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x42 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x90042090 -> 0
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x2
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x90042090
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x2
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x2
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x0
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed6e] add	qword ptr [rip + 0x23870a], 1                             ; store(0x247480,0x1)
[main] [INS] [0000ed76] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000ed79] je	0xed90
[main] [INS] [0000ed90] mov	ecx, dword ptr [rbx + 4]                                  ; ecx = 0xff
[main] [INS] [0000ed93] mov	rdi, qword ptr [rip + 0x23a67e]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000ed9a] cmp	ecx, 0xff                                                 ; 0xff vs 0xff
[main] [INS] [0000eda0] je	0xf0d8
[main] [INS] [0000f0d8] mov	ecx, dword ptr [rbx + 0x38]                               ; ecx = 0x3
[main] [INS] [0000f0db] lea	rdx, [rip + 0x2ba36]                                      ; rdx = 0x3ab18 -> "%+3d "
[main] [INS] [0000f0e2] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000f0e4] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000f0e9] add	qword ptr [rip + 0x23839f], 1                             ; store(0x247490,0x1)
[main] [INS] [0000f0f1] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x0)
[main] [INS] [003843c1] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3ab18 -> "%+3d "
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c220 -> d68
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c258,0x3)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c260,0x7f000008c7c0) -> 3
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c268,0x0)
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c238,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c310 -> 0
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c220 -> d68
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3ab18 -> "%+3d "
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c220,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c224,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c228,0x7f000008c310) -> 0
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c240 -> d
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c230,0x7f000008c240) -> d
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x0)
[main] [INS] [002ad398] push	r13                                                      ; push(0x0)
[main] [INS] [002ad39a] push	r12                                                      ; push(0x2)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008bca0 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c1d8,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bd58,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3ab18 vs 0x3ab18
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c240 -> d
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3ab18 -> "%+3d "
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c3100000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bdd8,0x7f000008c240) -> d
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bdc8,0x7f000008c3100000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab18 -> "%+3d "
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb18
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb18 vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x2064332500202020200a002064332b25
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x2064332500202020200a002064332b25
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff0000000000000000000000ff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff0000000000ff0000000000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xffff0000000000ff00000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1821 -> 0
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1821 vs 0x1821
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab18 -> "%+3d "
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bd50,0x3ab18) -> "%+3d "
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bda8,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bda0,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bd40,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3ab18 -> "%+3d "
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3ab18 -> "%+3d "
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3ab18 -> "%+3d "
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3ab18 -> "%+3d "
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bdf0 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008bcd8,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008bcdc,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008bcd0,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008bcc0,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008bd20,0x7f000008bdf0) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x2b
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3ab19 -> "+3d "
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0xb
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0xb vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x2b
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0xb
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x2
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0x40
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2add20 -> 538d49017bb60f45
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bdf0 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008bcf0,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008bce8,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008bcf8,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008bd00,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bd18,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bd10,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008bd08,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008bd28,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bd30,0x7f000008c1d8) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bd38,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2add20)
[main] [INS] [002add20] movzx	r15d, byte ptr [r11 + 1]                                ; r15d = 0x33
[main] [INS] [002add25] lea	rdx, [r11 + 1]                                            ; rdx = 0x3ab1a -> "3d "
[main] [INS] [002add29] lea	rax, [rip - 0x50]                                         ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002add30] lea	esi, [r15 - 0x20]                                         ; esi = 0x13
[main] [INS] [002add34] cmp	sil, 0x5a                                                 ; 0x13 vs 0x5a
[main] [INS] [002add38] ja	0x2af35a
[main] [INS] [002add3e] movsx	eax, r15b                                               ; eax = 0x33
[main] [INS] [002add42] lea	rsi, [rip + 0x151d97]                                     ; rsi = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002add49] lea	rdi, [rip - 0x70]                                         ; rdi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002add50] sub	eax, 0x20                                                 ; eax = 0x13
[main] [INS] [002add53] mov	r11, rdx                                                  ; r11 = 0x3ab1a -> "3d "
[main] [INS] [002add56] mov	dword ptr [rbp - 0x4f8], 1                                ; store(0x7f000008bd18,0x1)
[main] [INS] [002add60] cdqe	
[main] [INS] [002add62] movzx	eax, byte ptr [rsi + rax]                               ; eax = 0x8
[main] [INS] [002add66] lea	rsi, [rip + 0x151cf3]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002add6d] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xb60
[main] [INS] [002add71] add	rax, rdi                                                  ; rax = 0x2ae840 -> ffffffba3bb60f45
[main] [INS] [002add74] jmp	rax                                                       ; jmp(0x2ae840)
[main] [INS] [002ae840] movzx	r15d, byte ptr [r11]                                    ; r15d = 0x33
[main] [INS] [002ae844] mov	edx, 0x7fffffff                                           ; edx = 0x7fffffff
[main] [INS] [002ae849] lea	r10d, [r15 - 0x30]                                        ; r10d = 0x3
[main] [INS] [002ae84d] movzx	eax, byte ptr [r11 + 1]                                 ; eax = 0x64
[main] [INS] [002ae852] lea	rsi, [r11 + 1]                                            ; rsi = 0x3ab1b -> 202020200a002064
[main] [INS] [002ae856] mov	r15d, eax                                                 ; r15d = 0x64
[main] [INS] [002ae859] sub	eax, 0x30                                                 ; eax = 0x34
[main] [INS] [002ae85c] cmp	eax, 9                                                    ; 0x34 vs 0x9
[main] [INS] [002ae85f] ja	0x2afe08
[main] [INS] [002afe08] cmp	r10d, 0x7fffffde                                          ; 0x3 vs 0x7fffffde
[main] [INS] [002afe0f] mov	qword ptr [rbp - 0x530], rsi                              ; store(0x7f000008bce0,0x3ab1b) -> 202020200a002064
[main] [INS] [002afe16] ja	0x2aec30
[main] [INS] [002afe1c] cmp	r10d, 0x3c7                                               ; 0x3 vs 0x3c7
[main] [INS] [002afe23] jle	0x2afeab
[main] [INS] [002afeab] cmp	r15b, 0x24                                                ; 0x64 vs 0x24
[main] [INS] [002afeaf] je	0x2af2ab
[main] [INS] [002afeb5] lea	edx, [r15 - 0x20]                                         ; edx = 0x44
[main] [INS] [002afeb9] lea	rax, [rip - 0x21e0]                                       ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002afec0] cmp	dl, 0x5a                                                  ; 0x44 vs 0x5a
[main] [INS] [002afec3] ja	0x2aef90
[main] [INS] [002afec9] movsx	eax, r15b                                               ; eax = 0x64
[main] [INS] [002afecd] lea	rdx, [rip + 0x14fc0c]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002afed4] lea	rdi, [rip - 0x21fb]                                       ; rdi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002afedb] sub	eax, 0x20                                                 ; eax = 0x44
[main] [INS] [002afede] mov	r11, qword ptr [rbp - 0x530]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002afee5] cdqe	
[main] [INS] [002afee7] movzx	edx, byte ptr [rdx + rax]                               ; edx = 0xf
[main] [INS] [002afeeb] lea	rax, [rip + 0x14faee]                                     ; rax = 0x3ff9e0 -> 0
[main] [INS] [002afef2] movsxd	rax, dword ptr [rax + rdx*4]                           ; rax = 0xbd0
[main] [INS] [002afef6] add	rax, rdi                                                  ; rax = 0x2ae8b0 -> b21840fc98545
[main] [INS] [002afef9] jmp	rax                                                       ; jmp(0x2ae8b0)
[main] [INS] [002ae8b0] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002ae8b3] je	0x2af3da
[main] [INS] [002af3da] mov	edx, dword ptr [rbp - 0x528]                              ; edx = 0x0
[main] [INS] [002af3e0] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002af3e4] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002af3e6] je	0x2af8db
[main] [INS] [002af8db] mov	r9d, dword ptr [rbp - 0x518]                              ; r9d = 0x0
[main] [INS] [002af8e2] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002af8e5] jne	0x2b0491
[main] [INS] [002af8eb] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002af8ee] ja	0x2b047e
[main] [INS] [002af8f4] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002af8f6] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c258 -> 3
[main] [INS] [002af8fb] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002af8fe] mov	dword ptr [r12], eax                                      ; store(0x7f000008c220,0x20)
[main] [INS] [002af902] movsxd	rax, dword ptr [rdx]                                   ; rax = 0x3
[main] [INS] [002af905] jmp	0x2ae8d7                                                  ; jmp(0x2ae8d7)
[main] [INS] [002ae8d7] test	rax, rax                                                 ; 0x3 vs 0x3
[main] [INS] [002ae8da] js	0x2af4d8
[main] [INS] [002ae8e0] mov	qword ptr [rbp - 0x518], rax                              ; store(0x7f000008bcf8,0x3)
[main] [INS] [002ae8e7] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ae8ea] mov	dword ptr [rbp - 0x530], 0xa                              ; store(0x7f000008bce0,0xa)
[main] [INS] [002ae8f4] jmp	0x2adeb8                                                  ; jmp(0x2adeb8)
[main] [INS] [002adeb8] test	ecx, ecx                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002adeba] js	0x2aef60
[main] [INS] [002aef60] mov	qword ptr [rbp - 0x548], 1                                ; store(0x7f000008bcc8,0x1)
[main] [INS] [002aef6b] jmp	0x2aded7                                                  ; jmp(0x2aded7)
[main] [INS] [002aded7] mov	edx, dword ptr [rbp - 0x530]                              ; edx = 0xa
[main] [INS] [002adedd] mov	rsi, qword ptr [rbp - 0x4e0]                              ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002adee4] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [002adee6] mov	rdi, qword ptr [rbp - 0x518]                              ; rdi = 0x3
[main] [INS] [002adeed] cmp	r15b, 0x58                                                ; 0x64 vs 0x58
[main] [INS] [002adef1] mov	dword ptr [rbp - 0x568], r10d                             ; store(0x7f000008bca8,0x3)
[main] [INS] [002adef8] sete	cl                                                       ; cl = 0x0
[main] [INS] [002adefb] mov	qword ptr [rbp - 0x560], r11                              ; store(0x7f000008bcb0,0x3ab1b) -> 202020200a002064
[main] [INS] [002adf02] mov	dword ptr [rbp - 0x558], r9d                              ; store(0x7f000008bcb8,0x0)
[main] [INS] [002adf09] call	0x2aa7b0                                                 ; call(0x2aa7b0)
[main] [INS] [002aa7b0] lea	r8, [rip + 0x154de9]                                      ; r8 = 0x3ff5a0 -> "01234567"
[main] [INS] [002aa7b7] lea	rax, [rip + 0x154e22]                                     ; rax = 0x3ff5e0 -> "01234567"
[main] [INS] [002aa7be] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [002aa7c0] cmovne	r8, rax                                                ; r8 = 0x3ff5a0 -> "01234567"
[main] [INS] [002aa7c4] cmp	edx, 0xa                                                  ; 0xa vs 0xa
[main] [INS] [002aa7c7] je	0x2aa840
[main] [INS] [002aa840] movabs	rcx, 0xcccccccccccccccd                                ; rcx = 0xcccccccccccccccd
[main] [INS] [002aa84a] nop	word ptr [rax + rax]
[main] [INS] [002aa850] mov	rax, rdi                                                  ; rax = 0x3
[main] [INS] [002aa853] sub	rsi, 1                                                    ; rsi = 0x7f000008c1d7 -> 424d4f444e410000
[main] [INS] [002aa857] mul	rcx                                                       ; rcx = 0xcccccccccccccccd
[main] [INS] [002aa85a] shr	rdx, 3                                                    ; rdx = 0x0
[main] [INS] [002aa85e] lea	rax, [rdx + rdx*4]                                        ; rax = 0x0
[main] [INS] [002aa862] add	rax, rax                                                  ; rax = 0x0
[main] [INS] [002aa865] sub	rdi, rax                                                  ; rdi = 0x3
[main] [INS] [002aa868] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002aa86b] movzx	eax, byte ptr [r8 + rdi]                                ; eax = 0x33
[main] [INS] [002aa870] mov	rdi, rdx                                                  ; rdi = 0x0
[main] [INS] [002aa873] mov	byte ptr [rsi], al                                        ; store(0x7f000008c1d7,0x33)
[main] [INS] [002aa875] jne	0x2aa850
[main] [INS] [002aa877] mov	rax, rsi                                                  ; rax = 0x7f000008c1d7 -> 424d4f444e410033
[main] [INS] [002aa87a] ret	
[main] [INS] [002adf0e] mov	rcx, qword ptr [rbp - 0x540]                              ; rcx = 0xffffffffffffffff
[main] [INS] [002adf15] mov	qword ptr [rbp - 0x528], rax                              ; store(0x7f000008bce8,0x7f000008c1d7) -> 424d4f444e410033
[main] [INS] [002adf1c] mov	r9d, dword ptr [rbp - 0x558]                              ; r9d = 0x0
[main] [INS] [002adf23] mov	r11, qword ptr [rbp - 0x560]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002adf2a] mov	r10d, dword ptr [rbp - 0x568]                             ; r10d = 0x3
[main] [INS] [002adf31] test	rcx, rcx                                                 ; 0xffffffffffffffff vs 0xffffffffffffffff
[main] [INS] [002adf34] je	0x2adf8e
[main] [INS] [002adf36] mov	edx, dword ptr [rbp - 0x510]                              ; edx = 0x0
[main] [INS] [002adf3c] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002adf3e] je	0x2adf8e
[main] [INS] [002adf8e] cmp	dword ptr [rbp - 0x530], 0xa                              ; 0xa vs 0xa
[main] [INS] [002adf95] jne	0x2adfea
[main] [INS] [002adf97] mov	r8d, dword ptr [rbp - 0x520]                              ; r8d = 0x0
[main] [INS] [002adf9e] test	r8d, r8d                                                 ; 0x0 vs 0x0
[main] [INS] [002adfa1] je	0x2adfea
[main] [INS] [002adfea] mov	rax, qword ptr [rbp - 0x4e0]                              ; rax = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002adff1] sub	rax, qword ptr [rbp - 0x528]                              ; rax = 0x1
[main] [INS] [002adff8] cmp	rax, qword ptr [rbp - 0x548]                              ; 0x1 vs 0x1
[main] [INS] [002adfff] mov	qword ptr [rbp - 0x510], rax                              ; store(0x7f000008bd00,0x1)
[main] [INS] [002ae006] jl	0x2aea90
[main] [INS] [002ae00c] cmp	qword ptr [rbp - 0x518], 0                                ; 0x3 vs 0x0
[main] [INS] [002ae014] je	0x2af090
[main] [INS] [002ae01a] cmp	dword ptr [rbp - 0x530], 8                                ; 0xa vs 0x8
[main] [INS] [002ae021] jne	0x2af0db
[main] [INS] [002af0db] mov	r8, qword ptr [rbp - 0x548]                               ; r8 = 0x1
[main] [INS] [002af0e2] sub	r8, qword ptr [rbp - 0x510]                               ; r8 = 0x0
[main] [INS] [002af0e9] mov	eax, 0                                                    ; eax = 0x0
[main] [INS] [002af0ee] mov	esi, dword ptr [rbp - 0x4c8]                              ; esi = 0x0
[main] [INS] [002af0f4] cmovs	r8, rax                                                 ; r8 = 0x0
[main] [INS] [002af0f8] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [002af0fa] mov	ecx, r8d                                                  ; ecx = 0x0
[main] [INS] [002af0fd] jne	0x2ae080
[main] [INS] [002af103] mov	rdi, qword ptr [rbp - 0x510]                              ; rdi = 0x1
[main] [INS] [002af10a] mov	eax, r10d                                                 ; eax = 0x3
[main] [INS] [002af10d] sub	eax, edi                                                  ; eax = 0x2
[main] [INS] [002af10f] mov	dword ptr [rbp - 0x4c8], edi                              ; store(0x7f000008bd48,0x1)
[main] [INS] [002af115] sub	eax, r8d                                                  ; eax = 0x2
[main] [INS] [002af118] mov	r8d, eax                                                  ; r8d = 0x2
[main] [INS] [002af11b] jmp	0x2aead2                                                  ; jmp(0x2aead2)
[main] [INS] [002aead2] cmp	dword ptr [rbp - 0x530], 0x10                             ; 0xa vs 0x10
[main] [INS] [002aead9] jne	0x2aeaeb
[main] [INS] [002aeaeb] mov	eax, dword ptr [rbp - 0x500]                              ; eax = 0x0
[main] [INS] [002aeaf1] or	eax, dword ptr [rbp - 0x4f8]                               ; eax = 0x1
[main] [INS] [002aeaf7] or	eax, r9d                                                   ; eax = 0x1
[main] [INS] [002aeafa] je	0x2aedf0
[main] [INS] [002aeb00] sub	r8d, 1                                                    ; r8d = 0x1
[main] [INS] [002aeb04] cmp	byte ptr [rbp - 0x4e8], 0x20                              ; 0x20 vs 0x20
[main] [INS] [002aeb0b] je	0x2af028
[main] [INS] [002af028] test	r8d, r8d                                                 ; 0x1 vs 0x1
[main] [INS] [002af02b] jg	0x2af42d
[main] [INS] [002af42d] movsxd	r10, r8d                                               ; r10 = 0x1
[main] [INS] [002af430] mov	esi, 0x20                                                 ; esi = 0x20
[main] [INS] [002af435] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002af438] mov	rdx, r10                                                  ; rdx = 0x1
[main] [INS] [002af43b] mov	qword ptr [rbp - 0x4e0], r10                              ; store(0x7f000008bd30,0x1)
[main] [INS] [002af442] mov	qword ptr [rbp - 0x558], r11                              ; store(0x7f000008bcb8,0x3ab1b) -> 202020200a002064
[main] [INS] [002af449] mov	dword ptr [rbp - 0x548], ecx                              ; store(0x7f000008bcc8,0x0)
[main] [INS] [002af44f] mov	dword ptr [rbp - 0x520], r9d                              ; store(0x7f000008bcf0,0x0)
[main] [INS] [002af456] mov	dword ptr [rbp - 0x4e8], r8d                              ; store(0x7f000008bd28,0x1)
[main] [INS] [002af45d] call	0x2d2260                                                 ; call(0x2d2260)
[main] [INS] [002d2260] push	r15                                                      ; push(0x64)
[main] [INS] [002d2262] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002d2264] lea	r14, [rip + 0x13bdd5]                                     ; r14 = 0x40e040 -> "        "
[main] [INS] [002d226b] push	r13                                                      ; push(0x0)
[main] [INS] [002d226d] push	r12                                                      ; push(0x7f000008c220) -> 3000000020
[main] [INS] [002d226f] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002d2272] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002d2273] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002d2274] mov	rbp, rdi                                                  ; rbp = 0x63e760 -> fbad2884
[main] [INS] [002d2277] sub	rsp, 0x38                                                 ; rsp = 0x7f000008bc30 -> 0
[main] [INS] [002d227b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002d2284] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008bc58,0x59424d4f444e4100)
[main] [INS] [002d2289] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002d228b] cmp	esi, 0x20                                                 ; 0x20 vs 0x20
[main] [INS] [002d228e] je	0x2d22c6
[main] [INS] [002d22c6] cmp	r12d, 0xf                                                 ; 0x1 vs 0xf
[main] [INS] [002d22ca] mov	r15d, r12d                                                ; r15d = 0x1
[main] [INS] [002d22cd] jle	0x2d2340
[main] [INS] [002d2340] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [002d2342] nop	word ptr [rax + rax]
[main] [INS] [002d2348] test	r15d, r15d                                               ; 0x1 vs 0x1
[main] [INS] [002d234b] jle	0x2d2381
[main] [INS] [002d234d] mov	r12, qword ptr [rbp + 0xd8]                               ; r12 = 0x63a2a0 -> 0
[main] [INS] [002d2354] lea	rdx, [rip + 0x367405]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002d235b] lea	rax, [rip + 0x368166]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002d2362] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002d2365] mov	rdi, r12                                                  ; rdi = 0x63a2a0 -> 0
[main] [INS] [002d2368] sub	rdi, rdx                                                  ; rdi = 0xb40
[main] [INS] [002d236b] cmp	rax, rdi                                                  ; 0xd68 vs 0xb40
[main] [INS] [002d236e] jbe	0x2d23a3
[main] [INS] [002d2370] movsxd	rdx, r15d                                              ; rdx = 0x1
[main] [INS] [002d2373] mov	rsi, r14                                                  ; rsi = 0x40e040 -> "        "
[main] [INS] [002d2376] mov	rdi, rbp                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002d2379] call	qword ptr [r12 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x1)
[main] [INS] [002dd932] push	r14                                                      ; push(0x40e040) -> "        "
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x0)
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bbe0 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x40e040 -> "        "
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c7d -> "
/(?=a\K"
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c7d
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfe3
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfe3 vs 0xfe3
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfe3
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x40e040 -> "        "
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x40e041 -> "        "
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c7d -> "
/(?=a\K"
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c7e -> "/(?=a\K)"
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x40e041 -> "        "
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c7e -> "/(?=a\K)"
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x20
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c7d,0x20)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c7e) -> "/(?=a\K)"
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bbf8 -> 0
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x63a2a0 -> 0
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x40e040 -> "        "
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x1
[main] [INS] [002dd9b4] ret	
[main] [INS] [002d237e] add	rbx, rax                                                  ; rbx = 0x1
[main] [INS] [002d2381] mov	rdi, qword ptr [rsp + 0x28]                               ; rdi = 0x59424d4f444e4100
[main] [INS] [002d2386] xor	rdi, qword ptr fs:[0x28]                                  ; rdi = 0x0
[main] [INS] [002d238f] mov	rax, rbx                                                  ; rax = 0x1
[main] [INS] [002d2392] jne	0x2d23aa
[main] [INS] [002d2394] add	rsp, 0x38                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002d2398] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002d2399] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002d239a] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000020
[main] [INS] [002d239c] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002d239e] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002d23a0] pop	r15                                                       ; r15 = 0x64
[main] [INS] [002d23a2] ret	
[main] [INS] [002af462] mov	r10, qword ptr [rbp - 0x4e0]                              ; r10 = 0x1
[main] [INS] [002af469] cmp	r10, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002af46c] jne	0x2add00
[main] [INS] [002af472] cmp	r13d, 0x7ffffffe                                          ; 0x0 vs 0x7ffffffe
[main] [INS] [002af479] mov	r8d, dword ptr [rbp - 0x4e8]                              ; r8d = 0x1
[main] [INS] [002af480] mov	r9d, dword ptr [rbp - 0x520]                              ; r9d = 0x0
[main] [INS] [002af487] mov	ecx, dword ptr [rbp - 0x548]                              ; ecx = 0x0
[main] [INS] [002af48d] mov	r11, qword ptr [rbp - 0x558]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002af494] ja	0x2b04d3
[main] [INS] [002af49a] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002af49f] sub	eax, r13d                                                 ; eax = 0x7fffffff
[main] [INS] [002af4a2] cmp	eax, r8d                                                  ; 0x7fffffff vs 0x1
[main] [INS] [002af4a5] jb	0x2aec30
[main] [INS] [002af4ab] add	r13d, r8d                                                 ; r13d = 0x1
[main] [INS] [002af4ae] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002af4b1] jmp	0x2aeb11                                                  ; jmp(0x2aeb11)
[main] [INS] [002aeb11] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002aeb14] je	0x2aedfd
[main] [INS] [002aedfd] mov	eax, dword ptr [rbp - 0x4f8]                              ; eax = 0x1
[main] [INS] [002aee03] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [002aee05] je	0x2af167
[main] [INS] [002aee0b] mov	rax, qword ptr [r14 + 0x28]                               ; rax = 0x90018c7e -> "/(?=a\K)"
[main] [INS] [002aee0f] cmp	rax, qword ptr [r14 + 0x30]                               ; 0x90018c7e vs 0x90019c60
[main] [INS] [002aee13] jae	0x2b0046
[main] [INS] [002aee19] lea	rdx, [rax + 1]                                            ; rdx = 0x90018c7f -> "(?=a\K)a"
[main] [INS] [002aee1d] mov	qword ptr [r14 + 0x28], rdx                               ; store(0x63e788,0x90018c7f) -> "(?=a\K)a"
[main] [INS] [002aee21] mov	byte ptr [rax], 0x2b                                      ; store(0x90018c7e,0x2b)
[main] [INS] [002aee24] jmp	0x2aeb33                                                  ; jmp(0x2aeb33)
[main] [INS] [002aeb33] cmp	r13d, 0x7fffffff                                          ; 0x1 vs 0x7fffffff
[main] [INS] [002aeb3a] je	0x2add00
[main] [INS] [002aeb40] add	r13d, 1                                                   ; r13d = 0x2
[main] [INS] [002aeb44] cmp	qword ptr [rbp - 0x518], 0                                ; 0x3 vs 0x0
[main] [INS] [002aeb4c] je	0x2aebb1
[main] [INS] [002aeb4e] cmp	dword ptr [rbp - 0x530], 0x10                             ; 0xa vs 0x10
[main] [INS] [002aeb55] jne	0x2aebb1
[main] [INS] [002aebb1] add	ecx, r8d                                                  ; ecx = 0x0
[main] [INS] [002aebb4] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [002aebb6] jg	0x2aef00
[main] [INS] [002aebbc] test	r13d, r13d                                               ; 0x2 vs 0x2
[main] [INS] [002aebbf] js	0x2b0416
[main] [INS] [002aebc5] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002aebcc] lea	rsi, [rip + 0x38ab8d]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002aebd3] mov	rax, r15                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002aebd6] sub	rax, rsi                                                  ; rax = 0xb40
[main] [INS] [002aebd9] cmp	qword ptr [rbp - 0x4d0], rax                              ; 0xd68 vs 0xb40
[main] [INS] [002aebe0] jbe	0x2af960
[main] [INS] [002aebe6] mov	rsi, qword ptr [rbp - 0x528]                              ; rsi = 0x7f000008c1d7 -> 424d4f444e410033
[main] [INS] [002aebed] mov	qword ptr [rbp - 0x4e0], r11                              ; store(0x7f000008bd30,0x3ab1b) -> 202020200a002064
[main] [INS] [002aebf4] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002aebf7] mov	rdx, qword ptr [rbp - 0x510]                              ; rdx = 0x1
[main] [INS] [002aebfe] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x2)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x7f000008c1d7 -> 424d4f444e410033
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c7f -> "(?=a\K)a"
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c7f
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfe1
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfe1 vs 0xfe1
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfe1
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x7f000008c1d7 -> 424d4f444e410033
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c7f -> "(?=a\K)a"
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c80 -> "?=a\K)ab"
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c80 -> "?=a\K)ab"
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x33
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c7f,0x33)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c80) -> "?=a\K)ab"
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x2
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002aec02] mov	rsi, qword ptr [rbp - 0x510]                              ; rsi = 0x1
[main] [INS] [002aec09] cmp	rsi, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002aec0c] jne	0x2add00
[main] [INS] [002aec12] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002aec17] mov	r11, qword ptr [rbp - 0x4e0]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002aec1e] sub	eax, r13d                                                 ; eax = 0x7ffffffd
[main] [INS] [002aec21] cdqe	
[main] [INS] [002aec23] cmp	rax, rsi                                                  ; 0x7ffffffd vs 0x1
[main] [INS] [002aec26] jge	0x2ae21b
[main] [INS] [002ae21b] add	r13d, dword ptr [rbp - 0x4c8]                             ; r13d = 0x3
[main] [INS] [002ae222] jmp	0x2ad930                                                  ; jmp(0x2ad930)
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008bcdc,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bd48,0x3ab1c) -> 202020200a0020
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab1c -> 202020200a0020
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb1c
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb1c vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x2a2e25002064332500202020200a0020
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x2a2e25002064332500202020200a0020
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff00000000ff0000000000000000
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff00000000ff0000000000ff00
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xffff000000ffff0000000000ff00
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x3182 -> 8000000000024
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x3182 vs 0x3182
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x1
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab1d -> 2500202020200a00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x3 vs 0x3
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bd48,0x3ab1d) -> 2500202020200a00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x1
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x1
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x1)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x3)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x3ab1c -> 202020200a0020
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c80 -> "?=a\K)ab"
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c80
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfe0
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfe0 vs 0xfe0
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfe0
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x3ab1c -> 202020200a0020
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x3ab1d -> 2500202020200a00
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c80 -> "?=a\K)ab"
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c81 -> "=a\K)ab/"
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x3ab1d -> 2500202020200a00
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c81 -> "=a\K)ab/"
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x20
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c80,0x20)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c81) -> "=a\K)ab/"
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x3
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x1
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffffc
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x1 vs 0x7ffffffc
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x4
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x4
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c1e8 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x2
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x0
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x4
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x4
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c2f8 -> 7f000008c410
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0038452e] ret	
[main] [INS] [0000f0f6] add	qword ptr [rip + 0x23839a], 1                             ; store(0x247498,0x1)
[main] [INS] [0000f0fe] cmp	dword ptr [rbx + 0x38], 0x63                              ; 0x3 vs 0x63
[main] [INS] [0000f102] jle	0xedd7
[main] [INS] [0000edd7] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000edd9] test	r14d, r14d                                               ; 0x0 vs 0x0
[main] [INS] [0000eddc] jle	0xee09
[main] [INS] [0000ee09] mov	rsi, qword ptr [rip + 0x23a608]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ee10] mov	edi, 0x5e                                                 ; edi = 0x5e
[main] [INS] [0000ee15] add	qword ptr [rip + 0x2386bb], 1                             ; store(0x2474d8,0x1)
[main] [INS] [0000ee1d] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x5e
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x5e
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c81 -> "=a\K)ab/"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c81 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c82 -> "a\K)ab/C"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c82) -> "a\K)ab/C"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c81,0x5e)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x5e
[main] [INS] [002d980c] ret	
[main] [INS] [0000ee22] add	qword ptr [rip + 0x2386b6], 1                             ; store(0x2474e0,0x1)
[main] [INS] [0000ee2a] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [0000ee2d] jle	0xee82
[main] [INS] [0000ee82] sub	r12d, r14d                                                ; r12d = 0x2
[main] [INS] [0000ee85] mov	eax, r12d                                                 ; eax = 0x2
[main] [INS] [0000ee88] sub	eax, r13d                                                 ; eax = 0x2
[main] [INS] [0000ee8b] cmp	eax, -3                                                   ; 0x2 vs 0x-3
[main] [INS] [0000ee8e] jl	0xeec9
[main] [INS] [0000ee90] lea	r12d, [rax + 4]                                           ; r12d = 0x6
[main] [INS] [0000ee94] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000ee96] nop	word ptr cs:[rax + rax]
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x1
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c82 -> "a\K)ab/C"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c82 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c83 -> "\K)ab/C
"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c83) -> "\K)ab/C
"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c82,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x1 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x2
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c83 -> "\K)ab/C
"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c83 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c84 -> "K)ab/C
"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c84) -> "K)ab/C
"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c83,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x2 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x3
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c84 -> "K)ab/C
"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c84 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c85 -> ")ab/C
"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c85) -> ")ab/C
"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c84,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x3 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x4
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c85 -> ")ab/C
"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c85 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c86 -> "ab/C
"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c86) -> "ab/C
"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c85,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x4 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x5
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c86 -> "ab/C
"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c86 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c87 -> "b/C
"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c87) -> "b/C
"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c86,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x5 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x6
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c87 -> "b/C
"
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c87 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c88 -> "/C
"
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c88) -> "/C
"
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c87,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x6 vs 0x6
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eec9] mov	ecx, dword ptr [rbx + 0x3c]                               ; ecx = 0x1
[main] [INS] [0000eecc] movsxd	r8, dword ptr [rbx + 0x38]                             ; r8 = 0x3
[main] [INS] [0000eed0] add	qword ptr [rip + 0x238638], 1                             ; store(0x247510,0x1)
[main] [INS] [0000eed8] add	r8, qword ptr [rip + 0x23a4f1]                            ; r8 = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [0000eedf] test	ecx, ecx                                                 ; 0x1 vs 0x1
[main] [INS] [0000eee1] je	0xf030
[main] [INS] [0000eee7] add	qword ptr [rip + 0x238629], 1                             ; store(0x247518,0x1)
[main] [INS] [0000eeef] mov	rdi, qword ptr [rip + 0x23a522]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000eef6] lea	rdx, [rip + 0x2bc2c]                                      ; rdx = 0x3ab29 -> "%.*s"
[main] [INS] [0000eefd] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000ef02] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000ef04] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x6)
[main] [INS] [003843c1] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3ab29 -> "%.*s"
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c220 -> 3000000020
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c258,0x1)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c260,0x9000c3a3) -> "a\K)ab"
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c268,0x3c03a0) -> 66c3ff5788ff568a
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c238,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c310 -> 0
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c220 -> 3000000020
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3ab29 -> "%.*s"
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c220,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c224,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c228,0x7f000008c310) -> 0
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c240 -> d
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c230,0x7f000008c240) -> d
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x0)
[main] [INS] [002ad398] push	r13                                                      ; push(0x0)
[main] [INS] [002ad39a] push	r12                                                      ; push(0x6)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008bca0 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c1d8,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bd58,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3ab29 vs 0x3ab29
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c240 -> d
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3ab29 -> "%.*s"
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c3100000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bdd8,0x7f000008c240) -> d
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bdc8,0x7f000008c3100000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab29 -> "%.*s"
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb29
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb29 vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x6b72614d2074736574614c00732a2e25
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x6b72614d2074736574614c00732a2e25
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff00000000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x11
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x11 vs 0x11
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab29 -> "%.*s"
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bd50,0x3ab29) -> "%.*s"
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bda8,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bda0,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bd40,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3ab29 -> "%.*s"
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3ab29 -> "%.*s"
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3ab29 -> "%.*s"
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3ab29 -> "%.*s"
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bdf0 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008bcd8,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008bcdc,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008bcd0,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008bcc0,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008bd20,0x7f000008bdf0) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x2e
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3ab2a -> ".*s"
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0xe
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0xe vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x2e
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0xe
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x9
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xd0
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2addb0 -> 438d49017bb60f45
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bdf0 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008bcf0,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008bce8,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008bcf8,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008bd00,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bd18,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bd10,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008bd08,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008bd28,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bd30,0x7f000008c1d8) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bd38,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2addb0)
[main] [INS] [002addb0] movzx	r15d, byte ptr [r11 + 1]                                ; r15d = 0x2a
[main] [INS] [002addb5] lea	rax, [r11 + 1]                                            ; rax = 0x3ab2b -> 736574614c00732a
[main] [INS] [002addb9] cmp	r15b, 0x2a                                                ; 0x2a vs 0x2a
[main] [INS] [002addbd] je	0x2af57a
[main] [INS] [002af57a] movzx	eax, byte ptr [r11 + 2]                                 ; eax = 0x73
[main] [INS] [002af57f] lea	rsi, [r11 + 2]                                            ; rsi = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af583] sub	eax, 0x30                                                 ; eax = 0x43
[main] [INS] [002af586] cmp	eax, 9                                                    ; 0x43 vs 0x9
[main] [INS] [002af589] jbe	0x2afd17
[main] [INS] [002af58f] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002af593] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002af596] ja	0x2b0333
[main] [INS] [002af59c] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002af59e] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c258 -> 1
[main] [INS] [002af5a3] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002af5a6] mov	dword ptr [r12], eax                                      ; store(0x7f000008c220,0x20)
[main] [INS] [002af5aa] mov	ecx, dword ptr [rdx]                                      ; ecx = 0x1
[main] [INS] [002af5ac] test	ecx, ecx                                                 ; 0x1 vs 0x1
[main] [INS] [002af5ae] js	0x2afb93
[main] [INS] [002af5b4] mov	r11, rsi                                                  ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af5b7] cmp	r10d, 0x3c8                                               ; 0x0 vs 0x3c8
[main] [INS] [002af5be] mov	eax, 0x3c8                                                ; eax = 0x3c8
[main] [INS] [002af5c3] cmovge	eax, r10d                                              ; eax = 0x3c8
[main] [INS] [002af5c7] cmp	eax, ecx                                                  ; 0x3c8 vs 0x1
[main] [INS] [002af5c9] jge	0x2b0295
[main] [INS] [002b0295] movzx	r15d, byte ptr [r11]                                    ; r15d = 0x73
[main] [INS] [002b0299] jmp	0x2adddd                                                  ; jmp(0x2adddd)
[main] [INS] [002adddd] lea	eax, [r15 - 0x20]                                         ; eax = 0x53
[main] [INS] [002adde1] cmp	al, 0x5a                                                  ; 0x53 vs 0x5a
[main] [INS] [002adde3] ja	0x2adce0
[main] [INS] [002adde9] movsx	eax, r15b                                               ; eax = 0x73
[main] [INS] [002added] lea	rdx, [rip + 0x151cec]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002addf4] lea	rsi, [rip - 0x11b]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002addfb] sub	eax, 0x20                                                 ; eax = 0x53
[main] [INS] [002addfe] cdqe	
[main] [INS] [002ade00] movzx	edx, byte ptr [rdx + rax]                               ; edx = 0x15
[main] [INS] [002ade04] lea	rax, [rip + 0x151b55]                                     ; rax = 0x3ff960 -> 0
[main] [INS] [002ade0b] movsxd	rax, dword ptr [rax + rdx*4]                           ; rax = 0xfffffffffffffd40
[main] [INS] [002ade0f] add	rax, rsi                                                  ; rax = 0x2ada20 -> f2ff88324048b41
[main] [INS] [002ade12] jmp	rax                                                       ; jmp(0x2ada20)
[main] [INS] [002ada20] mov	eax, dword ptr [r12]                                      ; eax = 0x20
[main] [INS] [002ada24] cmp	eax, 0x2f                                                 ; 0x20 vs 0x2f
[main] [INS] [002ada27] ja	0x2b056d
[main] [INS] [002ada2d] mov	edx, eax                                                  ; edx = 0x20
[main] [INS] [002ada2f] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c260 -> 9000c3a3
[main] [INS] [002ada34] add	eax, 8                                                    ; eax = 0x28
[main] [INS] [002ada37] mov	dword ptr [r12], eax                                      ; store(0x7f000008c220,0x28)
[main] [INS] [002ada3b] mov	r8, qword ptr [rdx]                                       ; r8 = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [002ada3e] test	r8, r8                                                   ; 0x9000c3a3 vs 0x9000c3a3
[main] [INS] [002ada41] je	0x2af0ae
[main] [INS] [002ada47] cmp	r15b, 0x53                                                ; 0x73 vs 0x53
[main] [INS] [002ada4b] je	0x2af1af
[main] [INS] [002ada51] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002ada54] jne	0x2af1af
[main] [INS] [002ada5a] cmp	ecx, -1                                                   ; 0x1 vs 0x-1
[main] [INS] [002ada5d] je	0x2af4b6
[main] [INS] [002ada63] movsxd	rsi, ecx                                               ; rsi = 0x1
[main] [INS] [002ada66] mov	rdi, r8                                                   ; rdi = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [002ada69] mov	dword ptr [rbp - 0x500], r10d                             ; store(0x7f000008bd10,0x0)
[main] [INS] [002ada70] mov	qword ptr [rbp - 0x4e8], r11                              ; store(0x7f000008bd28,0x3ab2c) -> 74736574614c0073
[main] [INS] [002ada77] mov	qword ptr [rbp - 0x4e0], r8                               ; store(0x7f000008bd30,0x9000c3a3) -> "a\K)ab"
[main] [INS] [002ada7e] call	0x273000                                                 ; call(0x273000)
[main] [INS] [00273000] jmp	qword ptr [rip + 0x3ca022]                                ; jmp(0x3037c0)
[main] [INS] [003037c0] test	rsi, rsi                                                 ; 0x1 vs 0x1
[main] [INS] [003037c3] jne	0x3037c9
[main] [INS] [003037c9] add	rsi, rdi                                                  ; rsi = 0x9000c3a4 -> "\K)ab"
[main] [INS] [003037cc] mov	r10, rsi                                                  ; r10 = 0x9000c3a4 -> "\K)ab"
[main] [INS] [003037cf] and	r10, 0xffffffffffffffc0                                   ; r10 = 0x9000c380 -> 0
[main] [INS] [003037d3] mov	r11, rsi                                                  ; r11 = 0x9000c3a4 -> "\K)ab"
[main] [INS] [003037d6] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [003037da] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [003037de] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [003037e2] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [003037e6] mov	rax, rdi                                                  ; rax = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [003037e9] mov	rcx, rdi                                                  ; rcx = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [003037ec] and	rcx, 0xfff                                                ; rcx = 0x3a3
[main] [INS] [003037f3] cmp	rcx, 0xfcf                                                ; 0x3a3 vs 0xfcf
[main] [INS] [003037fa] ja	0x303870
[main] [INS] [003037fc] and	rax, 0xfffffffffffffff0                                   ; rax = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [00303800] pcmpeqb	xmm0, xmmword ptr [rax]                               ; xmm0 = 0xffffffffffffff000000000000000000
[main] [INS] [00303804] pcmpeqb	xmm1, xmmword ptr [rax + 0x10]                        ; xmm1 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00303809] pcmpeqb	xmm2, xmmword ptr [rax + 0x20]                        ; xmm2 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [0030380e] pcmpeqb	xmm3, xmmword ptr [rax + 0x30]                        ; xmm3 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00303813] pmovmskb	esi, xmm0                                            ; esi = 0xfe00 -> 100239718058348
[main] [INS] [00303817] pmovmskb	edx, xmm1                                            ; edx = 0xffff -> 1246c8d41010023
[main] [INS] [0030381b] pmovmskb	r8d, xmm2                                            ; r8d = 0xffff -> 1246c8d41010023
[main] [INS] [00303820] pmovmskb	ecx, xmm3                                            ; ecx = 0xffff -> 1246c8d41010023
[main] [INS] [00303824] shl	rdx, 0x10                                                 ; rdx = 0xffff0000
[main] [INS] [00303828] shl	rcx, 0x10                                                 ; rcx = 0xffff0000
[main] [INS] [0030382c] or	rdx, rsi                                                   ; rdx = 0xfffffe00
[main] [INS] [0030382f] or	rcx, r8                                                    ; rcx = 0xffffffff
[main] [INS] [00303832] shl	rcx, 0x20                                                 ; rcx = 0xffffffff00000000
[main] [INS] [00303836] or	rdx, rcx                                                   ; rdx = 0xfffffffffffffe00
[main] [INS] [00303839] mov	rcx, rdi                                                  ; rcx = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [0030383c] xor	rcx, rax                                                  ; rcx = 0x3
[main] [INS] [0030383f] mov	rsi, r11                                                  ; rsi = 0x9000c3a4 -> "\K)ab"
[main] [INS] [00303842] sub	rsi, rax                                                  ; rsi = 0x4
[main] [INS] [00303845] and	rax, 0xffffffffffffffc0                                   ; rax = 0x9000c380 -> 0
[main] [INS] [00303849] test	rsi, -0x40                                               ; 0x4 vs 0x-40
[main] [INS] [00303850] je	0x3038d3
[main] [INS] [003038d3] bts	rdx, rsi                                                  ; rdx = 0xfffffffffffffe10
[main] [INS] [003038d7] sar	rdx, cl                                                   ; rdx = 0xffffffffffffffc2
[main] [INS] [003038da] test	rdx, rdx                                                 ; 0xffffffffffffffc2 vs 0xffffffffffffffc2
[main] [INS] [003038dd] je	0x3038f0
[main] [INS] [003038df] bsf	rax, rdx                                                  ; rax = 0x1
[main] [INS] [003038e3] ret	
[main] [INS] [002ada83] mov	r8, qword ptr [rbp - 0x4e0]                               ; r8 = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [002ada8a] mov	r11, qword ptr [rbp - 0x4e8]                              ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002ada91] mov	r9, rax                                                   ; r9 = 0x1
[main] [INS] [002ada94] mov	r10d, dword ptr [rbp - 0x500]                             ; r10d = 0x0
[main] [INS] [002ada9b] mov	ecx, eax                                                  ; ecx = 0x1
[main] [INS] [002ada9d] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bd18,0x0)
[main] [INS] [002adaa7] sub	r10d, ecx                                                 ; r10d = 0xffffffff
[main] [INS] [002adaaa] mov	dword ptr [rbp - 0x4e8], r10d                             ; store(0x7f000008bd28,0xffffffff)
[main] [INS] [002adab1] js	0x2aefa0
[main] [INS] [002aefa0] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [002aefa3] js	0x2b053b
[main] [INS] [002aefa9] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002aefb0] lea	rdi, [rip + 0x38a7a9]                                     ; rdi = 0x639760 -> 0
[main] [INS] [002aefb7] mov	rax, r15                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002aefba] sub	rax, rdi                                                  ; rax = 0xb40
[main] [INS] [002aefbd] cmp	qword ptr [rbp - 0x4d0], rax                              ; 0xd68 vs 0xb40
[main] [INS] [002aefc4] jbe	0x2afdc8
[main] [INS] [002aefca] mov	rdx, r9                                                   ; rdx = 0x1
[main] [INS] [002aefcd] mov	qword ptr [rbp - 0x4c8], r9                               ; store(0x7f000008bd48,0x1)
[main] [INS] [002aefd4] mov	dword ptr [rbp - 0x4e8], ecx                              ; store(0x7f000008bd28,0x1)
[main] [INS] [002aefda] mov	qword ptr [rbp - 0x4e0], r11                              ; store(0x7f000008bd30,0x3ab2c) -> 74736574614c0073
[main] [INS] [002aefe1] mov	rsi, r8                                                   ; rsi = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [002aefe4] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002aefe7] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000028
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c88 -> "/C
"
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c88
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfd8
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfd8 vs 0xfd8
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfd8
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x9000c3a3 -> "a\K)ab"
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x9000c3a4 -> "\K)ab"
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c88 -> "/C
"
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c89 -> a43
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x9000c3a4 -> "\K)ab"
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c89 -> a43
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x61
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c88,0x61)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c89) -> a43
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000028
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002aefeb] mov	r9, qword ptr [rbp - 0x4c8]                               ; r9 = 0x1
[main] [INS] [002aeff2] cmp	r9, rax                                                   ; 0x1 vs 0x1
[main] [INS] [002aeff5] jne	0x2add00
[main] [INS] [002aeffb] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002af000] mov	r11, qword ptr [rbp - 0x4e0]                              ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af007] mov	ecx, dword ptr [rbp - 0x4e8]                              ; ecx = 0x1
[main] [INS] [002af00d] sub	eax, r13d                                                 ; eax = 0x7fffffff
[main] [INS] [002af010] cdqe	
[main] [INS] [002af012] cmp	r9, rax                                                   ; 0x1 vs 0x7fffffff
[main] [INS] [002af015] ja	0x2aec30
[main] [INS] [002af01b] add	r13d, ecx                                                 ; r13d = 0x1
[main] [INS] [002af01e] jmp	0x2ad930                                                  ; jmp(0x2ad930)
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008bcdc,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bd48,0x3ab2d) -> 2074736574614c00
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab2d -> 2074736574614c00
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb2d
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb2d vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x753c203a6b72614d2074736574614c00
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x753c203a6b72614d2074736574614c00
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0x0
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab2d -> 2074736574614c00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x1 vs 0x1
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bd48,0x3ab2d) -> 2074736574614c00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x0
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x0
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x0)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x1)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000028
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000028
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x1
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffffe
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x0 vs 0x7ffffffe
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x1
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x1
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c1e8 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x6
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x0
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x1
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x1
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c2f8 -> 7f000008c410
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x6
[main] [INS] [0038452e] ret	
[main] [INS] [0000ef09] mov	rsi, qword ptr [rip + 0x23a508]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ef10] mov	edi, 0xa                                                  ; edi = 0xa
[main] [INS] [0000ef15] add	qword ptr [rip + 0x238603], 1                             ; store(0x247520,0x1)
[main] [INS] [0000ef1d] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0xa
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0xa
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c89 -> a43
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c89 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c8a -> a
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c8a) -> a
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c89,0xa)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0xa
[main] [INS] [002d980c] ret	
[main] [INS] [0000ef22] add	qword ptr [rip + 0x2385fe], 1                             ; store(0x247528,0x1)
[main] [INS] [0000ef2a] mov	rax, qword ptr [rbx + 0x40]                               ; rax = 0x0
[main] [INS] [0000ef2e] cmp	rax, qword ptr [rip + 0x23a4ab]                           ; 0x0 vs 0x0
[main] [INS] [0000ef35] mov	dword ptr [rip + 0x23a4bd], 0                             ; store(0x2493fc,0x0)
[main] [INS] [0000ef3f] je	0xefc0
[main] [INS] [0000efc0] mov	rax, qword ptr [rbx + 0x30]                               ; rax = 0x0
[main] [INS] [0000efc4] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [0000efc7] je	0xefdb
[main] [INS] [0000efdb] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000efdd] mov	eax, dword ptr [rip + 0x23a421]                           ; eax = 0xffffffff
[main] [INS] [0000efe3] cmp	dword ptr [rbx + 4], eax                                  ; 0xff vs 0xffffffff
[main] [INS] [0000efe6] je	0xf040
[main] [INS] [0000efe8] add	rsp, 8                                                    ; rsp = 0x7f000008c318 -> 76
[main] [INS] [0000efec] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000efee] pop	rbx                                                       ; rbx = 0x76
[main] [INS] [0000efef] pop	rbp                                                       ; rbp = 0x76
[main] [INS] [0000eff0] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eff2] pop	r13                                                       ; r13 = 0x9003a04c -> 611d01000300ff76
[main] [INS] [0000eff4] pop	r14                                                       ; r14 = 0x9004208e -> 6261
[main] [INS] [0000eff6] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [0000eff8] ret	
[main] [INS] [00029f7e] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f80] mov	r9d, eax                                                  ; r9d = 0x0
[main] [INS] [00029f83] jg	0x2f6d4
[main] [INS] [00029f89] add	qword ptr [rip + 0x22419f], 1                             ; store(0x24e130,0x1)
[main] [INS] [00029f91] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f93] jne	0x2f6d7
[main] [INS] [00029f99] add	qword ptr [rip + 0x224197], 1                             ; store(0x24e138,0x1)
[main] [INS] [00029fa1] movzx	eax, byte ptr [r13 + 6]                                 ; eax = 0x1d
[main] [INS] [00029fa6] add	r13, 6                                                    ; r13 = 0x9003a052 -> 2000400ff76611d
[main] [INS] [00029faa] add	qword ptr [rip + 0x224196], 1                             ; store(0x24e148,0x1)
[main] [INS] [00029fb2] jmp	0x28b50                                                   ; jmp(0x28b50)
[main] [INS] [00028b50] add	qword ptr [rip + 0x225008], 1                             ; store(0x24db60,0x1)
[main] [INS] [00028b58] jmp	0x288b7                                                   ; jmp(0x288b7)
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x1d
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x1d vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x1d
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x1d
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffeb960
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x2b270 -> a824848b49
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x2b270)
[main] [INS] [0002b270] mov	rax, qword ptr [r12 + 0xa8]                               ; rax = 0x90042090 -> 0
[main] [INS] [0002b278] sub	rax, r14                                                  ; rax = 0x2
[main] [INS] [0002b27b] test	rax, rax                                                 ; 0x2 vs 0x2
[main] [INS] [0002b27e] jle	0x2fd5c
[main] [INS] [0002b284] movzx	eax, byte ptr [r14]                                     ; eax = 0x61
[main] [INS] [0002b288] add	qword ptr [rip + 0x2238d0], 1                             ; store(0x24eb60,0x1)
[main] [INS] [0002b290] lea	rdx, [r14 + 1]                                            ; rdx = 0x9004208f -> 62
[main] [INS] [0002b294] cmp	byte ptr [r13 + 1], al                                    ; 0x61 vs 0x61
[main] [INS] [0002b298] jne	0x28c90
[main] [INS] [0002b29e] movzx	eax, byte ptr [r13 + 2]                                 ; eax = 0x76
[main] [INS] [0002b2a3] add	qword ptr [rip + 0x2238d5], 1                             ; store(0x24eb80,0x1)
[main] [INS] [0002b2ab] add	r13, 2                                                    ; r13 = 0x9003a054 -> 760302000400ff76
[main] [INS] [0002b2af] mov	r14, rdx                                                  ; r14 = 0x9004208f -> 62
[main] [INS] [0002b2b2] jmp	0x28b50                                                   ; jmp(0x28b50)
[main] [INS] [00028b50] add	qword ptr [rip + 0x225008], 1                             ; store(0x24db60,0x1)
[main] [INS] [00028b58] jmp	0x288b7                                                   ; jmp(0x288b7)
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x76
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x76
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffea578
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x29e88 -> 48002262e9158b48
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x29e88)
[main] [INS] [00029e88] mov	rdx, qword ptr [rip + 0x2262e9]                           ; rdx = 0xeb80 -> "AWAVAUAT"
[main] [INS] [00029e8f] test	rdx, rdx                                                 ; 0xeb80 vs 0xeb80
[main] [INS] [00029e92] je	0x29fa1
[main] [INS] [00029e98] mov	dword ptr [rsp + 0xc0], 2                                 ; store(0x7f000008c410,0x2)
[main] [INS] [00029ea3] movzx	eax, byte ptr [r13 + 1]                                 ; eax = 0xff
[main] [INS] [00029ea8] mov	rdi, r14                                                  ; rdi = 0x9004208f -> 62
[main] [INS] [00029eab] mov	rcx, qword ptr [r12 + 0xa8]                               ; rcx = 0x90042090 -> 0
[main] [INS] [00029eb3] add	qword ptr [rip + 0x224265], 1                             ; store(0x24e120,0x1)
[main] [INS] [00029ebb] mov	dword ptr [rsp + 0xc4], eax                               ; store(0x7f000008c414,0xff)
[main] [INS] [00029ec2] mov	rax, qword ptr [r12 + 0x18]                               ; rax = 0x90018700 -> ffffffffffffffff
[main] [INS] [00029ec7] mov	qword ptr [rsp + 0xc8], rax                               ; store(0x7f000008c418,0x90018700) -> ffffffffffffffff
[main] [INS] [00029ecf] mov	rax, qword ptr [r12 + 0xa0]                               ; rax = 0x9004208e -> 6261
[main] [INS] [00029ed7] sub	rcx, rax                                                  ; rcx = 0x2
[main] [INS] [00029eda] sub	rdi, rax                                                  ; rdi = 0x1
[main] [INS] [00029edd] mov	qword ptr [rsp + 0xd0], rax                               ; store(0x7f000008c420,0x9004208e) -> 6261
[main] [INS] [00029ee5] mov	dword ptr [rsp + 0xd8], ecx                               ; store(0x7f000008c428,0x2)
[main] [INS] [00029eec] mov	rcx, qword ptr [rsp + 8]                                  ; rcx = 0x9004208e -> 6261
[main] [INS] [00029ef1] mov	dword ptr [rsp + 0xe0], edi                               ; store(0x7f000008c430,0x1)
[main] [INS] [00029ef8] mov	edi, dword ptr [rsp + 0x68]                               ; edi = 0x2
[main] [INS] [00029efc] sub	rcx, rax                                                  ; rcx = 0x0
[main] [INS] [00029eff] mov	dword ptr [rsp + 0xdc], ecx                               ; store(0x7f000008c42c,0x0)
[main] [INS] [00029f06] movzx	eax, word ptr [r13 + 2]                                 ; eax = 0x400
[main] [INS] [00029f0b] rol	ax, 8                                                     ; ax = 0x4
[main] [INS] [00029f0f] movzx	eax, ax                                                 ; eax = 0x4
[main] [INS] [00029f12] mov	dword ptr [rsp + 0xf8], eax                               ; store(0x7f000008c448,0x4)
[main] [INS] [00029f19] movzx	eax, word ptr [r13 + 4]                                 ; eax = 0x200
[main] [INS] [00029f1e] rol	ax, 8                                                     ; ax = 0x2
[main] [INS] [00029f22] movzx	eax, ax                                                 ; eax = 0x2
[main] [INS] [00029f25] mov	dword ptr [rsp + 0xfc], eax                               ; store(0x7f000008c44c,0x2)
[main] [INS] [00029f2c] mov	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f2e] shr	eax, 0x1f                                                 ; eax = 0x0
[main] [INS] [00029f31] add	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f33] sar	eax, 1                                                    ; eax = 0x1
[main] [INS] [00029f35] mov	dword ptr [rsp + 0xe4], eax                               ; store(0x7f000008c434,0x1)
[main] [INS] [00029f3c] movzx	eax, word ptr [r12 + 0xd0]                              ; eax = 0x0
[main] [INS] [00029f45] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f47] je	0x2dbd0
[main] [INS] [0002dbd0] mov	dword ptr [rsp + 0xe8], 0xffffffff                        ; store(0x7f000008c438,0xffffffff)
[main] [INS] [0002dbdb] add	qword ptr [rip + 0x220545], 1                             ; store(0x24e128,0x1)
[main] [INS] [0002dbe3] jmp	0x29f54                                                   ; jmp(0x29f54)
[main] [INS] [00029f54] mov	rax, qword ptr [r12 + 0xf8]                               ; rax = 0x0
[main] [INS] [00029f5c] lea	rdi, [rsp + 0xc0]                                         ; rdi = 0x7f000008c410 -> ff00000002
[main] [INS] [00029f64] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008c440,0x0)
[main] [INS] [00029f6c] mov	rax, qword ptr [r12 + 0x108]                              ; rax = 0x0
[main] [INS] [00029f74] mov	qword ptr [rsp + 0x100], rax                              ; store(0x7f000008c450,0x0)
[main] [INS] [00029f7c] call	rdx                                                      ; call(0xeb80)
[main] [INS] [0000eb80] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [0000eb82] push	r14                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000eb84] push	r13                                                      ; push(0x9003a054) -> 760302000400ff76
[main] [INS] [0000eb86] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb88] push	rbp                                                      ; push(0x76)
[main] [INS] [0000eb89] push	rbx                                                      ; push(0x76)
[main] [INS] [0000eb8a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb8c] mov	rbx, rdi                                                  ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb8f] sub	rsp, 8                                                    ; rsp = 0x7f000008c310 -> 0
[main] [INS] [0000eb93] mov	eax, dword ptr [rip + 0x23a873]                           ; eax = 0x0
[main] [INS] [0000eb99] add	qword ptr [rip + 0x23885f], 1                             ; store(0x247400,0x1)
[main] [INS] [0000eba1] mov	edx, eax                                                  ; edx = 0x0
[main] [INS] [0000eba3] or	edx, dword ptr [rip + 0x23a853]                            ; edx = 0x0
[main] [INS] [0000eba9] je	0xed06
[main] [INS] [0000ed06] mov	esi, dword ptr [rbx + 0x1c]                               ; esi = 0x0
[main] [INS] [0000ed09] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed0c] mov	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed10] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a054) -> 760302000400ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb78] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb7a] jmp	0xeb5f                                                    ; jmp(0xeb5f)
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x9003a054 -> 760302000400ff76
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed15] movsxd	rdi, dword ptr [rbx + 0x1c]                            ; rdi = 0x0
[main] [INS] [0000ed19] mov	esi, dword ptr [rbx + 0x20]                               ; esi = 0x1
[main] [INS] [0000ed1c] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed1f] add	qword ptr [rip + 0x238741], 1                             ; store(0x247468,0x1)
[main] [INS] [0000ed27] mov	r14d, eax                                                 ; r14d = 0x0
[main] [INS] [0000ed2a] sub	esi, edi                                                  ; esi = 0x1
[main] [INS] [0000ed2c] add	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed30] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a054) -> 760302000400ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x0
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x9004208f -> 62
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x61
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x61
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x41
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x41 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x9004208f -> 62
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x9004208f vs 0x9004208f
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x1
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x9003a054 -> 760302000400ff76
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed35] mov	esi, dword ptr [rbx + 0x18]                               ; esi = 0x2
[main] [INS] [0000ed38] mov	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed3c] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0000ed3e] add	qword ptr [rip + 0x23872a], 1                             ; store(0x247470,0x1)
[main] [INS] [0000ed46] mov	r13d, eax                                                 ; r13d = 0x1
[main] [INS] [0000ed49] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x1)
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x1
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x90042090 -> 0
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x61
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x61
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x41
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x41 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x9004208f -> 62
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x9004208f
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x90042090 -> 0
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x62
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x1)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x90042090) -> 0
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x62
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x42
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x42 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x90042090 -> 0
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x2
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x90042090
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x2
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x1
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed4e] movsxd	rdi, dword ptr [rbx + 0x20]                            ; rdi = 0x1
[main] [INS] [0000ed52] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed55] mov	r12d, eax                                                 ; r12d = 0x2
[main] [INS] [0000ed58] mov	esi, dword ptr [rbx + 0x18]                               ; esi = 0x2
[main] [INS] [0000ed5b] add	qword ptr [rip + 0x238715], 1                             ; store(0x247478,0x1)
[main] [INS] [0000ed63] sub	esi, edi                                                  ; esi = 0x1
[main] [INS] [0000ed65] add	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208f -> 62
[main] [INS] [0000ed69] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x1)
[main] [INS] [0000eb02] push	r12                                                      ; push(0x2)
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x0
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x90042090 -> 0
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x90042090 -> 0
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x62
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x90042090) -> 0
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x62
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x42
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x42 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x90042090 -> 0
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x90042090
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x1
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x2
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x1
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed6e] add	qword ptr [rip + 0x23870a], 1                             ; store(0x247480,0x1)
[main] [INS] [0000ed76] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000ed79] je	0xed90
[main] [INS] [0000ed90] mov	ecx, dword ptr [rbx + 4]                                  ; ecx = 0xff
[main] [INS] [0000ed93] mov	rdi, qword ptr [rip + 0x23a67e]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000ed9a] cmp	ecx, 0xff                                                 ; 0xff vs 0xff
[main] [INS] [0000eda0] je	0xf0d8
[main] [INS] [0000f0d8] mov	ecx, dword ptr [rbx + 0x38]                               ; ecx = 0x4
[main] [INS] [0000f0db] lea	rdx, [rip + 0x2ba36]                                      ; rdx = 0x3ab18 -> "%+3d "
[main] [INS] [0000f0e2] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000f0e4] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000f0e9] add	qword ptr [rip + 0x23839f], 1                             ; store(0x247490,0x1)
[main] [INS] [0000f0f1] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x0)
[main] [INS] [003843c1] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3ab18 -> "%+3d "
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c220 -> 3000000028
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c258,0x4)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c260,0xa)
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c268,0x0)
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c238,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c310 -> 0
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c220 -> 3000000028
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3ab18 -> "%+3d "
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c220,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c224,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c228,0x7f000008c310) -> 0
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c240 -> d
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c230,0x7f000008c240) -> d
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x0)
[main] [INS] [002ad398] push	r13                                                      ; push(0x1)
[main] [INS] [002ad39a] push	r12                                                      ; push(0x2)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008bca0 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c1d8,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bd58,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3ab18 vs 0x3ab18
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c240 -> d
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3ab18 -> "%+3d "
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c3100000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bdd8,0x7f000008c240) -> d
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bdc8,0x7f000008c3100000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab18 -> "%+3d "
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb18
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb18 vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x2064332500202020200a002064332b25
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x2064332500202020200a002064332b25
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff0000000000000000000000ff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff0000000000ff0000000000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xffff0000000000ff00000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1821 -> 0
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1821 vs 0x1821
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab18 -> "%+3d "
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bd50,0x3ab18) -> "%+3d "
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bda8,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bda0,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bd40,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3ab18 -> "%+3d "
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3ab18 -> "%+3d "
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3ab18 -> "%+3d "
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3ab18 -> "%+3d "
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bdf0 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008bcd8,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008bcdc,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008bcd0,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008bcc0,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008bd20,0x7f000008bdf0) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x2b
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3ab19 -> "+3d "
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0xb
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0xb vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x2b
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0xb
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x2
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0x40
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2add20 -> 538d49017bb60f45
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bdf0 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008bcf0,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008bce8,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008bcf8,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008bd00,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bd18,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bd10,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008bd08,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008bd28,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bd30,0x7f000008c1d8) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bd38,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2add20)
[main] [INS] [002add20] movzx	r15d, byte ptr [r11 + 1]                                ; r15d = 0x33
[main] [INS] [002add25] lea	rdx, [r11 + 1]                                            ; rdx = 0x3ab1a -> "3d "
[main] [INS] [002add29] lea	rax, [rip - 0x50]                                         ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002add30] lea	esi, [r15 - 0x20]                                         ; esi = 0x13
[main] [INS] [002add34] cmp	sil, 0x5a                                                 ; 0x13 vs 0x5a
[main] [INS] [002add38] ja	0x2af35a
[main] [INS] [002add3e] movsx	eax, r15b                                               ; eax = 0x33
[main] [INS] [002add42] lea	rsi, [rip + 0x151d97]                                     ; rsi = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002add49] lea	rdi, [rip - 0x70]                                         ; rdi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002add50] sub	eax, 0x20                                                 ; eax = 0x13
[main] [INS] [002add53] mov	r11, rdx                                                  ; r11 = 0x3ab1a -> "3d "
[main] [INS] [002add56] mov	dword ptr [rbp - 0x4f8], 1                                ; store(0x7f000008bd18,0x1)
[main] [INS] [002add60] cdqe	
[main] [INS] [002add62] movzx	eax, byte ptr [rsi + rax]                               ; eax = 0x8
[main] [INS] [002add66] lea	rsi, [rip + 0x151cf3]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002add6d] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xb60
[main] [INS] [002add71] add	rax, rdi                                                  ; rax = 0x2ae840 -> ffffffba3bb60f45
[main] [INS] [002add74] jmp	rax                                                       ; jmp(0x2ae840)
[main] [INS] [002ae840] movzx	r15d, byte ptr [r11]                                    ; r15d = 0x33
[main] [INS] [002ae844] mov	edx, 0x7fffffff                                           ; edx = 0x7fffffff
[main] [INS] [002ae849] lea	r10d, [r15 - 0x30]                                        ; r10d = 0x3
[main] [INS] [002ae84d] movzx	eax, byte ptr [r11 + 1]                                 ; eax = 0x64
[main] [INS] [002ae852] lea	rsi, [r11 + 1]                                            ; rsi = 0x3ab1b -> 202020200a002064
[main] [INS] [002ae856] mov	r15d, eax                                                 ; r15d = 0x64
[main] [INS] [002ae859] sub	eax, 0x30                                                 ; eax = 0x34
[main] [INS] [002ae85c] cmp	eax, 9                                                    ; 0x34 vs 0x9
[main] [INS] [002ae85f] ja	0x2afe08
[main] [INS] [002afe08] cmp	r10d, 0x7fffffde                                          ; 0x3 vs 0x7fffffde
[main] [INS] [002afe0f] mov	qword ptr [rbp - 0x530], rsi                              ; store(0x7f000008bce0,0x3ab1b) -> 202020200a002064
[main] [INS] [002afe16] ja	0x2aec30
[main] [INS] [002afe1c] cmp	r10d, 0x3c7                                               ; 0x3 vs 0x3c7
[main] [INS] [002afe23] jle	0x2afeab
[main] [INS] [002afeab] cmp	r15b, 0x24                                                ; 0x64 vs 0x24
[main] [INS] [002afeaf] je	0x2af2ab
[main] [INS] [002afeb5] lea	edx, [r15 - 0x20]                                         ; edx = 0x44
[main] [INS] [002afeb9] lea	rax, [rip - 0x21e0]                                       ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002afec0] cmp	dl, 0x5a                                                  ; 0x44 vs 0x5a
[main] [INS] [002afec3] ja	0x2aef90
[main] [INS] [002afec9] movsx	eax, r15b                                               ; eax = 0x64
[main] [INS] [002afecd] lea	rdx, [rip + 0x14fc0c]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002afed4] lea	rdi, [rip - 0x21fb]                                       ; rdi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002afedb] sub	eax, 0x20                                                 ; eax = 0x44
[main] [INS] [002afede] mov	r11, qword ptr [rbp - 0x530]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002afee5] cdqe	
[main] [INS] [002afee7] movzx	edx, byte ptr [rdx + rax]                               ; edx = 0xf
[main] [INS] [002afeeb] lea	rax, [rip + 0x14faee]                                     ; rax = 0x3ff9e0 -> 0
[main] [INS] [002afef2] movsxd	rax, dword ptr [rax + rdx*4]                           ; rax = 0xbd0
[main] [INS] [002afef6] add	rax, rdi                                                  ; rax = 0x2ae8b0 -> b21840fc98545
[main] [INS] [002afef9] jmp	rax                                                       ; jmp(0x2ae8b0)
[main] [INS] [002ae8b0] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002ae8b3] je	0x2af3da
[main] [INS] [002af3da] mov	edx, dword ptr [rbp - 0x528]                              ; edx = 0x0
[main] [INS] [002af3e0] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002af3e4] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002af3e6] je	0x2af8db
[main] [INS] [002af8db] mov	r9d, dword ptr [rbp - 0x518]                              ; r9d = 0x0
[main] [INS] [002af8e2] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002af8e5] jne	0x2b0491
[main] [INS] [002af8eb] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002af8ee] ja	0x2b047e
[main] [INS] [002af8f4] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002af8f6] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c258 -> 4
[main] [INS] [002af8fb] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002af8fe] mov	dword ptr [r12], eax                                      ; store(0x7f000008c220,0x20)
[main] [INS] [002af902] movsxd	rax, dword ptr [rdx]                                   ; rax = 0x4
[main] [INS] [002af905] jmp	0x2ae8d7                                                  ; jmp(0x2ae8d7)
[main] [INS] [002ae8d7] test	rax, rax                                                 ; 0x4 vs 0x4
[main] [INS] [002ae8da] js	0x2af4d8
[main] [INS] [002ae8e0] mov	qword ptr [rbp - 0x518], rax                              ; store(0x7f000008bcf8,0x4)
[main] [INS] [002ae8e7] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ae8ea] mov	dword ptr [rbp - 0x530], 0xa                              ; store(0x7f000008bce0,0xa)
[main] [INS] [002ae8f4] jmp	0x2adeb8                                                  ; jmp(0x2adeb8)
[main] [INS] [002adeb8] test	ecx, ecx                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002adeba] js	0x2aef60
[main] [INS] [002aef60] mov	qword ptr [rbp - 0x548], 1                                ; store(0x7f000008bcc8,0x1)
[main] [INS] [002aef6b] jmp	0x2aded7                                                  ; jmp(0x2aded7)
[main] [INS] [002aded7] mov	edx, dword ptr [rbp - 0x530]                              ; edx = 0xa
[main] [INS] [002adedd] mov	rsi, qword ptr [rbp - 0x4e0]                              ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002adee4] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [002adee6] mov	rdi, qword ptr [rbp - 0x518]                              ; rdi = 0x4
[main] [INS] [002adeed] cmp	r15b, 0x58                                                ; 0x64 vs 0x58
[main] [INS] [002adef1] mov	dword ptr [rbp - 0x568], r10d                             ; store(0x7f000008bca8,0x3)
[main] [INS] [002adef8] sete	cl                                                       ; cl = 0x0
[main] [INS] [002adefb] mov	qword ptr [rbp - 0x560], r11                              ; store(0x7f000008bcb0,0x3ab1b) -> 202020200a002064
[main] [INS] [002adf02] mov	dword ptr [rbp - 0x558], r9d                              ; store(0x7f000008bcb8,0x0)
[main] [INS] [002adf09] call	0x2aa7b0                                                 ; call(0x2aa7b0)
[main] [INS] [002aa7b0] lea	r8, [rip + 0x154de9]                                      ; r8 = 0x3ff5a0 -> "01234567"
[main] [INS] [002aa7b7] lea	rax, [rip + 0x154e22]                                     ; rax = 0x3ff5e0 -> "01234567"
[main] [INS] [002aa7be] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [002aa7c0] cmovne	r8, rax                                                ; r8 = 0x3ff5a0 -> "01234567"
[main] [INS] [002aa7c4] cmp	edx, 0xa                                                  ; 0xa vs 0xa
[main] [INS] [002aa7c7] je	0x2aa840
[main] [INS] [002aa840] movabs	rcx, 0xcccccccccccccccd                                ; rcx = 0xcccccccccccccccd
[main] [INS] [002aa84a] nop	word ptr [rax + rax]
[main] [INS] [002aa850] mov	rax, rdi                                                  ; rax = 0x4
[main] [INS] [002aa853] sub	rsi, 1                                                    ; rsi = 0x7f000008c1d7 -> 424d4f444e410033
[main] [INS] [002aa857] mul	rcx                                                       ; rcx = 0xcccccccccccccccd
[main] [INS] [002aa85a] shr	rdx, 3                                                    ; rdx = 0x0
[main] [INS] [002aa85e] lea	rax, [rdx + rdx*4]                                        ; rax = 0x0
[main] [INS] [002aa862] add	rax, rax                                                  ; rax = 0x0
[main] [INS] [002aa865] sub	rdi, rax                                                  ; rdi = 0x4
[main] [INS] [002aa868] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002aa86b] movzx	eax, byte ptr [r8 + rdi]                                ; eax = 0x34
[main] [INS] [002aa870] mov	rdi, rdx                                                  ; rdi = 0x0
[main] [INS] [002aa873] mov	byte ptr [rsi], al                                        ; store(0x7f000008c1d7,0x34)
[main] [INS] [002aa875] jne	0x2aa850
[main] [INS] [002aa877] mov	rax, rsi                                                  ; rax = 0x7f000008c1d7 -> 424d4f444e410034
[main] [INS] [002aa87a] ret	
[main] [INS] [002adf0e] mov	rcx, qword ptr [rbp - 0x540]                              ; rcx = 0xffffffffffffffff
[main] [INS] [002adf15] mov	qword ptr [rbp - 0x528], rax                              ; store(0x7f000008bce8,0x7f000008c1d7) -> 424d4f444e410034
[main] [INS] [002adf1c] mov	r9d, dword ptr [rbp - 0x558]                              ; r9d = 0x0
[main] [INS] [002adf23] mov	r11, qword ptr [rbp - 0x560]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002adf2a] mov	r10d, dword ptr [rbp - 0x568]                             ; r10d = 0x3
[main] [INS] [002adf31] test	rcx, rcx                                                 ; 0xffffffffffffffff vs 0xffffffffffffffff
[main] [INS] [002adf34] je	0x2adf8e
[main] [INS] [002adf36] mov	edx, dword ptr [rbp - 0x510]                              ; edx = 0x0
[main] [INS] [002adf3c] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002adf3e] je	0x2adf8e
[main] [INS] [002adf8e] cmp	dword ptr [rbp - 0x530], 0xa                              ; 0xa vs 0xa
[main] [INS] [002adf95] jne	0x2adfea
[main] [INS] [002adf97] mov	r8d, dword ptr [rbp - 0x520]                              ; r8d = 0x0
[main] [INS] [002adf9e] test	r8d, r8d                                                 ; 0x0 vs 0x0
[main] [INS] [002adfa1] je	0x2adfea
[main] [INS] [002adfea] mov	rax, qword ptr [rbp - 0x4e0]                              ; rax = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002adff1] sub	rax, qword ptr [rbp - 0x528]                              ; rax = 0x1
[main] [INS] [002adff8] cmp	rax, qword ptr [rbp - 0x548]                              ; 0x1 vs 0x1
[main] [INS] [002adfff] mov	qword ptr [rbp - 0x510], rax                              ; store(0x7f000008bd00,0x1)
[main] [INS] [002ae006] jl	0x2aea90
[main] [INS] [002ae00c] cmp	qword ptr [rbp - 0x518], 0                                ; 0x4 vs 0x0
[main] [INS] [002ae014] je	0x2af090
[main] [INS] [002ae01a] cmp	dword ptr [rbp - 0x530], 8                                ; 0xa vs 0x8
[main] [INS] [002ae021] jne	0x2af0db
[main] [INS] [002af0db] mov	r8, qword ptr [rbp - 0x548]                               ; r8 = 0x1
[main] [INS] [002af0e2] sub	r8, qword ptr [rbp - 0x510]                               ; r8 = 0x0
[main] [INS] [002af0e9] mov	eax, 0                                                    ; eax = 0x0
[main] [INS] [002af0ee] mov	esi, dword ptr [rbp - 0x4c8]                              ; esi = 0x0
[main] [INS] [002af0f4] cmovs	r8, rax                                                 ; r8 = 0x0
[main] [INS] [002af0f8] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [002af0fa] mov	ecx, r8d                                                  ; ecx = 0x0
[main] [INS] [002af0fd] jne	0x2ae080
[main] [INS] [002af103] mov	rdi, qword ptr [rbp - 0x510]                              ; rdi = 0x1
[main] [INS] [002af10a] mov	eax, r10d                                                 ; eax = 0x3
[main] [INS] [002af10d] sub	eax, edi                                                  ; eax = 0x2
[main] [INS] [002af10f] mov	dword ptr [rbp - 0x4c8], edi                              ; store(0x7f000008bd48,0x1)
[main] [INS] [002af115] sub	eax, r8d                                                  ; eax = 0x2
[main] [INS] [002af118] mov	r8d, eax                                                  ; r8d = 0x2
[main] [INS] [002af11b] jmp	0x2aead2                                                  ; jmp(0x2aead2)
[main] [INS] [002aead2] cmp	dword ptr [rbp - 0x530], 0x10                             ; 0xa vs 0x10
[main] [INS] [002aead9] jne	0x2aeaeb
[main] [INS] [002aeaeb] mov	eax, dword ptr [rbp - 0x500]                              ; eax = 0x0
[main] [INS] [002aeaf1] or	eax, dword ptr [rbp - 0x4f8]                               ; eax = 0x1
[main] [INS] [002aeaf7] or	eax, r9d                                                   ; eax = 0x1
[main] [INS] [002aeafa] je	0x2aedf0
[main] [INS] [002aeb00] sub	r8d, 1                                                    ; r8d = 0x1
[main] [INS] [002aeb04] cmp	byte ptr [rbp - 0x4e8], 0x20                              ; 0x20 vs 0x20
[main] [INS] [002aeb0b] je	0x2af028
[main] [INS] [002af028] test	r8d, r8d                                                 ; 0x1 vs 0x1
[main] [INS] [002af02b] jg	0x2af42d
[main] [INS] [002af42d] movsxd	r10, r8d                                               ; r10 = 0x1
[main] [INS] [002af430] mov	esi, 0x20                                                 ; esi = 0x20
[main] [INS] [002af435] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002af438] mov	rdx, r10                                                  ; rdx = 0x1
[main] [INS] [002af43b] mov	qword ptr [rbp - 0x4e0], r10                              ; store(0x7f000008bd30,0x1)
[main] [INS] [002af442] mov	qword ptr [rbp - 0x558], r11                              ; store(0x7f000008bcb8,0x3ab1b) -> 202020200a002064
[main] [INS] [002af449] mov	dword ptr [rbp - 0x548], ecx                              ; store(0x7f000008bcc8,0x0)
[main] [INS] [002af44f] mov	dword ptr [rbp - 0x520], r9d                              ; store(0x7f000008bcf0,0x0)
[main] [INS] [002af456] mov	dword ptr [rbp - 0x4e8], r8d                              ; store(0x7f000008bd28,0x1)
[main] [INS] [002af45d] call	0x2d2260                                                 ; call(0x2d2260)
[main] [INS] [002d2260] push	r15                                                      ; push(0x64)
[main] [INS] [002d2262] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002d2264] lea	r14, [rip + 0x13bdd5]                                     ; r14 = 0x40e040 -> "        "
[main] [INS] [002d226b] push	r13                                                      ; push(0x0)
[main] [INS] [002d226d] push	r12                                                      ; push(0x7f000008c220) -> 3000000020
[main] [INS] [002d226f] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002d2272] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002d2273] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002d2274] mov	rbp, rdi                                                  ; rbp = 0x63e760 -> fbad2884
[main] [INS] [002d2277] sub	rsp, 0x38                                                 ; rsp = 0x7f000008bc30 -> 0
[main] [INS] [002d227b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002d2284] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008bc58,0x59424d4f444e4100)
[main] [INS] [002d2289] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002d228b] cmp	esi, 0x20                                                 ; 0x20 vs 0x20
[main] [INS] [002d228e] je	0x2d22c6
[main] [INS] [002d22c6] cmp	r12d, 0xf                                                 ; 0x1 vs 0xf
[main] [INS] [002d22ca] mov	r15d, r12d                                                ; r15d = 0x1
[main] [INS] [002d22cd] jle	0x2d2340
[main] [INS] [002d2340] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [002d2342] nop	word ptr [rax + rax]
[main] [INS] [002d2348] test	r15d, r15d                                               ; 0x1 vs 0x1
[main] [INS] [002d234b] jle	0x2d2381
[main] [INS] [002d234d] mov	r12, qword ptr [rbp + 0xd8]                               ; r12 = 0x63a2a0 -> 0
[main] [INS] [002d2354] lea	rdx, [rip + 0x367405]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002d235b] lea	rax, [rip + 0x368166]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002d2362] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002d2365] mov	rdi, r12                                                  ; rdi = 0x63a2a0 -> 0
[main] [INS] [002d2368] sub	rdi, rdx                                                  ; rdi = 0xb40
[main] [INS] [002d236b] cmp	rax, rdi                                                  ; 0xd68 vs 0xb40
[main] [INS] [002d236e] jbe	0x2d23a3
[main] [INS] [002d2370] movsxd	rdx, r15d                                              ; rdx = 0x1
[main] [INS] [002d2373] mov	rsi, r14                                                  ; rsi = 0x40e040 -> "        "
[main] [INS] [002d2376] mov	rdi, rbp                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002d2379] call	qword ptr [r12 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x1)
[main] [INS] [002dd932] push	r14                                                      ; push(0x40e040) -> "        "
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x0)
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bbe0 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x40e040 -> "        "
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c8a -> a
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c8a
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfd6
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfd6 vs 0xfd6
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfd6
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x40e040 -> "        "
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x40e041 -> "        "
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c8a -> a
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c8b -> 0
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x40e041 -> "        "
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c8b -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x20
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c8a,0x20)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c8b) -> 0
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bbf8 -> 0
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x63a2a0 -> 0
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x40e040 -> "        "
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x1
[main] [INS] [002dd9b4] ret	
[main] [INS] [002d237e] add	rbx, rax                                                  ; rbx = 0x1
[main] [INS] [002d2381] mov	rdi, qword ptr [rsp + 0x28]                               ; rdi = 0x59424d4f444e4100
[main] [INS] [002d2386] xor	rdi, qword ptr fs:[0x28]                                  ; rdi = 0x0
[main] [INS] [002d238f] mov	rax, rbx                                                  ; rax = 0x1
[main] [INS] [002d2392] jne	0x2d23aa
[main] [INS] [002d2394] add	rsp, 0x38                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002d2398] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002d2399] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002d239a] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000020
[main] [INS] [002d239c] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002d239e] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002d23a0] pop	r15                                                       ; r15 = 0x64
[main] [INS] [002d23a2] ret	
[main] [INS] [002af462] mov	r10, qword ptr [rbp - 0x4e0]                              ; r10 = 0x1
[main] [INS] [002af469] cmp	r10, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002af46c] jne	0x2add00
[main] [INS] [002af472] cmp	r13d, 0x7ffffffe                                          ; 0x0 vs 0x7ffffffe
[main] [INS] [002af479] mov	r8d, dword ptr [rbp - 0x4e8]                              ; r8d = 0x1
[main] [INS] [002af480] mov	r9d, dword ptr [rbp - 0x520]                              ; r9d = 0x0
[main] [INS] [002af487] mov	ecx, dword ptr [rbp - 0x548]                              ; ecx = 0x0
[main] [INS] [002af48d] mov	r11, qword ptr [rbp - 0x558]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002af494] ja	0x2b04d3
[main] [INS] [002af49a] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002af49f] sub	eax, r13d                                                 ; eax = 0x7fffffff
[main] [INS] [002af4a2] cmp	eax, r8d                                                  ; 0x7fffffff vs 0x1
[main] [INS] [002af4a5] jb	0x2aec30
[main] [INS] [002af4ab] add	r13d, r8d                                                 ; r13d = 0x1
[main] [INS] [002af4ae] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002af4b1] jmp	0x2aeb11                                                  ; jmp(0x2aeb11)
[main] [INS] [002aeb11] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002aeb14] je	0x2aedfd
[main] [INS] [002aedfd] mov	eax, dword ptr [rbp - 0x4f8]                              ; eax = 0x1
[main] [INS] [002aee03] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [002aee05] je	0x2af167
[main] [INS] [002aee0b] mov	rax, qword ptr [r14 + 0x28]                               ; rax = 0x90018c8b -> 0
[main] [INS] [002aee0f] cmp	rax, qword ptr [r14 + 0x30]                               ; 0x90018c8b vs 0x90019c60
[main] [INS] [002aee13] jae	0x2b0046
[main] [INS] [002aee19] lea	rdx, [rax + 1]                                            ; rdx = 0x90018c8c -> 0
[main] [INS] [002aee1d] mov	qword ptr [r14 + 0x28], rdx                               ; store(0x63e788,0x90018c8c) -> 0
[main] [INS] [002aee21] mov	byte ptr [rax], 0x2b                                      ; store(0x90018c8b,0x2b)
[main] [INS] [002aee24] jmp	0x2aeb33                                                  ; jmp(0x2aeb33)
[main] [INS] [002aeb33] cmp	r13d, 0x7fffffff                                          ; 0x1 vs 0x7fffffff
[main] [INS] [002aeb3a] je	0x2add00
[main] [INS] [002aeb40] add	r13d, 1                                                   ; r13d = 0x2
[main] [INS] [002aeb44] cmp	qword ptr [rbp - 0x518], 0                                ; 0x4 vs 0x0
[main] [INS] [002aeb4c] je	0x2aebb1
[main] [INS] [002aeb4e] cmp	dword ptr [rbp - 0x530], 0x10                             ; 0xa vs 0x10
[main] [INS] [002aeb55] jne	0x2aebb1
[main] [INS] [002aebb1] add	ecx, r8d                                                  ; ecx = 0x0
[main] [INS] [002aebb4] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [002aebb6] jg	0x2aef00
[main] [INS] [002aebbc] test	r13d, r13d                                               ; 0x2 vs 0x2
[main] [INS] [002aebbf] js	0x2b0416
[main] [INS] [002aebc5] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002aebcc] lea	rsi, [rip + 0x38ab8d]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002aebd3] mov	rax, r15                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002aebd6] sub	rax, rsi                                                  ; rax = 0xb40
[main] [INS] [002aebd9] cmp	qword ptr [rbp - 0x4d0], rax                              ; 0xd68 vs 0xb40
[main] [INS] [002aebe0] jbe	0x2af960
[main] [INS] [002aebe6] mov	rsi, qword ptr [rbp - 0x528]                              ; rsi = 0x7f000008c1d7 -> 424d4f444e410034
[main] [INS] [002aebed] mov	qword ptr [rbp - 0x4e0], r11                              ; store(0x7f000008bd30,0x3ab1b) -> 202020200a002064
[main] [INS] [002aebf4] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002aebf7] mov	rdx, qword ptr [rbp - 0x510]                              ; rdx = 0x1
[main] [INS] [002aebfe] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x2)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x7f000008c1d7 -> 424d4f444e410034
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c8c -> 0
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c8c
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfd4
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfd4 vs 0xfd4
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfd4
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x7f000008c1d7 -> 424d4f444e410034
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c8c -> 0
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c8d -> 0
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c8d -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x34
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c8c,0x34)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c8d) -> 0
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x2
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002aec02] mov	rsi, qword ptr [rbp - 0x510]                              ; rsi = 0x1
[main] [INS] [002aec09] cmp	rsi, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002aec0c] jne	0x2add00
[main] [INS] [002aec12] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002aec17] mov	r11, qword ptr [rbp - 0x4e0]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002aec1e] sub	eax, r13d                                                 ; eax = 0x7ffffffd
[main] [INS] [002aec21] cdqe	
[main] [INS] [002aec23] cmp	rax, rsi                                                  ; 0x7ffffffd vs 0x1
[main] [INS] [002aec26] jge	0x2ae21b
[main] [INS] [002ae21b] add	r13d, dword ptr [rbp - 0x4c8]                             ; r13d = 0x3
[main] [INS] [002ae222] jmp	0x2ad930                                                  ; jmp(0x2ad930)
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008bcdc,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bd48,0x3ab1c) -> 202020200a0020
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab1c -> 202020200a0020
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb1c
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb1c vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x2a2e25002064332500202020200a0020
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x2a2e25002064332500202020200a0020
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff00000000ff0000000000000000
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff00000000ff0000000000ff00
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xffff000000ffff0000000000ff00
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x3182 -> 8000000000024
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x3182 vs 0x3182
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x1
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab1d -> 2500202020200a00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x3 vs 0x3
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bd48,0x3ab1d) -> 2500202020200a00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x1
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x1
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x1)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x3)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x3ab1c -> 202020200a0020
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c8d -> 0
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c8d
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfd3
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfd3 vs 0xfd3
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfd3
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x3ab1c -> 202020200a0020
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x3ab1d -> 2500202020200a00
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c8d -> 0
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c8e -> 0
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x3ab1d -> 2500202020200a00
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c8e -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x20
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c8d,0x20)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c8e) -> 0
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x3
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x1
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffffc
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x1 vs 0x7ffffffc
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x4
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x4
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c1e8 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x2
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x1
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x0
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x4
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x4
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c2f8 -> 7f000008c410
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0038452e] ret	
[main] [INS] [0000f0f6] add	qword ptr [rip + 0x23839a], 1                             ; store(0x247498,0x1)
[main] [INS] [0000f0fe] cmp	dword ptr [rbx + 0x38], 0x63                              ; 0x4 vs 0x63
[main] [INS] [0000f102] jle	0xedd7
[main] [INS] [0000edd7] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000edd9] test	r14d, r14d                                               ; 0x0 vs 0x0
[main] [INS] [0000eddc] jle	0xee09
[main] [INS] [0000ee09] mov	rsi, qword ptr [rip + 0x23a608]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ee10] mov	edi, 0x5e                                                 ; edi = 0x5e
[main] [INS] [0000ee15] add	qword ptr [rip + 0x2386bb], 1                             ; store(0x2474d8,0x1)
[main] [INS] [0000ee1d] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x5e
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x5e
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c8e -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c8e vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c8f -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c8f) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c8e,0x5e)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x5e
[main] [INS] [002d980c] ret	
[main] [INS] [0000ee22] add	qword ptr [rip + 0x2386b6], 1                             ; store(0x2474e0,0x1)
[main] [INS] [0000ee2a] test	r13d, r13d                                               ; 0x1 vs 0x1
[main] [INS] [0000ee2d] jle	0xee82
[main] [INS] [0000ee2f] cmp	r13d, 1                                                   ; 0x1 vs 0x1
[main] [INS] [0000ee33] je	0xee69
[main] [INS] [0000ee69] mov	rsi, qword ptr [rip + 0x23a5a8]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ee70] mov	edi, 0x5e                                                 ; edi = 0x5e
[main] [INS] [0000ee75] add	qword ptr [rip + 0x23867b], 1                             ; store(0x2474f8,0x1)
[main] [INS] [0000ee7d] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x5e
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x5e
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c8f -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c8f vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c90 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c90) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c8f,0x5e)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x5e
[main] [INS] [002d980c] ret	
[main] [INS] [0000ee82] sub	r12d, r14d                                                ; r12d = 0x2
[main] [INS] [0000ee85] mov	eax, r12d                                                 ; eax = 0x2
[main] [INS] [0000ee88] sub	eax, r13d                                                 ; eax = 0x1
[main] [INS] [0000ee8b] cmp	eax, -3                                                   ; 0x1 vs 0x-3
[main] [INS] [0000ee8e] jl	0xeec9
[main] [INS] [0000ee90] lea	r12d, [rax + 4]                                           ; r12d = 0x5
[main] [INS] [0000ee94] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000ee96] nop	word ptr cs:[rax + rax]
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x1
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c90 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c90 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c91 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c91) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c90,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x1 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x2
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c91 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c91 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c92 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c92) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c91,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x2 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x3
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c92 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c92 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c93 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c93) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c92,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x3 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x4
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c93 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c93 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c94 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c94) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c93,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x4 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x5
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c94 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c94 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c95 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c95) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c94,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x5 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eec9] mov	ecx, dword ptr [rbx + 0x3c]                               ; ecx = 0x2
[main] [INS] [0000eecc] movsxd	r8, dword ptr [rbx + 0x38]                             ; r8 = 0x4
[main] [INS] [0000eed0] add	qword ptr [rip + 0x238638], 1                             ; store(0x247510,0x1)
[main] [INS] [0000eed8] add	r8, qword ptr [rip + 0x23a4f1]                            ; r8 = 0x9000c3a4 -> "\K)ab"
[main] [INS] [0000eedf] test	ecx, ecx                                                 ; 0x2 vs 0x2
[main] [INS] [0000eee1] je	0xf030
[main] [INS] [0000eee7] add	qword ptr [rip + 0x238629], 1                             ; store(0x247518,0x1)
[main] [INS] [0000eeef] mov	rdi, qword ptr [rip + 0x23a522]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000eef6] lea	rdx, [rip + 0x2bc2c]                                      ; rdx = 0x3ab29 -> "%.*s"
[main] [INS] [0000eefd] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000ef02] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000ef04] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x5)
[main] [INS] [003843c1] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3ab29 -> "%.*s"
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c220 -> 3000000020
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c258,0x2)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c260,0x9000c3a4) -> "\K)ab"
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c268,0x3c03a0) -> 66c3ff5788ff568a
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c238,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c310 -> 0
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c220 -> 3000000020
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3ab29 -> "%.*s"
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c220,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c224,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c228,0x7f000008c310) -> 0
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c240 -> d
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c230,0x7f000008c240) -> d
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x0)
[main] [INS] [002ad398] push	r13                                                      ; push(0x1)
[main] [INS] [002ad39a] push	r12                                                      ; push(0x5)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008bca0 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c1d8,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bd58,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3ab29 vs 0x3ab29
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c240 -> d
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3ab29 -> "%.*s"
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c3100000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bdd8,0x7f000008c240) -> d
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bdc8,0x7f000008c3100000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab29 -> "%.*s"
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb29
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb29 vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x6b72614d2074736574614c00732a2e25
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x6b72614d2074736574614c00732a2e25
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff00000000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x11
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x11 vs 0x11
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab29 -> "%.*s"
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bd50,0x3ab29) -> "%.*s"
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bda8,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bda0,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bd40,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3ab29 -> "%.*s"
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3ab29 -> "%.*s"
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3ab29 -> "%.*s"
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3ab29 -> "%.*s"
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bdf0 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008bcd8,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008bcdc,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008bcd0,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008bcc0,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008bd20,0x7f000008bdf0) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x2e
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3ab2a -> ".*s"
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0xe
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0xe vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x2e
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0xe
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x9
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xd0
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2addb0 -> 438d49017bb60f45
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bdf0 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008bcf0,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008bce8,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008bcf8,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008bd00,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bd18,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bd10,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008bd08,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008bd28,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bd30,0x7f000008c1d8) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bd38,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2addb0)
[main] [INS] [002addb0] movzx	r15d, byte ptr [r11 + 1]                                ; r15d = 0x2a
[main] [INS] [002addb5] lea	rax, [r11 + 1]                                            ; rax = 0x3ab2b -> 736574614c00732a
[main] [INS] [002addb9] cmp	r15b, 0x2a                                                ; 0x2a vs 0x2a
[main] [INS] [002addbd] je	0x2af57a
[main] [INS] [002af57a] movzx	eax, byte ptr [r11 + 2]                                 ; eax = 0x73
[main] [INS] [002af57f] lea	rsi, [r11 + 2]                                            ; rsi = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af583] sub	eax, 0x30                                                 ; eax = 0x43
[main] [INS] [002af586] cmp	eax, 9                                                    ; 0x43 vs 0x9
[main] [INS] [002af589] jbe	0x2afd17
[main] [INS] [002af58f] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002af593] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002af596] ja	0x2b0333
[main] [INS] [002af59c] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002af59e] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c258 -> 2
[main] [INS] [002af5a3] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002af5a6] mov	dword ptr [r12], eax                                      ; store(0x7f000008c220,0x20)
[main] [INS] [002af5aa] mov	ecx, dword ptr [rdx]                                      ; ecx = 0x2
[main] [INS] [002af5ac] test	ecx, ecx                                                 ; 0x2 vs 0x2
[main] [INS] [002af5ae] js	0x2afb93
[main] [INS] [002af5b4] mov	r11, rsi                                                  ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af5b7] cmp	r10d, 0x3c8                                               ; 0x0 vs 0x3c8
[main] [INS] [002af5be] mov	eax, 0x3c8                                                ; eax = 0x3c8
[main] [INS] [002af5c3] cmovge	eax, r10d                                              ; eax = 0x3c8
[main] [INS] [002af5c7] cmp	eax, ecx                                                  ; 0x3c8 vs 0x2
[main] [INS] [002af5c9] jge	0x2b0295
[main] [INS] [002b0295] movzx	r15d, byte ptr [r11]                                    ; r15d = 0x73
[main] [INS] [002b0299] jmp	0x2adddd                                                  ; jmp(0x2adddd)
[main] [INS] [002adddd] lea	eax, [r15 - 0x20]                                         ; eax = 0x53
[main] [INS] [002adde1] cmp	al, 0x5a                                                  ; 0x53 vs 0x5a
[main] [INS] [002adde3] ja	0x2adce0
[main] [INS] [002adde9] movsx	eax, r15b                                               ; eax = 0x73
[main] [INS] [002added] lea	rdx, [rip + 0x151cec]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002addf4] lea	rsi, [rip - 0x11b]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002addfb] sub	eax, 0x20                                                 ; eax = 0x53
[main] [INS] [002addfe] cdqe	
[main] [INS] [002ade00] movzx	edx, byte ptr [rdx + rax]                               ; edx = 0x15
[main] [INS] [002ade04] lea	rax, [rip + 0x151b55]                                     ; rax = 0x3ff960 -> 0
[main] [INS] [002ade0b] movsxd	rax, dword ptr [rax + rdx*4]                           ; rax = 0xfffffffffffffd40
[main] [INS] [002ade0f] add	rax, rsi                                                  ; rax = 0x2ada20 -> f2ff88324048b41
[main] [INS] [002ade12] jmp	rax                                                       ; jmp(0x2ada20)
[main] [INS] [002ada20] mov	eax, dword ptr [r12]                                      ; eax = 0x20
[main] [INS] [002ada24] cmp	eax, 0x2f                                                 ; 0x20 vs 0x2f
[main] [INS] [002ada27] ja	0x2b056d
[main] [INS] [002ada2d] mov	edx, eax                                                  ; edx = 0x20
[main] [INS] [002ada2f] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c260 -> 9000c3a4
[main] [INS] [002ada34] add	eax, 8                                                    ; eax = 0x28
[main] [INS] [002ada37] mov	dword ptr [r12], eax                                      ; store(0x7f000008c220,0x28)
[main] [INS] [002ada3b] mov	r8, qword ptr [rdx]                                       ; r8 = 0x9000c3a4 -> "\K)ab"
[main] [INS] [002ada3e] test	r8, r8                                                   ; 0x9000c3a4 vs 0x9000c3a4
[main] [INS] [002ada41] je	0x2af0ae
[main] [INS] [002ada47] cmp	r15b, 0x53                                                ; 0x73 vs 0x53
[main] [INS] [002ada4b] je	0x2af1af
[main] [INS] [002ada51] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002ada54] jne	0x2af1af
[main] [INS] [002ada5a] cmp	ecx, -1                                                   ; 0x2 vs 0x-1
[main] [INS] [002ada5d] je	0x2af4b6
[main] [INS] [002ada63] movsxd	rsi, ecx                                               ; rsi = 0x2
[main] [INS] [002ada66] mov	rdi, r8                                                   ; rdi = 0x9000c3a4 -> "\K)ab"
[main] [INS] [002ada69] mov	dword ptr [rbp - 0x500], r10d                             ; store(0x7f000008bd10,0x0)
[main] [INS] [002ada70] mov	qword ptr [rbp - 0x4e8], r11                              ; store(0x7f000008bd28,0x3ab2c) -> 74736574614c0073
[main] [INS] [002ada77] mov	qword ptr [rbp - 0x4e0], r8                               ; store(0x7f000008bd30,0x9000c3a4) -> "\K)ab"
[main] [INS] [002ada7e] call	0x273000                                                 ; call(0x273000)
[main] [INS] [00273000] jmp	qword ptr [rip + 0x3ca022]                                ; jmp(0x3037c0)
[main] [INS] [003037c0] test	rsi, rsi                                                 ; 0x2 vs 0x2
[main] [INS] [003037c3] jne	0x3037c9
[main] [INS] [003037c9] add	rsi, rdi                                                  ; rsi = 0x9000c3a6 -> ")ab"
[main] [INS] [003037cc] mov	r10, rsi                                                  ; r10 = 0x9000c3a6 -> ")ab"
[main] [INS] [003037cf] and	r10, 0xffffffffffffffc0                                   ; r10 = 0x9000c380 -> 0
[main] [INS] [003037d3] mov	r11, rsi                                                  ; r11 = 0x9000c3a6 -> ")ab"
[main] [INS] [003037d6] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [003037da] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [003037de] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [003037e2] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [003037e6] mov	rax, rdi                                                  ; rax = 0x9000c3a4 -> "\K)ab"
[main] [INS] [003037e9] mov	rcx, rdi                                                  ; rcx = 0x9000c3a4 -> "\K)ab"
[main] [INS] [003037ec] and	rcx, 0xfff                                                ; rcx = 0x3a4
[main] [INS] [003037f3] cmp	rcx, 0xfcf                                                ; 0x3a4 vs 0xfcf
[main] [INS] [003037fa] ja	0x303870
[main] [INS] [003037fc] and	rax, 0xfffffffffffffff0                                   ; rax = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [00303800] pcmpeqb	xmm0, xmmword ptr [rax]                               ; xmm0 = 0xffffffffffffff000000000000000000
[main] [INS] [00303804] pcmpeqb	xmm1, xmmword ptr [rax + 0x10]                        ; xmm1 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00303809] pcmpeqb	xmm2, xmmword ptr [rax + 0x20]                        ; xmm2 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [0030380e] pcmpeqb	xmm3, xmmword ptr [rax + 0x30]                        ; xmm3 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00303813] pmovmskb	esi, xmm0                                            ; esi = 0xfe00 -> 100239718058348
[main] [INS] [00303817] pmovmskb	edx, xmm1                                            ; edx = 0xffff -> 1246c8d41010023
[main] [INS] [0030381b] pmovmskb	r8d, xmm2                                            ; r8d = 0xffff -> 1246c8d41010023
[main] [INS] [00303820] pmovmskb	ecx, xmm3                                            ; ecx = 0xffff -> 1246c8d41010023
[main] [INS] [00303824] shl	rdx, 0x10                                                 ; rdx = 0xffff0000
[main] [INS] [00303828] shl	rcx, 0x10                                                 ; rcx = 0xffff0000
[main] [INS] [0030382c] or	rdx, rsi                                                   ; rdx = 0xfffffe00
[main] [INS] [0030382f] or	rcx, r8                                                    ; rcx = 0xffffffff
[main] [INS] [00303832] shl	rcx, 0x20                                                 ; rcx = 0xffffffff00000000
[main] [INS] [00303836] or	rdx, rcx                                                   ; rdx = 0xfffffffffffffe00
[main] [INS] [00303839] mov	rcx, rdi                                                  ; rcx = 0x9000c3a4 -> "\K)ab"
[main] [INS] [0030383c] xor	rcx, rax                                                  ; rcx = 0x4
[main] [INS] [0030383f] mov	rsi, r11                                                  ; rsi = 0x9000c3a6 -> ")ab"
[main] [INS] [00303842] sub	rsi, rax                                                  ; rsi = 0x6
[main] [INS] [00303845] and	rax, 0xffffffffffffffc0                                   ; rax = 0x9000c380 -> 0
[main] [INS] [00303849] test	rsi, -0x40                                               ; 0x6 vs 0x-40
[main] [INS] [00303850] je	0x3038d3
[main] [INS] [003038d3] bts	rdx, rsi                                                  ; rdx = 0xfffffffffffffe40
[main] [INS] [003038d7] sar	rdx, cl                                                   ; rdx = 0xffffffffffffffe4
[main] [INS] [003038da] test	rdx, rdx                                                 ; 0xffffffffffffffe4 vs 0xffffffffffffffe4
[main] [INS] [003038dd] je	0x3038f0
[main] [INS] [003038df] bsf	rax, rdx                                                  ; rax = 0x2
[main] [INS] [003038e3] ret	
[main] [INS] [002ada83] mov	r8, qword ptr [rbp - 0x4e0]                               ; r8 = 0x9000c3a4 -> "\K)ab"
[main] [INS] [002ada8a] mov	r11, qword ptr [rbp - 0x4e8]                              ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002ada91] mov	r9, rax                                                   ; r9 = 0x2
[main] [INS] [002ada94] mov	r10d, dword ptr [rbp - 0x500]                             ; r10d = 0x0
[main] [INS] [002ada9b] mov	ecx, eax                                                  ; ecx = 0x2
[main] [INS] [002ada9d] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bd18,0x0)
[main] [INS] [002adaa7] sub	r10d, ecx                                                 ; r10d = 0xfffffffe
[main] [INS] [002adaaa] mov	dword ptr [rbp - 0x4e8], r10d                             ; store(0x7f000008bd28,0xfffffffe)
[main] [INS] [002adab1] js	0x2aefa0
[main] [INS] [002aefa0] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [002aefa3] js	0x2b053b
[main] [INS] [002aefa9] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002aefb0] lea	rdi, [rip + 0x38a7a9]                                     ; rdi = 0x639760 -> 0
[main] [INS] [002aefb7] mov	rax, r15                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002aefba] sub	rax, rdi                                                  ; rax = 0xb40
[main] [INS] [002aefbd] cmp	qword ptr [rbp - 0x4d0], rax                              ; 0xd68 vs 0xb40
[main] [INS] [002aefc4] jbe	0x2afdc8
[main] [INS] [002aefca] mov	rdx, r9                                                   ; rdx = 0x2
[main] [INS] [002aefcd] mov	qword ptr [rbp - 0x4c8], r9                               ; store(0x7f000008bd48,0x2)
[main] [INS] [002aefd4] mov	dword ptr [rbp - 0x4e8], ecx                              ; store(0x7f000008bd28,0x2)
[main] [INS] [002aefda] mov	qword ptr [rbp - 0x4e0], r11                              ; store(0x7f000008bd30,0x3ab2c) -> 74736574614c0073
[main] [INS] [002aefe1] mov	rsi, r8                                                   ; rsi = 0x9000c3a4 -> "\K)ab"
[main] [INS] [002aefe4] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002aefe7] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000028
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x2 vs 0x2
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x9000c3a4 -> "\K)ab"
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x2
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c95 -> 0
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c95
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfcb
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfcb vs 0xfcb
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x2 vs 0xfcb
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x9000c3a4 -> "\K)ab"
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x2
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x2
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x2
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x9000c3a6 -> ")ab"
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c95 -> 0
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c97 -> 0
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x2 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb16c0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x9000c3a6 -> ")ab"
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c97 -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c0580 -> fe578966fe568b66
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c0580)
[main] [INS] [003c0580] mov	dx, word ptr [rsi - 2]                                    ; dx = 0x4b5c -> 245be000000000
[main] [INS] [003c0584] mov	word ptr [rdi - 2], dx                                    ; store(0x90018c95,0x4b5c) -> 245be000000000
[main] [INS] [003c0588] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c97) -> 0
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x2
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x2
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x2
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000028
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002aefeb] mov	r9, qword ptr [rbp - 0x4c8]                               ; r9 = 0x2
[main] [INS] [002aeff2] cmp	r9, rax                                                   ; 0x2 vs 0x2
[main] [INS] [002aeff5] jne	0x2add00
[main] [INS] [002aeffb] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002af000] mov	r11, qword ptr [rbp - 0x4e0]                              ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af007] mov	ecx, dword ptr [rbp - 0x4e8]                              ; ecx = 0x2
[main] [INS] [002af00d] sub	eax, r13d                                                 ; eax = 0x7fffffff
[main] [INS] [002af010] cdqe	
[main] [INS] [002af012] cmp	r9, rax                                                   ; 0x2 vs 0x7fffffff
[main] [INS] [002af015] ja	0x2aec30
[main] [INS] [002af01b] add	r13d, ecx                                                 ; r13d = 0x2
[main] [INS] [002af01e] jmp	0x2ad930                                                  ; jmp(0x2ad930)
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008bcdc,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bd48,0x3ab2d) -> 2074736574614c00
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab2d -> 2074736574614c00
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb2d
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb2d vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x753c203a6b72614d2074736574614c00
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x753c203a6b72614d2074736574614c00
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0x0
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab2d -> 2074736574614c00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x2 vs 0x2
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bd48,0x3ab2d) -> 2074736574614c00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x0
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x0
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x0)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x2)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000028
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000028
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x2
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffffd
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x0 vs 0x7ffffffd
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x2
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x2
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c1e8 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x5
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x1
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x0
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x2
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x2
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c2f8 -> 7f000008c410
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x5
[main] [INS] [0038452e] ret	
[main] [INS] [0000ef09] mov	rsi, qword ptr [rip + 0x23a508]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ef10] mov	edi, 0xa                                                  ; edi = 0xa
[main] [INS] [0000ef15] add	qword ptr [rip + 0x238603], 1                             ; store(0x247520,0x1)
[main] [INS] [0000ef1d] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0xa
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0xa
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c97 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c97 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c98 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c98) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c97,0xa)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0xa
[main] [INS] [002d980c] ret	
[main] [INS] [0000ef22] add	qword ptr [rip + 0x2385fe], 1                             ; store(0x247528,0x1)
[main] [INS] [0000ef2a] mov	rax, qword ptr [rbx + 0x40]                               ; rax = 0x0
[main] [INS] [0000ef2e] cmp	rax, qword ptr [rip + 0x23a4ab]                           ; 0x0 vs 0x0
[main] [INS] [0000ef35] mov	dword ptr [rip + 0x23a4bd], 0                             ; store(0x2493fc,0x0)
[main] [INS] [0000ef3f] je	0xefc0
[main] [INS] [0000efc0] mov	rax, qword ptr [rbx + 0x30]                               ; rax = 0x0
[main] [INS] [0000efc4] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [0000efc7] je	0xefdb
[main] [INS] [0000efdb] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000efdd] mov	eax, dword ptr [rip + 0x23a421]                           ; eax = 0xffffffff
[main] [INS] [0000efe3] cmp	dword ptr [rbx + 4], eax                                  ; 0xff vs 0xffffffff
[main] [INS] [0000efe6] je	0xf040
[main] [INS] [0000efe8] add	rsp, 8                                                    ; rsp = 0x7f000008c318 -> 76
[main] [INS] [0000efec] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000efee] pop	rbx                                                       ; rbx = 0x76
[main] [INS] [0000efef] pop	rbp                                                       ; rbp = 0x76
[main] [INS] [0000eff0] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eff2] pop	r13                                                       ; r13 = 0x9003a054 -> 760302000400ff76
[main] [INS] [0000eff4] pop	r14                                                       ; r14 = 0x9004208f -> 62
[main] [INS] [0000eff6] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [0000eff8] ret	
[main] [INS] [00029f7e] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f80] mov	r9d, eax                                                  ; r9d = 0x0
[main] [INS] [00029f83] jg	0x2f6d4
[main] [INS] [00029f89] add	qword ptr [rip + 0x22419f], 1                             ; store(0x24e130,0x1)
[main] [INS] [00029f91] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f93] jne	0x2f6d7
[main] [INS] [00029f99] add	qword ptr [rip + 0x224197], 1                             ; store(0x24e138,0x1)
[main] [INS] [00029fa1] movzx	eax, byte ptr [r13 + 6]                                 ; eax = 0x3
[main] [INS] [00029fa6] add	r13, 6                                                    ; r13 = 0x9003a05a -> 7800000600ff7603
[main] [INS] [00029faa] add	qword ptr [rip + 0x224196], 1                             ; store(0x24e148,0x1)
[main] [INS] [00029fb2] jmp	0x28b50                                                   ; jmp(0x28b50)
[main] [INS] [00028b50] add	qword ptr [rip + 0x225008], 1                             ; store(0x24db60,0x1)
[main] [INS] [00028b58] jmp	0x288b7                                                   ; jmp(0x288b7)
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x3
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x3 vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x3
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x3
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffe9bf0
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x29500 -> 583480145b60f41
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x29500)
[main] [INS] [00029500] movzx	eax, byte ptr [r13 + 1]                                 ; eax = 0x76
[main] [INS] [00029505] add	qword ptr [rip + 0x224eeb], 1                             ; store(0x24e3f8,0x1)
[main] [INS] [0002950d] add	r13, 1                                                    ; r13 = 0x9003a05b -> 7800000600ff76
[main] [INS] [00029511] mov	qword ptr [rsp + 8], r14                                  ; store(0x7f000008c358,0x9004208f) -> 62
[main] [INS] [00029516] jmp	0x28b50                                                   ; jmp(0x28b50)
[main] [INS] [00028b50] add	qword ptr [rip + 0x225008], 1                             ; store(0x24db60,0x1)
[main] [INS] [00028b58] jmp	0x288b7                                                   ; jmp(0x288b7)
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x76
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x76
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffea578
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x29e88 -> 48002262e9158b48
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x29e88)
[main] [INS] [00029e88] mov	rdx, qword ptr [rip + 0x2262e9]                           ; rdx = 0xeb80 -> "AWAVAUAT"
[main] [INS] [00029e8f] test	rdx, rdx                                                 ; 0xeb80 vs 0xeb80
[main] [INS] [00029e92] je	0x29fa1
[main] [INS] [00029e98] mov	dword ptr [rsp + 0xc0], 2                                 ; store(0x7f000008c410,0x2)
[main] [INS] [00029ea3] movzx	eax, byte ptr [r13 + 1]                                 ; eax = 0xff
[main] [INS] [00029ea8] mov	rdi, r14                                                  ; rdi = 0x9004208f -> 62
[main] [INS] [00029eab] mov	rcx, qword ptr [r12 + 0xa8]                               ; rcx = 0x90042090 -> 0
[main] [INS] [00029eb3] add	qword ptr [rip + 0x224265], 1                             ; store(0x24e120,0x1)
[main] [INS] [00029ebb] mov	dword ptr [rsp + 0xc4], eax                               ; store(0x7f000008c414,0xff)
[main] [INS] [00029ec2] mov	rax, qword ptr [r12 + 0x18]                               ; rax = 0x90018700 -> ffffffffffffffff
[main] [INS] [00029ec7] mov	qword ptr [rsp + 0xc8], rax                               ; store(0x7f000008c418,0x90018700) -> ffffffffffffffff
[main] [INS] [00029ecf] mov	rax, qword ptr [r12 + 0xa0]                               ; rax = 0x9004208e -> 6261
[main] [INS] [00029ed7] sub	rcx, rax                                                  ; rcx = 0x2
[main] [INS] [00029eda] sub	rdi, rax                                                  ; rdi = 0x1
[main] [INS] [00029edd] mov	qword ptr [rsp + 0xd0], rax                               ; store(0x7f000008c420,0x9004208e) -> 6261
[main] [INS] [00029ee5] mov	dword ptr [rsp + 0xd8], ecx                               ; store(0x7f000008c428,0x2)
[main] [INS] [00029eec] mov	rcx, qword ptr [rsp + 8]                                  ; rcx = 0x9004208f -> 62
[main] [INS] [00029ef1] mov	dword ptr [rsp + 0xe0], edi                               ; store(0x7f000008c430,0x1)
[main] [INS] [00029ef8] mov	edi, dword ptr [rsp + 0x68]                               ; edi = 0x2
[main] [INS] [00029efc] sub	rcx, rax                                                  ; rcx = 0x1
[main] [INS] [00029eff] mov	dword ptr [rsp + 0xdc], ecx                               ; store(0x7f000008c42c,0x1)
[main] [INS] [00029f06] movzx	eax, word ptr [r13 + 2]                                 ; eax = 0x600
[main] [INS] [00029f0b] rol	ax, 8                                                     ; ax = 0x6
[main] [INS] [00029f0f] movzx	eax, ax                                                 ; eax = 0x6
[main] [INS] [00029f12] mov	dword ptr [rsp + 0xf8], eax                               ; store(0x7f000008c448,0x6)
[main] [INS] [00029f19] movzx	eax, word ptr [r13 + 4]                                 ; eax = 0x0
[main] [INS] [00029f1e] rol	ax, 8                                                     ; ax = 0x0
[main] [INS] [00029f22] movzx	eax, ax                                                 ; eax = 0x0
[main] [INS] [00029f25] mov	dword ptr [rsp + 0xfc], eax                               ; store(0x7f000008c44c,0x0)
[main] [INS] [00029f2c] mov	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f2e] shr	eax, 0x1f                                                 ; eax = 0x0
[main] [INS] [00029f31] add	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f33] sar	eax, 1                                                    ; eax = 0x1
[main] [INS] [00029f35] mov	dword ptr [rsp + 0xe4], eax                               ; store(0x7f000008c434,0x1)
[main] [INS] [00029f3c] movzx	eax, word ptr [r12 + 0xd0]                              ; eax = 0x0
[main] [INS] [00029f45] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f47] je	0x2dbd0
[main] [INS] [0002dbd0] mov	dword ptr [rsp + 0xe8], 0xffffffff                        ; store(0x7f000008c438,0xffffffff)
[main] [INS] [0002dbdb] add	qword ptr [rip + 0x220545], 1                             ; store(0x24e128,0x1)
[main] [INS] [0002dbe3] jmp	0x29f54                                                   ; jmp(0x29f54)
[main] [INS] [00029f54] mov	rax, qword ptr [r12 + 0xf8]                               ; rax = 0x0
[main] [INS] [00029f5c] lea	rdi, [rsp + 0xc0]                                         ; rdi = 0x7f000008c410 -> ff00000002
[main] [INS] [00029f64] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008c440,0x0)
[main] [INS] [00029f6c] mov	rax, qword ptr [r12 + 0x108]                              ; rax = 0x0
[main] [INS] [00029f74] mov	qword ptr [rsp + 0x100], rax                              ; store(0x7f000008c450,0x0)
[main] [INS] [00029f7c] call	rdx                                                      ; call(0xeb80)
[main] [INS] [0000eb80] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [0000eb82] push	r14                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000eb84] push	r13                                                      ; push(0x9003a05b) -> 7800000600ff76
[main] [INS] [0000eb86] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb88] push	rbp                                                      ; push(0x76)
[main] [INS] [0000eb89] push	rbx                                                      ; push(0x76)
[main] [INS] [0000eb8a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb8c] mov	rbx, rdi                                                  ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb8f] sub	rsp, 8                                                    ; rsp = 0x7f000008c310 -> 0
[main] [INS] [0000eb93] mov	eax, dword ptr [rip + 0x23a873]                           ; eax = 0x0
[main] [INS] [0000eb99] add	qword ptr [rip + 0x23885f], 1                             ; store(0x247400,0x1)
[main] [INS] [0000eba1] mov	edx, eax                                                  ; edx = 0x0
[main] [INS] [0000eba3] or	edx, dword ptr [rip + 0x23a853]                            ; edx = 0x0
[main] [INS] [0000eba9] je	0xed06
[main] [INS] [0000ed06] mov	esi, dword ptr [rbx + 0x1c]                               ; esi = 0x1
[main] [INS] [0000ed09] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed0c] mov	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed10] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a05b) -> 7800000600ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x0
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x9004208f -> 62
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x61
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x61
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x41
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x41 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x9004208f -> 62
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x9004208f vs 0x9004208f
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x1
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x9003a05b -> 7800000600ff76
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed15] movsxd	rdi, dword ptr [rbx + 0x1c]                            ; rdi = 0x1
[main] [INS] [0000ed19] mov	esi, dword ptr [rbx + 0x20]                               ; esi = 0x1
[main] [INS] [0000ed1c] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed1f] add	qword ptr [rip + 0x238741], 1                             ; store(0x247468,0x1)
[main] [INS] [0000ed27] mov	r14d, eax                                                 ; r14d = 0x1
[main] [INS] [0000ed2a] sub	esi, edi                                                  ; esi = 0x0
[main] [INS] [0000ed2c] add	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208f -> 62
[main] [INS] [0000ed30] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a05b) -> 7800000600ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb78] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb7a] jmp	0xeb5f                                                    ; jmp(0xeb5f)
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x9003a05b -> 7800000600ff76
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed35] mov	esi, dword ptr [rbx + 0x18]                               ; esi = 0x2
[main] [INS] [0000ed38] mov	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed3c] xor	edx, edx                                                  ; edx = 0x0
[main] [INS] [0000ed3e] add	qword ptr [rip + 0x23872a], 1                             ; store(0x247470,0x1)
[main] [INS] [0000ed46] mov	r13d, eax                                                 ; r13d = 0x0
[main] [INS] [0000ed49] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x0)
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x2 vs 0x2
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x1
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x90042090 -> 0
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x61
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x61
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x41
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x41 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x9004208f -> 62
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x9004208f
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x90042090 -> 0
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x62
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x1)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x90042090) -> 0
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x62
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x42
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x42 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x90042090 -> 0
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x2
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x90042090
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x2
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x0
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed4e] movsxd	rdi, dword ptr [rbx + 0x20]                            ; rdi = 0x1
[main] [INS] [0000ed52] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed55] mov	r12d, eax                                                 ; r12d = 0x2
[main] [INS] [0000ed58] mov	esi, dword ptr [rbx + 0x18]                               ; esi = 0x2
[main] [INS] [0000ed5b] add	qword ptr [rip + 0x238715], 1                             ; store(0x247478,0x1)
[main] [INS] [0000ed63] sub	esi, edi                                                  ; esi = 0x1
[main] [INS] [0000ed65] add	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208f -> 62
[main] [INS] [0000ed69] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x0)
[main] [INS] [0000eb02] push	r12                                                      ; push(0x2)
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c2e0 -> 0
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x0
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x90042090 -> 0
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x90042090 -> 0
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x62
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x90042090) -> 0
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x62
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x42
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x42 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x90042090 -> 0
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x90042090 vs 0x90042090
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c2e8 -> 7f000008c410
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x1
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x2
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x0
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed6e] add	qword ptr [rip + 0x23870a], 1                             ; store(0x247480,0x1)
[main] [INS] [0000ed76] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000ed79] je	0xed90
[main] [INS] [0000ed90] mov	ecx, dword ptr [rbx + 4]                                  ; ecx = 0xff
[main] [INS] [0000ed93] mov	rdi, qword ptr [rip + 0x23a67e]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000ed9a] cmp	ecx, 0xff                                                 ; 0xff vs 0xff
[main] [INS] [0000eda0] je	0xf0d8
[main] [INS] [0000f0d8] mov	ecx, dword ptr [rbx + 0x38]                               ; ecx = 0x6
[main] [INS] [0000f0db] lea	rdx, [rip + 0x2ba36]                                      ; rdx = 0x3ab18 -> "%+3d "
[main] [INS] [0000f0e2] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000f0e4] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000f0e9] add	qword ptr [rip + 0x23839f], 1                             ; store(0x247490,0x1)
[main] [INS] [0000f0f1] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x0)
[main] [INS] [003843c1] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3ab18 -> "%+3d "
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c220 -> 3000000028
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c258,0x6)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c260,0xa)
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c268,0x0)
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c238,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c310 -> 0
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c220 -> 3000000028
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3ab18 -> "%+3d "
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c220,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c224,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c228,0x7f000008c310) -> 0
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c240 -> d
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c230,0x7f000008c240) -> d
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x1)
[main] [INS] [002ad398] push	r13                                                      ; push(0x0)
[main] [INS] [002ad39a] push	r12                                                      ; push(0x2)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008bca0 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c1d8,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bd58,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3ab18 vs 0x3ab18
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c240 -> d
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3ab18 -> "%+3d "
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c3100000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bdd8,0x7f000008c240) -> d
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bdc8,0x7f000008c3100000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab18 -> "%+3d "
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb18
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb18 vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x2064332500202020200a002064332b25
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x2064332500202020200a002064332b25
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff0000000000000000000000ff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff0000000000ff0000000000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xffff0000000000ff00000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1821 -> 0
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1821 vs 0x1821
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab18 -> "%+3d "
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bd50,0x3ab18) -> "%+3d "
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bda8,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bda0,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bd40,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3ab18 -> "%+3d "
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3ab18 -> "%+3d "
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3ab18 -> "%+3d "
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3ab18 -> "%+3d "
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bdf0 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008bcd8,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008bcdc,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008bcd0,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008bcc0,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008bd20,0x7f000008bdf0) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x2b
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3ab19 -> "+3d "
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0xb
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0xb vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x2b
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0xb
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x2
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0x40
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2add20 -> 538d49017bb60f45
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bdf0 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008bcf0,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008bce8,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008bcf8,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008bd00,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bd18,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bd10,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008bd08,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008bd28,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bd30,0x7f000008c1d8) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bd38,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2add20)
[main] [INS] [002add20] movzx	r15d, byte ptr [r11 + 1]                                ; r15d = 0x33
[main] [INS] [002add25] lea	rdx, [r11 + 1]                                            ; rdx = 0x3ab1a -> "3d "
[main] [INS] [002add29] lea	rax, [rip - 0x50]                                         ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002add30] lea	esi, [r15 - 0x20]                                         ; esi = 0x13
[main] [INS] [002add34] cmp	sil, 0x5a                                                 ; 0x13 vs 0x5a
[main] [INS] [002add38] ja	0x2af35a
[main] [INS] [002add3e] movsx	eax, r15b                                               ; eax = 0x33
[main] [INS] [002add42] lea	rsi, [rip + 0x151d97]                                     ; rsi = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002add49] lea	rdi, [rip - 0x70]                                         ; rdi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002add50] sub	eax, 0x20                                                 ; eax = 0x13
[main] [INS] [002add53] mov	r11, rdx                                                  ; r11 = 0x3ab1a -> "3d "
[main] [INS] [002add56] mov	dword ptr [rbp - 0x4f8], 1                                ; store(0x7f000008bd18,0x1)
[main] [INS] [002add60] cdqe	
[main] [INS] [002add62] movzx	eax, byte ptr [rsi + rax]                               ; eax = 0x8
[main] [INS] [002add66] lea	rsi, [rip + 0x151cf3]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002add6d] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xb60
[main] [INS] [002add71] add	rax, rdi                                                  ; rax = 0x2ae840 -> ffffffba3bb60f45
[main] [INS] [002add74] jmp	rax                                                       ; jmp(0x2ae840)
[main] [INS] [002ae840] movzx	r15d, byte ptr [r11]                                    ; r15d = 0x33
[main] [INS] [002ae844] mov	edx, 0x7fffffff                                           ; edx = 0x7fffffff
[main] [INS] [002ae849] lea	r10d, [r15 - 0x30]                                        ; r10d = 0x3
[main] [INS] [002ae84d] movzx	eax, byte ptr [r11 + 1]                                 ; eax = 0x64
[main] [INS] [002ae852] lea	rsi, [r11 + 1]                                            ; rsi = 0x3ab1b -> 202020200a002064
[main] [INS] [002ae856] mov	r15d, eax                                                 ; r15d = 0x64
[main] [INS] [002ae859] sub	eax, 0x30                                                 ; eax = 0x34
[main] [INS] [002ae85c] cmp	eax, 9                                                    ; 0x34 vs 0x9
[main] [INS] [002ae85f] ja	0x2afe08
[main] [INS] [002afe08] cmp	r10d, 0x7fffffde                                          ; 0x3 vs 0x7fffffde
[main] [INS] [002afe0f] mov	qword ptr [rbp - 0x530], rsi                              ; store(0x7f000008bce0,0x3ab1b) -> 202020200a002064
[main] [INS] [002afe16] ja	0x2aec30
[main] [INS] [002afe1c] cmp	r10d, 0x3c7                                               ; 0x3 vs 0x3c7
[main] [INS] [002afe23] jle	0x2afeab
[main] [INS] [002afeab] cmp	r15b, 0x24                                                ; 0x64 vs 0x24
[main] [INS] [002afeaf] je	0x2af2ab
[main] [INS] [002afeb5] lea	edx, [r15 - 0x20]                                         ; edx = 0x44
[main] [INS] [002afeb9] lea	rax, [rip - 0x21e0]                                       ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002afec0] cmp	dl, 0x5a                                                  ; 0x44 vs 0x5a
[main] [INS] [002afec3] ja	0x2aef90
[main] [INS] [002afec9] movsx	eax, r15b                                               ; eax = 0x64
[main] [INS] [002afecd] lea	rdx, [rip + 0x14fc0c]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002afed4] lea	rdi, [rip - 0x21fb]                                       ; rdi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002afedb] sub	eax, 0x20                                                 ; eax = 0x44
[main] [INS] [002afede] mov	r11, qword ptr [rbp - 0x530]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002afee5] cdqe	
[main] [INS] [002afee7] movzx	edx, byte ptr [rdx + rax]                               ; edx = 0xf
[main] [INS] [002afeeb] lea	rax, [rip + 0x14faee]                                     ; rax = 0x3ff9e0 -> 0
[main] [INS] [002afef2] movsxd	rax, dword ptr [rax + rdx*4]                           ; rax = 0xbd0
[main] [INS] [002afef6] add	rax, rdi                                                  ; rax = 0x2ae8b0 -> b21840fc98545
[main] [INS] [002afef9] jmp	rax                                                       ; jmp(0x2ae8b0)
[main] [INS] [002ae8b0] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002ae8b3] je	0x2af3da
[main] [INS] [002af3da] mov	edx, dword ptr [rbp - 0x528]                              ; edx = 0x0
[main] [INS] [002af3e0] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002af3e4] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002af3e6] je	0x2af8db
[main] [INS] [002af8db] mov	r9d, dword ptr [rbp - 0x518]                              ; r9d = 0x0
[main] [INS] [002af8e2] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002af8e5] jne	0x2b0491
[main] [INS] [002af8eb] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002af8ee] ja	0x2b047e
[main] [INS] [002af8f4] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002af8f6] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c258 -> 6
[main] [INS] [002af8fb] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002af8fe] mov	dword ptr [r12], eax                                      ; store(0x7f000008c220,0x20)
[main] [INS] [002af902] movsxd	rax, dword ptr [rdx]                                   ; rax = 0x6
[main] [INS] [002af905] jmp	0x2ae8d7                                                  ; jmp(0x2ae8d7)
[main] [INS] [002ae8d7] test	rax, rax                                                 ; 0x6 vs 0x6
[main] [INS] [002ae8da] js	0x2af4d8
[main] [INS] [002ae8e0] mov	qword ptr [rbp - 0x518], rax                              ; store(0x7f000008bcf8,0x6)
[main] [INS] [002ae8e7] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ae8ea] mov	dword ptr [rbp - 0x530], 0xa                              ; store(0x7f000008bce0,0xa)
[main] [INS] [002ae8f4] jmp	0x2adeb8                                                  ; jmp(0x2adeb8)
[main] [INS] [002adeb8] test	ecx, ecx                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002adeba] js	0x2aef60
[main] [INS] [002aef60] mov	qword ptr [rbp - 0x548], 1                                ; store(0x7f000008bcc8,0x1)
[main] [INS] [002aef6b] jmp	0x2aded7                                                  ; jmp(0x2aded7)
[main] [INS] [002aded7] mov	edx, dword ptr [rbp - 0x530]                              ; edx = 0xa
[main] [INS] [002adedd] mov	rsi, qword ptr [rbp - 0x4e0]                              ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002adee4] xor	ecx, ecx                                                  ; ecx = 0x0
[main] [INS] [002adee6] mov	rdi, qword ptr [rbp - 0x518]                              ; rdi = 0x6
[main] [INS] [002adeed] cmp	r15b, 0x58                                                ; 0x64 vs 0x58
[main] [INS] [002adef1] mov	dword ptr [rbp - 0x568], r10d                             ; store(0x7f000008bca8,0x3)
[main] [INS] [002adef8] sete	cl                                                       ; cl = 0x0
[main] [INS] [002adefb] mov	qword ptr [rbp - 0x560], r11                              ; store(0x7f000008bcb0,0x3ab1b) -> 202020200a002064
[main] [INS] [002adf02] mov	dword ptr [rbp - 0x558], r9d                              ; store(0x7f000008bcb8,0x0)
[main] [INS] [002adf09] call	0x2aa7b0                                                 ; call(0x2aa7b0)
[main] [INS] [002aa7b0] lea	r8, [rip + 0x154de9]                                      ; r8 = 0x3ff5a0 -> "01234567"
[main] [INS] [002aa7b7] lea	rax, [rip + 0x154e22]                                     ; rax = 0x3ff5e0 -> "01234567"
[main] [INS] [002aa7be] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [002aa7c0] cmovne	r8, rax                                                ; r8 = 0x3ff5a0 -> "01234567"
[main] [INS] [002aa7c4] cmp	edx, 0xa                                                  ; 0xa vs 0xa
[main] [INS] [002aa7c7] je	0x2aa840
[main] [INS] [002aa840] movabs	rcx, 0xcccccccccccccccd                                ; rcx = 0xcccccccccccccccd
[main] [INS] [002aa84a] nop	word ptr [rax + rax]
[main] [INS] [002aa850] mov	rax, rdi                                                  ; rax = 0x6
[main] [INS] [002aa853] sub	rsi, 1                                                    ; rsi = 0x7f000008c1d7 -> 424d4f444e410034
[main] [INS] [002aa857] mul	rcx                                                       ; rcx = 0xcccccccccccccccd
[main] [INS] [002aa85a] shr	rdx, 3                                                    ; rdx = 0x0
[main] [INS] [002aa85e] lea	rax, [rdx + rdx*4]                                        ; rax = 0x0
[main] [INS] [002aa862] add	rax, rax                                                  ; rax = 0x0
[main] [INS] [002aa865] sub	rdi, rax                                                  ; rdi = 0x6
[main] [INS] [002aa868] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002aa86b] movzx	eax, byte ptr [r8 + rdi]                                ; eax = 0x36
[main] [INS] [002aa870] mov	rdi, rdx                                                  ; rdi = 0x0
[main] [INS] [002aa873] mov	byte ptr [rsi], al                                        ; store(0x7f000008c1d7,0x36)
[main] [INS] [002aa875] jne	0x2aa850
[main] [INS] [002aa877] mov	rax, rsi                                                  ; rax = 0x7f000008c1d7 -> 424d4f444e410036
[main] [INS] [002aa87a] ret	
[main] [INS] [002adf0e] mov	rcx, qword ptr [rbp - 0x540]                              ; rcx = 0xffffffffffffffff
[main] [INS] [002adf15] mov	qword ptr [rbp - 0x528], rax                              ; store(0x7f000008bce8,0x7f000008c1d7) -> 424d4f444e410036
[main] [INS] [002adf1c] mov	r9d, dword ptr [rbp - 0x558]                              ; r9d = 0x0
[main] [INS] [002adf23] mov	r11, qword ptr [rbp - 0x560]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002adf2a] mov	r10d, dword ptr [rbp - 0x568]                             ; r10d = 0x3
[main] [INS] [002adf31] test	rcx, rcx                                                 ; 0xffffffffffffffff vs 0xffffffffffffffff
[main] [INS] [002adf34] je	0x2adf8e
[main] [INS] [002adf36] mov	edx, dword ptr [rbp - 0x510]                              ; edx = 0x0
[main] [INS] [002adf3c] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002adf3e] je	0x2adf8e
[main] [INS] [002adf8e] cmp	dword ptr [rbp - 0x530], 0xa                              ; 0xa vs 0xa
[main] [INS] [002adf95] jne	0x2adfea
[main] [INS] [002adf97] mov	r8d, dword ptr [rbp - 0x520]                              ; r8d = 0x0
[main] [INS] [002adf9e] test	r8d, r8d                                                 ; 0x0 vs 0x0
[main] [INS] [002adfa1] je	0x2adfea
[main] [INS] [002adfea] mov	rax, qword ptr [rbp - 0x4e0]                              ; rax = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002adff1] sub	rax, qword ptr [rbp - 0x528]                              ; rax = 0x1
[main] [INS] [002adff8] cmp	rax, qword ptr [rbp - 0x548]                              ; 0x1 vs 0x1
[main] [INS] [002adfff] mov	qword ptr [rbp - 0x510], rax                              ; store(0x7f000008bd00,0x1)
[main] [INS] [002ae006] jl	0x2aea90
[main] [INS] [002ae00c] cmp	qword ptr [rbp - 0x518], 0                                ; 0x6 vs 0x0
[main] [INS] [002ae014] je	0x2af090
[main] [INS] [002ae01a] cmp	dword ptr [rbp - 0x530], 8                                ; 0xa vs 0x8
[main] [INS] [002ae021] jne	0x2af0db
[main] [INS] [002af0db] mov	r8, qword ptr [rbp - 0x548]                               ; r8 = 0x1
[main] [INS] [002af0e2] sub	r8, qword ptr [rbp - 0x510]                               ; r8 = 0x0
[main] [INS] [002af0e9] mov	eax, 0                                                    ; eax = 0x0
[main] [INS] [002af0ee] mov	esi, dword ptr [rbp - 0x4c8]                              ; esi = 0x0
[main] [INS] [002af0f4] cmovs	r8, rax                                                 ; r8 = 0x0
[main] [INS] [002af0f8] test	esi, esi                                                 ; 0x0 vs 0x0
[main] [INS] [002af0fa] mov	ecx, r8d                                                  ; ecx = 0x0
[main] [INS] [002af0fd] jne	0x2ae080
[main] [INS] [002af103] mov	rdi, qword ptr [rbp - 0x510]                              ; rdi = 0x1
[main] [INS] [002af10a] mov	eax, r10d                                                 ; eax = 0x3
[main] [INS] [002af10d] sub	eax, edi                                                  ; eax = 0x2
[main] [INS] [002af10f] mov	dword ptr [rbp - 0x4c8], edi                              ; store(0x7f000008bd48,0x1)
[main] [INS] [002af115] sub	eax, r8d                                                  ; eax = 0x2
[main] [INS] [002af118] mov	r8d, eax                                                  ; r8d = 0x2
[main] [INS] [002af11b] jmp	0x2aead2                                                  ; jmp(0x2aead2)
[main] [INS] [002aead2] cmp	dword ptr [rbp - 0x530], 0x10                             ; 0xa vs 0x10
[main] [INS] [002aead9] jne	0x2aeaeb
[main] [INS] [002aeaeb] mov	eax, dword ptr [rbp - 0x500]                              ; eax = 0x0
[main] [INS] [002aeaf1] or	eax, dword ptr [rbp - 0x4f8]                               ; eax = 0x1
[main] [INS] [002aeaf7] or	eax, r9d                                                   ; eax = 0x1
[main] [INS] [002aeafa] je	0x2aedf0
[main] [INS] [002aeb00] sub	r8d, 1                                                    ; r8d = 0x1
[main] [INS] [002aeb04] cmp	byte ptr [rbp - 0x4e8], 0x20                              ; 0x20 vs 0x20
[main] [INS] [002aeb0b] je	0x2af028
[main] [INS] [002af028] test	r8d, r8d                                                 ; 0x1 vs 0x1
[main] [INS] [002af02b] jg	0x2af42d
[main] [INS] [002af42d] movsxd	r10, r8d                                               ; r10 = 0x1
[main] [INS] [002af430] mov	esi, 0x20                                                 ; esi = 0x20
[main] [INS] [002af435] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002af438] mov	rdx, r10                                                  ; rdx = 0x1
[main] [INS] [002af43b] mov	qword ptr [rbp - 0x4e0], r10                              ; store(0x7f000008bd30,0x1)
[main] [INS] [002af442] mov	qword ptr [rbp - 0x558], r11                              ; store(0x7f000008bcb8,0x3ab1b) -> 202020200a002064
[main] [INS] [002af449] mov	dword ptr [rbp - 0x548], ecx                              ; store(0x7f000008bcc8,0x0)
[main] [INS] [002af44f] mov	dword ptr [rbp - 0x520], r9d                              ; store(0x7f000008bcf0,0x0)
[main] [INS] [002af456] mov	dword ptr [rbp - 0x4e8], r8d                              ; store(0x7f000008bd28,0x1)
[main] [INS] [002af45d] call	0x2d2260                                                 ; call(0x2d2260)
[main] [INS] [002d2260] push	r15                                                      ; push(0x64)
[main] [INS] [002d2262] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002d2264] lea	r14, [rip + 0x13bdd5]                                     ; r14 = 0x40e040 -> "        "
[main] [INS] [002d226b] push	r13                                                      ; push(0x0)
[main] [INS] [002d226d] push	r12                                                      ; push(0x7f000008c220) -> 3000000020
[main] [INS] [002d226f] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002d2272] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002d2273] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002d2274] mov	rbp, rdi                                                  ; rbp = 0x63e760 -> fbad2884
[main] [INS] [002d2277] sub	rsp, 0x38                                                 ; rsp = 0x7f000008bc30 -> 0
[main] [INS] [002d227b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002d2284] mov	qword ptr [rsp + 0x28], rax                               ; store(0x7f000008bc58,0x59424d4f444e4100)
[main] [INS] [002d2289] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002d228b] cmp	esi, 0x20                                                 ; 0x20 vs 0x20
[main] [INS] [002d228e] je	0x2d22c6
[main] [INS] [002d22c6] cmp	r12d, 0xf                                                 ; 0x1 vs 0xf
[main] [INS] [002d22ca] mov	r15d, r12d                                                ; r15d = 0x1
[main] [INS] [002d22cd] jle	0x2d2340
[main] [INS] [002d2340] xor	ebx, ebx                                                  ; ebx = 0x0
[main] [INS] [002d2342] nop	word ptr [rax + rax]
[main] [INS] [002d2348] test	r15d, r15d                                               ; 0x1 vs 0x1
[main] [INS] [002d234b] jle	0x2d2381
[main] [INS] [002d234d] mov	r12, qword ptr [rbp + 0xd8]                               ; r12 = 0x63a2a0 -> 0
[main] [INS] [002d2354] lea	rdx, [rip + 0x367405]                                     ; rdx = 0x639760 -> 0
[main] [INS] [002d235b] lea	rax, [rip + 0x368166]                                     ; rax = 0x63a4c8 -> 0
[main] [INS] [002d2362] sub	rax, rdx                                                  ; rax = 0xd68
[main] [INS] [002d2365] mov	rdi, r12                                                  ; rdi = 0x63a2a0 -> 0
[main] [INS] [002d2368] sub	rdi, rdx                                                  ; rdi = 0xb40
[main] [INS] [002d236b] cmp	rax, rdi                                                  ; 0xd68 vs 0xb40
[main] [INS] [002d236e] jbe	0x2d23a3
[main] [INS] [002d2370] movsxd	rdx, r15d                                              ; rdx = 0x1
[main] [INS] [002d2373] mov	rsi, r14                                                  ; rsi = 0x40e040 -> "        "
[main] [INS] [002d2376] mov	rdi, rbp                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002d2379] call	qword ptr [r12 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x1)
[main] [INS] [002dd932] push	r14                                                      ; push(0x40e040) -> "        "
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x0)
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bbe0 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x40e040 -> "        "
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c98 -> 0
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c98
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfc8
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfc8 vs 0xfc8
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfc8
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x40e040 -> "        "
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x40e041 -> "        "
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c98 -> 0
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c99 -> 0
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x40e041 -> "        "
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c99 -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x20
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c98,0x20)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c99) -> 0
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bbf8 -> 0
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x0
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x63e760 -> fbad2884
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x63a2a0 -> 0
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x40e040 -> "        "
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x1
[main] [INS] [002dd9b4] ret	
[main] [INS] [002d237e] add	rbx, rax                                                  ; rbx = 0x1
[main] [INS] [002d2381] mov	rdi, qword ptr [rsp + 0x28]                               ; rdi = 0x59424d4f444e4100
[main] [INS] [002d2386] xor	rdi, qword ptr fs:[0x28]                                  ; rdi = 0x0
[main] [INS] [002d238f] mov	rax, rbx                                                  ; rax = 0x1
[main] [INS] [002d2392] jne	0x2d23aa
[main] [INS] [002d2394] add	rsp, 0x38                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002d2398] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002d2399] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002d239a] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000020
[main] [INS] [002d239c] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002d239e] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002d23a0] pop	r15                                                       ; r15 = 0x64
[main] [INS] [002d23a2] ret	
[main] [INS] [002af462] mov	r10, qword ptr [rbp - 0x4e0]                              ; r10 = 0x1
[main] [INS] [002af469] cmp	r10, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002af46c] jne	0x2add00
[main] [INS] [002af472] cmp	r13d, 0x7ffffffe                                          ; 0x0 vs 0x7ffffffe
[main] [INS] [002af479] mov	r8d, dword ptr [rbp - 0x4e8]                              ; r8d = 0x1
[main] [INS] [002af480] mov	r9d, dword ptr [rbp - 0x520]                              ; r9d = 0x0
[main] [INS] [002af487] mov	ecx, dword ptr [rbp - 0x548]                              ; ecx = 0x0
[main] [INS] [002af48d] mov	r11, qword ptr [rbp - 0x558]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002af494] ja	0x2b04d3
[main] [INS] [002af49a] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002af49f] sub	eax, r13d                                                 ; eax = 0x7fffffff
[main] [INS] [002af4a2] cmp	eax, r8d                                                  ; 0x7fffffff vs 0x1
[main] [INS] [002af4a5] jb	0x2aec30
[main] [INS] [002af4ab] add	r13d, r8d                                                 ; r13d = 0x1
[main] [INS] [002af4ae] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002af4b1] jmp	0x2aeb11                                                  ; jmp(0x2aeb11)
[main] [INS] [002aeb11] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002aeb14] je	0x2aedfd
[main] [INS] [002aedfd] mov	eax, dword ptr [rbp - 0x4f8]                              ; eax = 0x1
[main] [INS] [002aee03] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [002aee05] je	0x2af167
[main] [INS] [002aee0b] mov	rax, qword ptr [r14 + 0x28]                               ; rax = 0x90018c99 -> 0
[main] [INS] [002aee0f] cmp	rax, qword ptr [r14 + 0x30]                               ; 0x90018c99 vs 0x90019c60
[main] [INS] [002aee13] jae	0x2b0046
[main] [INS] [002aee19] lea	rdx, [rax + 1]                                            ; rdx = 0x90018c9a -> 0
[main] [INS] [002aee1d] mov	qword ptr [r14 + 0x28], rdx                               ; store(0x63e788,0x90018c9a) -> 0
[main] [INS] [002aee21] mov	byte ptr [rax], 0x2b                                      ; store(0x90018c99,0x2b)
[main] [INS] [002aee24] jmp	0x2aeb33                                                  ; jmp(0x2aeb33)
[main] [INS] [002aeb33] cmp	r13d, 0x7fffffff                                          ; 0x1 vs 0x7fffffff
[main] [INS] [002aeb3a] je	0x2add00
[main] [INS] [002aeb40] add	r13d, 1                                                   ; r13d = 0x2
[main] [INS] [002aeb44] cmp	qword ptr [rbp - 0x518], 0                                ; 0x6 vs 0x0
[main] [INS] [002aeb4c] je	0x2aebb1
[main] [INS] [002aeb4e] cmp	dword ptr [rbp - 0x530], 0x10                             ; 0xa vs 0x10
[main] [INS] [002aeb55] jne	0x2aebb1
[main] [INS] [002aebb1] add	ecx, r8d                                                  ; ecx = 0x0
[main] [INS] [002aebb4] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [002aebb6] jg	0x2aef00
[main] [INS] [002aebbc] test	r13d, r13d                                               ; 0x2 vs 0x2
[main] [INS] [002aebbf] js	0x2b0416
[main] [INS] [002aebc5] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002aebcc] lea	rsi, [rip + 0x38ab8d]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002aebd3] mov	rax, r15                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002aebd6] sub	rax, rsi                                                  ; rax = 0xb40
[main] [INS] [002aebd9] cmp	qword ptr [rbp - 0x4d0], rax                              ; 0xd68 vs 0xb40
[main] [INS] [002aebe0] jbe	0x2af960
[main] [INS] [002aebe6] mov	rsi, qword ptr [rbp - 0x528]                              ; rsi = 0x7f000008c1d7 -> 424d4f444e410036
[main] [INS] [002aebed] mov	qword ptr [rbp - 0x4e0], r11                              ; store(0x7f000008bd30,0x3ab1b) -> 202020200a002064
[main] [INS] [002aebf4] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002aebf7] mov	rdx, qword ptr [rbp - 0x510]                              ; rdx = 0x1
[main] [INS] [002aebfe] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x2)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x7f000008c1d7 -> 424d4f444e410036
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c9a -> 0
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c9a
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfc6
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfc6 vs 0xfc6
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfc6
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x7f000008c1d7 -> 424d4f444e410036
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c9a -> 0
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c9b -> 0
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c9b -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x36
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c9a,0x36)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c9b) -> 0
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x2
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002aec02] mov	rsi, qword ptr [rbp - 0x510]                              ; rsi = 0x1
[main] [INS] [002aec09] cmp	rsi, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002aec0c] jne	0x2add00
[main] [INS] [002aec12] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002aec17] mov	r11, qword ptr [rbp - 0x4e0]                              ; r11 = 0x3ab1b -> 202020200a002064
[main] [INS] [002aec1e] sub	eax, r13d                                                 ; eax = 0x7ffffffd
[main] [INS] [002aec21] cdqe	
[main] [INS] [002aec23] cmp	rax, rsi                                                  ; 0x7ffffffd vs 0x1
[main] [INS] [002aec26] jge	0x2ae21b
[main] [INS] [002ae21b] add	r13d, dword ptr [rbp - 0x4c8]                             ; r13d = 0x3
[main] [INS] [002ae222] jmp	0x2ad930                                                  ; jmp(0x2ad930)
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008bcdc,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bd48,0x3ab1c) -> 202020200a0020
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab1c -> 202020200a0020
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb1c
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb1c vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x2a2e25002064332500202020200a0020
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x2a2e25002064332500202020200a0020
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff00000000ff0000000000000000
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff00000000ff0000000000ff00
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xffff000000ffff0000000000ff00
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x3182 -> 8000000000024
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x3182 vs 0x3182
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x1
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab1d -> 2500202020200a00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x3 vs 0x3
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bd48,0x3ab1d) -> 2500202020200a00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3ab1c -> 202020200a0020
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x1
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x1
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x1)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x3)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000020
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab18) -> "%+3d "
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x3ab1c -> 202020200a0020
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018c9b -> 0
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018c9b
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfc5
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfc5 vs 0xfc5
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfc5
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x3ab1c -> 202020200a0020
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x3ab1d -> 2500202020200a00
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018c9b -> 0
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018c9c -> 0
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x3ab1d -> 2500202020200a00
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018c9c -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x20
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018c9b,0x20)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018c9c) -> 0
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab18
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab18 -> "%+3d "
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000020
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x3
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x1
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x1 vs 0x1
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffffc
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x1 vs 0x7ffffffc
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3ab1d -> 2500202020200a00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x4
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x4
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c1e8 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x2
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x1
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x4
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x4
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c2f8 -> 7f000008c410
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0038452e] ret	
[main] [INS] [0000f0f6] add	qword ptr [rip + 0x23839a], 1                             ; store(0x247498,0x1)
[main] [INS] [0000f0fe] cmp	dword ptr [rbx + 0x38], 0x63                              ; 0x6 vs 0x63
[main] [INS] [0000f102] jle	0xedd7
[main] [INS] [0000edd7] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000edd9] test	r14d, r14d                                               ; 0x1 vs 0x1
[main] [INS] [0000eddc] jle	0xee09
[main] [INS] [0000edde] nop	
[main] [INS] [0000ede0] mov	rsi, qword ptr [rip + 0x23a631]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ede7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000edec] add	ebp, 1                                                    ; ebp = 0x1
[main] [INS] [0000edef] add	qword ptr [rip + 0x2386d9], 1                             ; store(0x2474d0,0x1)
[main] [INS] [0000edf7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c9c -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c9c vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c9d -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c9d) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c9c,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000edfc] add	qword ptr [rip + 0x2386c4], 1                             ; store(0x2474c8,0x1)
[main] [INS] [0000ee04] cmp	r14d, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0000ee07] jne	0xede0
[main] [INS] [0000ee09] mov	rsi, qword ptr [rip + 0x23a608]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ee10] mov	edi, 0x5e                                                 ; edi = 0x5e
[main] [INS] [0000ee15] add	qword ptr [rip + 0x2386bb], 1                             ; store(0x2474d8,0x1)
[main] [INS] [0000ee1d] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x5e
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x5e
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c9d -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c9d vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c9e -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c9e) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c9d,0x5e)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x5e
[main] [INS] [002d980c] ret	
[main] [INS] [0000ee22] add	qword ptr [rip + 0x2386b6], 1                             ; store(0x2474e0,0x1)
[main] [INS] [0000ee2a] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [0000ee2d] jle	0xee82
[main] [INS] [0000ee82] sub	r12d, r14d                                                ; r12d = 0x1
[main] [INS] [0000ee85] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000ee88] sub	eax, r13d                                                 ; eax = 0x1
[main] [INS] [0000ee8b] cmp	eax, -3                                                   ; 0x1 vs 0x-3
[main] [INS] [0000ee8e] jl	0xeec9
[main] [INS] [0000ee90] lea	r12d, [rax + 4]                                           ; r12d = 0x5
[main] [INS] [0000ee94] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000ee96] nop	word ptr cs:[rax + rax]
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x1
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c9e -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c9e vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018c9f -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018c9f) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c9e,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x1 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x2
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018c9f -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018c9f vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018ca0 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018ca0) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018c9f,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x2 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x3
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018ca0 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018ca0 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018ca1 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018ca1) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018ca0,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x3 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x4
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018ca1 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018ca1 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018ca2 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018ca2) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018ca1,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x4 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eea0] mov	rsi, qword ptr [rip + 0x23a571]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000eea7] mov	edi, 0x20                                                 ; edi = 0x20
[main] [INS] [0000eeac] add	ebp, 1                                                    ; ebp = 0x5
[main] [INS] [0000eeaf] add	qword ptr [rip + 0x238651], 1                             ; store(0x247508,0x1)
[main] [INS] [0000eeb7] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0x20
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0x20
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018ca2 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018ca2 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018ca3 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018ca3) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018ca2,0x20)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0x20
[main] [INS] [002d980c] ret	
[main] [INS] [0000eebc] add	qword ptr [rip + 0x23863c], 1                             ; store(0x247500,0x1)
[main] [INS] [0000eec4] cmp	ebp, r12d                                                 ; 0x5 vs 0x5
[main] [INS] [0000eec7] jne	0xeea0
[main] [INS] [0000eec9] mov	ecx, dword ptr [rbx + 0x3c]                               ; ecx = 0x0
[main] [INS] [0000eecc] movsxd	r8, dword ptr [rbx + 0x38]                             ; r8 = 0x6
[main] [INS] [0000eed0] add	qword ptr [rip + 0x238638], 1                             ; store(0x247510,0x1)
[main] [INS] [0000eed8] add	r8, qword ptr [rip + 0x23a4f1]                            ; r8 = 0x9000c3a6 -> ")ab"
[main] [INS] [0000eedf] test	ecx, ecx                                                 ; 0x0 vs 0x0
[main] [INS] [0000eee1] je	0xf030
[main] [INS] [0000f030] mov	ecx, 1                                                    ; ecx = 0x1
[main] [INS] [0000f035] jmp	0xeeef                                                    ; jmp(0xeeef)
[main] [INS] [0000eeef] mov	rdi, qword ptr [rip + 0x23a522]                           ; rdi = 0x63e760 -> fbad2884
[main] [INS] [0000eef6] lea	rdx, [rip + 0x2bc2c]                                      ; rdx = 0x3ab29 -> "%.*s"
[main] [INS] [0000eefd] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0000ef02] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0000ef04] call	0x58c0                                                   ; call(0x58c0)
[main] [INS] [000058c0] jmp	qword ptr [rip + 0x23f6da]                                ; jmp(0x3843c0)
[main] [INS] [003843c0] push	rbp                                                      ; push(0x5)
[main] [INS] [003843c1] push	rbx                                                      ; push(0x7f000008c410) -> ff00000002
[main] [INS] [003843c2] mov	ebp, esi                                                  ; ebp = 0x1
[main] [INS] [003843c4] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [003843c7] mov	r10, rdx                                                  ; r10 = 0x3ab29 -> "%.*s"
[main] [INS] [003843ca] sub	rsp, 0xd8                                                 ; rsp = 0x7f000008c220 -> 3000000020
[main] [INS] [003843d1] test	al, al                                                   ; 0x0 vs 0x0
[main] [INS] [003843d3] mov	qword ptr [rsp + 0x38], rcx                               ; store(0x7f000008c258,0x1)
[main] [INS] [003843d8] mov	qword ptr [rsp + 0x40], r8                                ; store(0x7f000008c260,0x9000c3a6) -> ")ab"
[main] [INS] [003843dd] mov	qword ptr [rsp + 0x48], r9                                ; store(0x7f000008c268,0x3c03a0) -> 66c3ff5788ff568a
[main] [INS] [003843e2] je	0x38441b
[main] [INS] [0038441b] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [00384424] mov	qword ptr [rsp + 0x18], rax                               ; store(0x7f000008c238,0x59424d4f444e4100)
[main] [INS] [00384429] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [0038442b] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [0038442d] and	eax, 0x8000                                               ; eax = 0x0
[main] [INS] [00384432] jne	0x38448a
[main] [INS] [00384434] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 0
[main] [INS] [0038443b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [00384444] cmp	qword ptr [rdx + 8], r8                                   ; 0x0 vs 0x643f00
[main] [INS] [00384448] je	0x384486
[main] [INS] [0038444a] mov	esi, 1                                                    ; esi = 0x1
[main] [INS] [0038444f] cmp	dword ptr [rip + 0x2be4a2], 0                             ; 0x0 vs 0x0
[main] [INS] [00384456] je	0x384460
[main] [INS] [00384460] cmpxchg	dword ptr [rdx], esi                                  ; store(0x63f8c0,0x1)
[main] [INS] [00384463] je	0x38447b
[main] [INS] [0038447b] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 1
[main] [INS] [00384482] mov	qword ptr [rdx + 8], r8                                   ; store(0x63f8c8,0x643f00) -> 643f00
[main] [INS] [00384486] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [0038448a] test	ebp, ebp                                                 ; 0x1 vs 0x1
[main] [INS] [0038448c] jle	0x384492
[main] [INS] [0038448e] or	dword ptr [rbx + 0x74], 4                                  ; store(0x63e7d4,0x4)
[main] [INS] [00384492] lea	rax, [rsp + 0xf0]                                         ; rax = 0x7f000008c310 -> 0
[main] [INS] [0038449a] mov	rdx, rsp                                                  ; rdx = 0x7f000008c220 -> 3000000020
[main] [INS] [0038449d] mov	rsi, r10                                                  ; rsi = 0x3ab29 -> "%.*s"
[main] [INS] [003844a0] mov	rdi, rbx                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [003844a3] mov	dword ptr [rsp], 0x18                                     ; store(0x7f000008c220,0x18)
[main] [INS] [003844aa] mov	dword ptr [rsp + 4], 0x30                                 ; store(0x7f000008c224,0x30)
[main] [INS] [003844b2] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c228,0x7f000008c310) -> 0
[main] [INS] [003844b7] lea	rax, [rsp + 0x20]                                         ; rax = 0x7f000008c240 -> d
[main] [INS] [003844bc] mov	qword ptr [rsp + 0x10], rax                               ; store(0x7f000008c230,0x7f000008c240) -> d
[main] [INS] [003844c1] call	0x2ad390                                                 ; call(0x2ad390)
[main] [INS] [002ad390] push	rbp                                                      ; push(0x1)
[main] [INS] [002ad391] mov	rbp, rsp                                                  ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002ad394] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [002ad396] push	r14                                                      ; push(0x1)
[main] [INS] [002ad398] push	r13                                                      ; push(0x0)
[main] [INS] [002ad39a] push	r12                                                      ; push(0x5)
[main] [INS] [002ad39c] mov	r14, rdi                                                  ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002ad39f] push	rbx                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002ad3a0] mov	r12, rdx                                                  ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002ad3a3] mov	rbx, rsi                                                  ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002ad3a6] sub	rsp, 0x548                                                ; rsp = 0x7f000008bca0 -> 0
[main] [INS] [002ad3ad] mov	rax, qword ptr fs:[0x28]                                  ; rax = 0x59424d4f444e4100
[main] [INS] [002ad3b6] mov	qword ptr [rbp - 0x38], rax                               ; store(0x7f000008c1d8,0x59424d4f444e4100)
[main] [INS] [002ad3ba] xor	eax, eax                                                  ; eax = 0x0
[main] [INS] [002ad3bc] mov	rax, qword ptr [rip + 0x38faa5]                           ; rax = 0xffffffffffffff80
[main] [INS] [002ad3c3] mov	eax, dword ptr fs:[rax]                                   ; eax = 0x0
[main] [INS] [002ad3c6] mov	dword ptr [rbp - 0x4b8], eax                              ; store(0x7f000008bd58,0x0)
[main] [INS] [002ad3cc] mov	eax, dword ptr [rdi + 0xc0]                               ; eax = 0xffffffff
[main] [INS] [002ad3d2] test	eax, eax                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [002ad3d4] jne	0x2ad5b0
[main] [INS] [002ad5b0] cmp	eax, -1                                                   ; 0xffffffff vs 0x-1
[main] [INS] [002ad5b3] je	0x2ad3e4
[main] [INS] [002ad3e4] mov	r15d, dword ptr [r14]                                     ; r15d = 0xfbad2884
[main] [INS] [002ad3e7] test	r15b, 8                                                  ; 0x84 vs 0x8
[main] [INS] [002ad3eb] jne	0x2aeda0
[main] [INS] [002ad3f1] test	rbx, rbx                                                 ; 0x3ab29 vs 0x3ab29
[main] [INS] [002ad3f4] je	0x2af14e
[main] [INS] [002ad3fa] mov	eax, r15d                                                 ; eax = 0xfbad2884
[main] [INS] [002ad3fd] and	eax, 2                                                    ; eax = 0x0
[main] [INS] [002ad400] mov	dword ptr [rbp - 0x4c8], eax                              ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad406] jne	0x2ad718
[main] [INS] [002ad40c] mov	rax, qword ptr [r12 + 0x10]                               ; rax = 0x7f000008c240 -> d
[main] [INS] [002ad411] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad416] mov	rdi, rbx                                                  ; rdi = 0x3ab29 -> "%.*s"
[main] [INS] [002ad419] movdqu	xmm0, xmmword ptr [r12]                                ; xmm0 = 0x7f000008c3100000003000000018
[main] [INS] [002ad41f] mov	qword ptr [rbp - 0x438], rax                              ; store(0x7f000008bdd8,0x7f000008c240) -> d
[main] [INS] [002ad426] movups	xmmword ptr [rbp - 0x448], xmm0                        ; store(0x7f000008bdc8,0x7f000008c3100000003000000018)
[main] [INS] [002ad42d] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab29 -> "%.*s"
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb29
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb29 vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x6b72614d2074736574614c00732a2e25
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x6b72614d2074736574614c00732a2e25
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0xff
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff00000000
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff000000ff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x11
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x11 vs 0x11
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab29 -> "%.*s"
[main] [INS] [0030316a] ret	
[main] [INS] [002ad432] and	r15d, 0x8000                                              ; r15d = 0x0
[main] [INS] [002ad439] mov	qword ptr [rbp - 0x4c0], rax                              ; store(0x7f000008bd50,0x3ab29) -> "%.*s"
[main] [INS] [002ad440] mov	dword ptr [rbp - 0x4b4], 0                                ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad44a] jne	0x2ad4ec
[main] [INS] [002ad450] mov	eax, dword ptr [rip + 0x395492]                           ; eax = 0x0
[main] [INS] [002ad456] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [002ad458] mov	dword ptr [rbp - 0x4b4], eax                              ; store(0x7f000008bd5c,0x0)
[main] [INS] [002ad45e] je	0x2aea18
[main] [INS] [002aea18] mov	rax, qword ptr [rip + 0x38e541]                           ; rax = 0x2cde70 -> 8300000088978b48
[main] [INS] [002aea1f] mov	qword ptr [rbp - 0x468], r14                              ; store(0x7f000008bda8,0x63e760) -> fbad2884
[main] [INS] [002aea26] mov	qword ptr [rbp - 0x470], rax                              ; store(0x7f000008bda0,0x2cde70) -> 8300000088978b48
[main] [INS] [002aea2d] jmp	0x2ad494                                                  ; jmp(0x2ad494)
[main] [INS] [002ad494] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [002ad49b] mov	r8, qword ptr fs:[0x10]                                   ; r8 = 0x643f00 -> 643f00
[main] [INS] [002ad4a4] cmp	qword ptr [rdx + 8], r8                                   ; 0x643f00 vs 0x643f00
[main] [INS] [002ad4a8] je	0x2ad4e8
[main] [INS] [002ad4e8] add	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad4ec] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002ad4f3] lea	rdx, [rip + 0x38cfce]                                     ; rdx = 0x63a4c8 -> 0
[main] [INS] [002ad4fa] lea	rcx, [rip + 0x38c25f]                                     ; rcx = 0x639760 -> 0
[main] [INS] [002ad501] mov	rax, rdx                                                  ; rax = 0x63a4c8 -> 0
[main] [INS] [002ad504] mov	rdx, r15                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad507] sub	rax, rcx                                                  ; rax = 0xd68
[main] [INS] [002ad50a] sub	rdx, rcx                                                  ; rdx = 0xb40
[main] [INS] [002ad50d] mov	qword ptr [rbp - 0x4d0], rax                              ; store(0x7f000008bd40,0xd68)
[main] [INS] [002ad514] cmp	rax, rdx                                                  ; 0xd68 vs 0xb40
[main] [INS] [002ad517] jbe	0x2ad770
[main] [INS] [002ad51d] mov	r13, qword ptr [rbp - 0x4c0]                              ; r13 = 0x3ab29 -> "%.*s"
[main] [INS] [002ad524] mov	rsi, rbx                                                  ; rsi = 0x3ab29 -> "%.*s"
[main] [INS] [002ad527] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad52a] sub	r13, rbx                                                  ; r13 = 0x0
[main] [INS] [002ad52d] mov	rdx, r13                                                  ; rdx = 0x0
[main] [INS] [002ad530] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000018
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000018
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad534] cmp	r13, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad537] je	0x2ad5c8
[main] [INS] [002ad5c8] cmp	r13, 0x7fffffff                                           ; 0x0 vs 0x7fffffff
[main] [INS] [002ad5cf] jg	0x2ad780
[main] [INS] [002ad5d5] mov	rax, qword ptr [rbp - 0x4c0]                              ; rax = 0x3ab29 -> "%.*s"
[main] [INS] [002ad5dc] cmp	byte ptr [rax], 0                                         ; 0x25 vs 0x0
[main] [INS] [002ad5df] je	0x2ad543
[main] [INS] [002ad5e5] cmp	qword ptr [rip + 0x39506b], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5ed] jne	0x2aec48
[main] [INS] [002ad5f3] cmp	qword ptr [rip + 0x395065], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad5fb] jne	0x2aec48
[main] [INS] [002ad601] cmp	qword ptr [rip + 0x39126f], 0                             ; 0x0 vs 0x0
[main] [INS] [002ad609] jne	0x2aec48
[main] [INS] [002ad60f] mov	rcx, rax                                                  ; rcx = 0x3ab29 -> "%.*s"
[main] [INS] [002ad612] lea	rax, [rbp - 0x420]                                        ; rax = 0x7f000008bdf0 -> 0
[main] [INS] [002ad619] mov	dword ptr [rbp - 0x538], 0                                ; store(0x7f000008bcd8,0x0)
[main] [INS] [002ad623] mov	dword ptr [rbp - 0x534], 0                                ; store(0x7f000008bcdc,0x0)
[main] [INS] [002ad62d] mov	qword ptr [rbp - 0x540], -1                               ; store(0x7f000008bcd0,0x-1)
[main] [INS] [002ad638] mov	qword ptr [rbp - 0x550], 0                                ; store(0x7f000008bcc0,0x0)
[main] [INS] [002ad643] mov	qword ptr [rbp - 0x4f0], rax                              ; store(0x7f000008bd20,0x7f000008bdf0) -> 0
[main] [INS] [002ad64a] movzx	r15d, byte ptr [rcx + 1]                                ; r15d = 0x2e
[main] [INS] [002ad64f] lea	r11, [rcx + 1]                                            ; r11 = 0x3ab2a -> ".*s"
[main] [INS] [002ad653] lea	rax, [rip + 0x686]                                        ; rax = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad65a] lea	edx, [r15 - 0x20]                                         ; edx = 0xe
[main] [INS] [002ad65e] cmp	dl, 0x5a                                                  ; 0xe vs 0x5a
[main] [INS] [002ad661] ja	0x2ad68c
[main] [INS] [002ad663] movsx	eax, r15b                                               ; eax = 0x2e
[main] [INS] [002ad667] lea	rdx, [rip + 0x152472]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002ad66e] lea	rsi, [rip + 0x1523eb]                                     ; rsi = 0x3ffa60 -> a000000000
[main] [INS] [002ad675] sub	eax, 0x20                                                 ; eax = 0xe
[main] [INS] [002ad678] cdqe	
[main] [INS] [002ad67a] movzx	eax, byte ptr [rdx + rax]                               ; eax = 0x9
[main] [INS] [002ad67e] movsxd	rax, dword ptr [rsi + rax*4]                           ; rax = 0xd0
[main] [INS] [002ad682] lea	rsi, [rip + 0x657]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002ad689] add	rax, rsi                                                  ; rax = 0x2addb0 -> 438d49017bb60f45
[main] [INS] [002ad68c] mov	rsi, qword ptr [rbp - 0x4f0]                              ; rsi = 0x7f000008bdf0 -> 0
[main] [INS] [002ad693] mov	dword ptr [rbp - 0x520], 0                                ; store(0x7f000008bcf0,0x0)
[main] [INS] [002ad69d] xor	r10d, r10d                                                ; r10d = 0x0
[main] [INS] [002ad6a0] mov	dword ptr [rbp - 0x528], 0                                ; store(0x7f000008bce8,0x0)
[main] [INS] [002ad6aa] xor	r9d, r9d                                                  ; r9d = 0x0
[main] [INS] [002ad6ad] mov	dword ptr [rbp - 0x518], 0                                ; store(0x7f000008bcf8,0x0)
[main] [INS] [002ad6b7] xor	r8d, r8d                                                  ; r8d = 0x0
[main] [INS] [002ad6ba] mov	dword ptr [rbp - 0x510], 0                                ; store(0x7f000008bd00,0x0)
[main] [INS] [002ad6c4] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bd18,0x0)
[main] [INS] [002ad6ce] add	rsi, 0x3e8                                                ; rsi = 0x7f000008c1d8 -> 59424d4f444e4100
[main] [INS] [002ad6d5] mov	dword ptr [rbp - 0x4c8], 0                                ; store(0x7f000008bd48,0x0)
[main] [INS] [002ad6df] mov	dword ptr [rbp - 0x500], 0                                ; store(0x7f000008bd10,0x0)
[main] [INS] [002ad6e9] mov	dword ptr [rbp - 0x508], 0                                ; store(0x7f000008bd08,0x0)
[main] [INS] [002ad6f3] mov	byte ptr [rbp - 0x4e8], 0x20                              ; store(0x7f000008bd28,0x20)
[main] [INS] [002ad6fa] mov	ecx, 0xffffffff                                           ; ecx = 0xffffffff
[main] [INS] [002ad6ff] mov	qword ptr [rbp - 0x4e0], rsi                              ; store(0x7f000008bd30,0x7f000008c1d8) -> 59424d4f444e4100
[main] [INS] [002ad706] mov	qword ptr [rbp - 0x4d8], 0                                ; store(0x7f000008bd38,0x0)
[main] [INS] [002ad711] jmp	rax                                                       ; jmp(0x2addb0)
[main] [INS] [002addb0] movzx	r15d, byte ptr [r11 + 1]                                ; r15d = 0x2a
[main] [INS] [002addb5] lea	rax, [r11 + 1]                                            ; rax = 0x3ab2b -> 736574614c00732a
[main] [INS] [002addb9] cmp	r15b, 0x2a                                                ; 0x2a vs 0x2a
[main] [INS] [002addbd] je	0x2af57a
[main] [INS] [002af57a] movzx	eax, byte ptr [r11 + 2]                                 ; eax = 0x73
[main] [INS] [002af57f] lea	rsi, [r11 + 2]                                            ; rsi = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af583] sub	eax, 0x30                                                 ; eax = 0x43
[main] [INS] [002af586] cmp	eax, 9                                                    ; 0x43 vs 0x9
[main] [INS] [002af589] jbe	0x2afd17
[main] [INS] [002af58f] mov	eax, dword ptr [r12]                                      ; eax = 0x18
[main] [INS] [002af593] cmp	eax, 0x2f                                                 ; 0x18 vs 0x2f
[main] [INS] [002af596] ja	0x2b0333
[main] [INS] [002af59c] mov	edx, eax                                                  ; edx = 0x18
[main] [INS] [002af59e] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c258 -> 1
[main] [INS] [002af5a3] add	eax, 8                                                    ; eax = 0x20
[main] [INS] [002af5a6] mov	dword ptr [r12], eax                                      ; store(0x7f000008c220,0x20)
[main] [INS] [002af5aa] mov	ecx, dword ptr [rdx]                                      ; ecx = 0x1
[main] [INS] [002af5ac] test	ecx, ecx                                                 ; 0x1 vs 0x1
[main] [INS] [002af5ae] js	0x2afb93
[main] [INS] [002af5b4] mov	r11, rsi                                                  ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af5b7] cmp	r10d, 0x3c8                                               ; 0x0 vs 0x3c8
[main] [INS] [002af5be] mov	eax, 0x3c8                                                ; eax = 0x3c8
[main] [INS] [002af5c3] cmovge	eax, r10d                                              ; eax = 0x3c8
[main] [INS] [002af5c7] cmp	eax, ecx                                                  ; 0x3c8 vs 0x1
[main] [INS] [002af5c9] jge	0x2b0295
[main] [INS] [002b0295] movzx	r15d, byte ptr [r11]                                    ; r15d = 0x73
[main] [INS] [002b0299] jmp	0x2adddd                                                  ; jmp(0x2adddd)
[main] [INS] [002adddd] lea	eax, [r15 - 0x20]                                         ; eax = 0x53
[main] [INS] [002adde1] cmp	al, 0x5a                                                  ; 0x53 vs 0x5a
[main] [INS] [002adde3] ja	0x2adce0
[main] [INS] [002adde9] movsx	eax, r15b                                               ; eax = 0x73
[main] [INS] [002added] lea	rdx, [rip + 0x151cec]                                     ; rdx = 0x3ffae0 -> 6000e0004000001
[main] [INS] [002addf4] lea	rsi, [rip - 0x11b]                                        ; rsi = 0x2adce0 -> 15c2850fff8445
[main] [INS] [002addfb] sub	eax, 0x20                                                 ; eax = 0x53
[main] [INS] [002addfe] cdqe	
[main] [INS] [002ade00] movzx	edx, byte ptr [rdx + rax]                               ; edx = 0x15
[main] [INS] [002ade04] lea	rax, [rip + 0x151b55]                                     ; rax = 0x3ff960 -> 0
[main] [INS] [002ade0b] movsxd	rax, dword ptr [rax + rdx*4]                           ; rax = 0xfffffffffffffd40
[main] [INS] [002ade0f] add	rax, rsi                                                  ; rax = 0x2ada20 -> f2ff88324048b41
[main] [INS] [002ade12] jmp	rax                                                       ; jmp(0x2ada20)
[main] [INS] [002ada20] mov	eax, dword ptr [r12]                                      ; eax = 0x20
[main] [INS] [002ada24] cmp	eax, 0x2f                                                 ; 0x20 vs 0x2f
[main] [INS] [002ada27] ja	0x2b056d
[main] [INS] [002ada2d] mov	edx, eax                                                  ; edx = 0x20
[main] [INS] [002ada2f] add	rdx, qword ptr [r12 + 0x10]                               ; rdx = 0x7f000008c260 -> 9000c3a6
[main] [INS] [002ada34] add	eax, 8                                                    ; eax = 0x28
[main] [INS] [002ada37] mov	dword ptr [r12], eax                                      ; store(0x7f000008c220,0x28)
[main] [INS] [002ada3b] mov	r8, qword ptr [rdx]                                       ; r8 = 0x9000c3a6 -> ")ab"
[main] [INS] [002ada3e] test	r8, r8                                                   ; 0x9000c3a6 vs 0x9000c3a6
[main] [INS] [002ada41] je	0x2af0ae
[main] [INS] [002ada47] cmp	r15b, 0x53                                                ; 0x73 vs 0x53
[main] [INS] [002ada4b] je	0x2af1af
[main] [INS] [002ada51] test	r9d, r9d                                                 ; 0x0 vs 0x0
[main] [INS] [002ada54] jne	0x2af1af
[main] [INS] [002ada5a] cmp	ecx, -1                                                   ; 0x1 vs 0x-1
[main] [INS] [002ada5d] je	0x2af4b6
[main] [INS] [002ada63] movsxd	rsi, ecx                                               ; rsi = 0x1
[main] [INS] [002ada66] mov	rdi, r8                                                   ; rdi = 0x9000c3a6 -> ")ab"
[main] [INS] [002ada69] mov	dword ptr [rbp - 0x500], r10d                             ; store(0x7f000008bd10,0x0)
[main] [INS] [002ada70] mov	qword ptr [rbp - 0x4e8], r11                              ; store(0x7f000008bd28,0x3ab2c) -> 74736574614c0073
[main] [INS] [002ada77] mov	qword ptr [rbp - 0x4e0], r8                               ; store(0x7f000008bd30,0x9000c3a6) -> ")ab"
[main] [INS] [002ada7e] call	0x273000                                                 ; call(0x273000)
[main] [INS] [00273000] jmp	qword ptr [rip + 0x3ca022]                                ; jmp(0x3037c0)
[main] [INS] [003037c0] test	rsi, rsi                                                 ; 0x1 vs 0x1
[main] [INS] [003037c3] jne	0x3037c9
[main] [INS] [003037c9] add	rsi, rdi                                                  ; rsi = 0x9000c3a7 -> 6261
[main] [INS] [003037cc] mov	r10, rsi                                                  ; r10 = 0x9000c3a7 -> 6261
[main] [INS] [003037cf] and	r10, 0xffffffffffffffc0                                   ; r10 = 0x9000c380 -> 0
[main] [INS] [003037d3] mov	r11, rsi                                                  ; r11 = 0x9000c3a7 -> 6261
[main] [INS] [003037d6] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [003037da] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [003037de] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [003037e2] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [003037e6] mov	rax, rdi                                                  ; rax = 0x9000c3a6 -> ")ab"
[main] [INS] [003037e9] mov	rcx, rdi                                                  ; rcx = 0x9000c3a6 -> ")ab"
[main] [INS] [003037ec] and	rcx, 0xfff                                                ; rcx = 0x3a6
[main] [INS] [003037f3] cmp	rcx, 0xfcf                                                ; 0x3a6 vs 0xfcf
[main] [INS] [003037fa] ja	0x303870
[main] [INS] [003037fc] and	rax, 0xfffffffffffffff0                                   ; rax = 0x9000c3a0 -> "(?=a\K)a"
[main] [INS] [00303800] pcmpeqb	xmm0, xmmword ptr [rax]                               ; xmm0 = 0xffffffffffffff000000000000000000
[main] [INS] [00303804] pcmpeqb	xmm1, xmmword ptr [rax + 0x10]                        ; xmm1 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00303809] pcmpeqb	xmm2, xmmword ptr [rax + 0x20]                        ; xmm2 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [0030380e] pcmpeqb	xmm3, xmmword ptr [rax + 0x30]                        ; xmm3 = 0xffffffffffffffffffffffffffffffff
[main] [INS] [00303813] pmovmskb	esi, xmm0                                            ; esi = 0xfe00 -> 100239718058348
[main] [INS] [00303817] pmovmskb	edx, xmm1                                            ; edx = 0xffff -> 1246c8d41010023
[main] [INS] [0030381b] pmovmskb	r8d, xmm2                                            ; r8d = 0xffff -> 1246c8d41010023
[main] [INS] [00303820] pmovmskb	ecx, xmm3                                            ; ecx = 0xffff -> 1246c8d41010023
[main] [INS] [00303824] shl	rdx, 0x10                                                 ; rdx = 0xffff0000
[main] [INS] [00303828] shl	rcx, 0x10                                                 ; rcx = 0xffff0000
[main] [INS] [0030382c] or	rdx, rsi                                                   ; rdx = 0xfffffe00
[main] [INS] [0030382f] or	rcx, r8                                                    ; rcx = 0xffffffff
[main] [INS] [00303832] shl	rcx, 0x20                                                 ; rcx = 0xffffffff00000000
[main] [INS] [00303836] or	rdx, rcx                                                   ; rdx = 0xfffffffffffffe00
[main] [INS] [00303839] mov	rcx, rdi                                                  ; rcx = 0x9000c3a6 -> ")ab"
[main] [INS] [0030383c] xor	rcx, rax                                                  ; rcx = 0x6
[main] [INS] [0030383f] mov	rsi, r11                                                  ; rsi = 0x9000c3a7 -> 6261
[main] [INS] [00303842] sub	rsi, rax                                                  ; rsi = 0x7
[main] [INS] [00303845] and	rax, 0xffffffffffffffc0                                   ; rax = 0x9000c380 -> 0
[main] [INS] [00303849] test	rsi, -0x40                                               ; 0x7 vs 0x-40
[main] [INS] [00303850] je	0x3038d3
[main] [INS] [003038d3] bts	rdx, rsi                                                  ; rdx = 0xfffffffffffffe80
[main] [INS] [003038d7] sar	rdx, cl                                                   ; rdx = 0xfffffffffffffffa
[main] [INS] [003038da] test	rdx, rdx                                                 ; 0xfffffffffffffffa vs 0xfffffffffffffffa
[main] [INS] [003038dd] je	0x3038f0
[main] [INS] [003038df] bsf	rax, rdx                                                  ; rax = 0x1
[main] [INS] [003038e3] ret	
[main] [INS] [002ada83] mov	r8, qword ptr [rbp - 0x4e0]                               ; r8 = 0x9000c3a6 -> ")ab"
[main] [INS] [002ada8a] mov	r11, qword ptr [rbp - 0x4e8]                              ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002ada91] mov	r9, rax                                                   ; r9 = 0x1
[main] [INS] [002ada94] mov	r10d, dword ptr [rbp - 0x500]                             ; r10d = 0x0
[main] [INS] [002ada9b] mov	ecx, eax                                                  ; ecx = 0x1
[main] [INS] [002ada9d] mov	dword ptr [rbp - 0x4f8], 0                                ; store(0x7f000008bd18,0x0)
[main] [INS] [002adaa7] sub	r10d, ecx                                                 ; r10d = 0xffffffff
[main] [INS] [002adaaa] mov	dword ptr [rbp - 0x4e8], r10d                             ; store(0x7f000008bd28,0xffffffff)
[main] [INS] [002adab1] js	0x2aefa0
[main] [INS] [002aefa0] test	r13d, r13d                                               ; 0x0 vs 0x0
[main] [INS] [002aefa3] js	0x2b053b
[main] [INS] [002aefa9] mov	r15, qword ptr [r14 + 0xd8]                               ; r15 = 0x63a2a0 -> 0
[main] [INS] [002aefb0] lea	rdi, [rip + 0x38a7a9]                                     ; rdi = 0x639760 -> 0
[main] [INS] [002aefb7] mov	rax, r15                                                  ; rax = 0x63a2a0 -> 0
[main] [INS] [002aefba] sub	rax, rdi                                                  ; rax = 0xb40
[main] [INS] [002aefbd] cmp	qword ptr [rbp - 0x4d0], rax                              ; 0xd68 vs 0xb40
[main] [INS] [002aefc4] jbe	0x2afdc8
[main] [INS] [002aefca] mov	rdx, r9                                                   ; rdx = 0x1
[main] [INS] [002aefcd] mov	qword ptr [rbp - 0x4c8], r9                               ; store(0x7f000008bd48,0x1)
[main] [INS] [002aefd4] mov	dword ptr [rbp - 0x4e8], ecx                              ; store(0x7f000008bd28,0x1)
[main] [INS] [002aefda] mov	qword ptr [rbp - 0x4e0], r11                              ; store(0x7f000008bd30,0x3ab2c) -> 74736574614c0073
[main] [INS] [002aefe1] mov	rsi, r8                                                   ; rsi = 0x9000c3a6 -> ")ab"
[main] [INS] [002aefe4] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002aefe7] call	qword ptr [r15 + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x63a2a0) -> 0
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x0)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000028
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x1 vs 0x1
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd946] mov	rbx, rdi                                                  ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002dd949] mov	r13, rsi                                                  ; r13 = 0x9000c3a6 -> ")ab"
[main] [INS] [002dd94c] mov	rbp, rdx                                                  ; rbp = 0x1
[main] [INS] [002dd94f] mov	eax, dword ptr [rbx]                                      ; eax = 0xfbad2884
[main] [INS] [002dd951] mov	rdi, qword ptr [rdi + 0x28]                               ; rdi = 0x90018ca3 -> 0
[main] [INS] [002dd955] and	eax, 0xa00                                                ; eax = 0x800
[main] [INS] [002dd95a] cmp	eax, 0xa00                                                ; 0x800 vs 0xa00
[main] [INS] [002dd95f] je	0x2dda40
[main] [INS] [002dd965] mov	rdx, qword ptr [rbx + 0x30]                               ; rdx = 0x90019c60 -> 0
[main] [INS] [002dd969] cmp	rdx, rdi                                                  ; 0x90019c60 vs 0x90018ca3
[main] [INS] [002dd96c] jbe	0x2dd9b8
[main] [INS] [002dd96e] sub	rdx, rdi                                                  ; rdx = 0xfbd
[main] [INS] [002dd971] test	rdx, rdx                                                 ; 0xfbd vs 0xfbd
[main] [INS] [002dd974] je	0x2dd9b8
[main] [INS] [002dd976] xor	r14d, r14d                                                ; r14d = 0x0
[main] [INS] [002dd979] cmp	rbp, rdx                                                  ; 0x1 vs 0xfbd
[main] [INS] [002dd97c] mov	rsi, r13                                                  ; rsi = 0x9000c3a6 -> ")ab"
[main] [INS] [002dd97f] mov	r15, rbp                                                  ; r15 = 0x1
[main] [INS] [002dd982] cmovbe	rdx, rbp                                               ; rdx = 0x1
[main] [INS] [002dd986] mov	r12, rdx                                                  ; r12 = 0x1
[main] [INS] [002dd989] add	r13, r12                                                  ; r13 = 0x9000c3a7 -> 6261
[main] [INS] [002dd98c] sub	r15, r12                                                  ; r15 = 0x0
[main] [INS] [002dd98f] call	0x273230                                                 ; call(0x273230)
[main] [INS] [00273230] jmp	qword ptr [rip + 0x3c9f0a]                                ; jmp(0x3be730)
[main] [INS] [003be730] mov	rax, rdi                                                  ; rax = 0x90018ca3 -> 0
[main] [INS] [003be733] add	rax, rdx                                                  ; rax = 0x90018ca4 -> 0
[main] [INS] [003be736] jmp	0x3be753                                                  ; jmp(0x3be753)
[main] [INS] [003be753] cmp	rdx, 0x4f                                                 ; 0x1 vs 0x4f
[main] [INS] [003be757] lea	r11, [rip + 0x50762]                                      ; r11 = 0x40eec0 -> fffb14e0fffb1318
[main] [INS] [003be75e] ja	0x3be780
[main] [INS] [003be760] movsxd	r9, dword ptr [r11 + rdx*4]                            ; r9 = 0xfffffffffffb14e0
[main] [INS] [003be764] add	rsi, rdx                                                  ; rsi = 0x9000c3a7 -> 6261
[main] [INS] [003be767] add	rdi, rdx                                                  ; rdi = 0x90018ca4 -> 0
[main] [INS] [003be76a] add	r9, r11                                                   ; r9 = 0x3c03a0 -> 66c3ff5788ff568a
[main] [INS] [003be76d] jmp	r9                                                        ; jmp(0x3c03a0)
[main] [INS] [003c03a0] mov	dl, byte ptr [rsi - 1]                                    ; dl = 0x29
[main] [INS] [003c03a3] mov	byte ptr [rdi - 1], dl                                    ; store(0x90018ca3,0x29)
[main] [INS] [003c03a6] ret	
[main] [INS] [002dd994] mov	qword ptr [rbx + 0x28], rax                               ; store(0x63e788,0x90018ca4) -> 0
[main] [INS] [002dd998] add	r14, r15                                                  ; r14 = 0x0
[main] [INS] [002dd99b] jne	0x2dd9bb
[main] [INS] [002dd99d] sub	rbp, r15                                                  ; rbp = 0x1
[main] [INS] [002dd9a0] mov	r12, rbp                                                  ; r12 = 0x1
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x1
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000028
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x63a2a0 -> 0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002aefeb] mov	r9, qword ptr [rbp - 0x4c8]                               ; r9 = 0x1
[main] [INS] [002aeff2] cmp	r9, rax                                                   ; 0x1 vs 0x1
[main] [INS] [002aeff5] jne	0x2add00
[main] [INS] [002aeffb] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002af000] mov	r11, qword ptr [rbp - 0x4e0]                              ; r11 = 0x3ab2c -> 74736574614c0073
[main] [INS] [002af007] mov	ecx, dword ptr [rbp - 0x4e8]                              ; ecx = 0x1
[main] [INS] [002af00d] sub	eax, r13d                                                 ; eax = 0x7fffffff
[main] [INS] [002af010] cdqe	
[main] [INS] [002af012] cmp	r9, rax                                                   ; 0x1 vs 0x7fffffff
[main] [INS] [002af015] ja	0x2aec30
[main] [INS] [002af01b] add	r13d, ecx                                                 ; r13d = 0x1
[main] [INS] [002af01e] jmp	0x2ad930                                                  ; jmp(0x2ad930)
[main] [INS] [002ad930] add	dword ptr [rbp - 0x534], 1                                ; store(0x7f000008bcdc,0x1)
[main] [INS] [002ad937] cmp	qword ptr [rbp - 0x4d8], 0                                ; 0x0 vs 0x0
[main] [INS] [002ad93f] jne	0x2aee68
[main] [INS] [002ad945] add	r11, 1                                                    ; r11 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad949] mov	esi, 0x25                                                 ; esi = 0x25
[main] [INS] [002ad94e] mov	rdi, r11                                                  ; rdi = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad951] mov	qword ptr [rbp - 0x4c8], r11                              ; store(0x7f000008bd48,0x3ab2d) -> 2074736574614c00
[main] [INS] [002ad958] call	0x273040                                                 ; call(0x273040)
[main] [INS] [00273040] jmp	qword ptr [rip + 0x3ca002]                                ; jmp(0x303120)
[main] [INS] [00303120] movd	xmm1, esi                                                ; xmm1 = 0x25
[main] [INS] [00303124] mov	eax, edi                                                  ; eax = 0x3ab2d -> 2074736574614c00
[main] [INS] [00303126] and	eax, 0xfff                                                ; eax = 0xb2d
[main] [INS] [0030312b] punpcklbw	xmm1, xmm1                                          ; xmm1 = 0x2525 -> 8000000
[main] [INS] [0030312f] cmp	eax, 0xfc0                                                ; 0xb2d vs 0xfc0
[main] [INS] [00303134] punpcklwd	xmm1, xmm1                                          ; xmm1 = 0x25252525
[main] [INS] [00303138] pshufd	xmm1, xmm1, 0
[main] [INS] [0030313d] jg	0x303290
[main] [INS] [00303143] movdqu	xmm0, xmmword ptr [rdi]                                ; xmm0 = 0x753c203a6b72614d2074736574614c00
[main] [INS] [00303147] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [0030314b] movdqa	xmm4, xmm0                                             ; xmm4 = 0x753c203a6b72614d2074736574614c00
[main] [INS] [0030314f] pcmpeqb	xmm0, xmm1                                            ; xmm0 = 0x0
[main] [INS] [00303153] pcmpeqb	xmm4, xmm3                                            ; xmm4 = 0xff
[main] [INS] [00303157] por	xmm0, xmm4                                                ; xmm0 = 0xff
[main] [INS] [0030315b] pmovmskb	eax, xmm0                                            ; eax = 0x1
[main] [INS] [0030315f] test	eax, eax                                                 ; 0x1 vs 0x1
[main] [INS] [00303161] je	0x303170
[main] [INS] [00303163] bsf	eax, eax                                                  ; eax = 0x0
[main] [INS] [00303166] lea	rax, [rdi + rax]                                          ; rax = 0x3ab2d -> 2074736574614c00
[main] [INS] [0030316a] ret	
[main] [INS] [002ad95d] test	r13d, r13d                                               ; 0x1 vs 0x1
[main] [INS] [002ad960] mov	rcx, rax                                                  ; rcx = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad963] mov	r11, qword ptr [rbp - 0x4c8]                              ; r11 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad96a] js	0x2b0143
[main] [INS] [002ad970] mov	rax, qword ptr [r14 + 0xd8]                               ; rax = 0x63a2a0 -> 0
[main] [INS] [002ad977] lea	rsi, [rip + 0x38bde2]                                     ; rsi = 0x639760 -> 0
[main] [INS] [002ad97e] mov	rdx, rax                                                  ; rdx = 0x63a2a0 -> 0
[main] [INS] [002ad981] sub	rdx, rsi                                                  ; rdx = 0xb40
[main] [INS] [002ad984] cmp	qword ptr [rbp - 0x4d0], rdx                              ; 0xd68 vs 0xb40
[main] [INS] [002ad98b] jbe	0x2aee30
[main] [INS] [002ad991] mov	r15, rcx                                                  ; r15 = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad994] mov	qword ptr [rbp - 0x4c8], rcx                              ; store(0x7f000008bd48,0x3ab2d) -> 2074736574614c00
[main] [INS] [002ad99b] mov	rsi, r11                                                  ; rsi = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad99e] sub	r15, r11                                                  ; r15 = 0x0
[main] [INS] [002ad9a1] mov	rdi, r14                                                  ; rdi = 0x63e760 -> fbad2884
[main] [INS] [002ad9a4] mov	rdx, r15                                                  ; rdx = 0x0
[main] [INS] [002ad9a7] call	qword ptr [rax + 0x38]                                   ; call(0x2dd930)
[main] [INS] [002dd930] push	r15                                                      ; push(0x0)
[main] [INS] [002dd932] push	r14                                                      ; push(0x63e760) -> fbad2884
[main] [INS] [002dd934] push	r13                                                      ; push(0x1)
[main] [INS] [002dd936] push	r12                                                      ; push(0x7f000008c220) -> 3000000028
[main] [INS] [002dd938] xor	r12d, r12d                                                ; r12d = 0x0
[main] [INS] [002dd93b] push	rbp                                                      ; push(0x7f000008c210) -> 1
[main] [INS] [002dd93c] push	rbx                                                      ; push(0x3ab29) -> "%.*s"
[main] [INS] [002dd93d] sub	rsp, 0x18                                                 ; rsp = 0x7f000008bc50 -> 0
[main] [INS] [002dd941] test	rdx, rdx                                                 ; 0x0 vs 0x0
[main] [INS] [002dd944] je	0x2dd9a3
[main] [INS] [002dd9a3] add	rsp, 0x18                                                 ; rsp = 0x7f000008bc68 -> 3ab29
[main] [INS] [002dd9a7] mov	rax, r12                                                  ; rax = 0x0
[main] [INS] [002dd9aa] pop	rbx                                                       ; rbx = 0x3ab29 -> "%.*s"
[main] [INS] [002dd9ab] pop	rbp                                                       ; rbp = 0x7f000008c210 -> 1
[main] [INS] [002dd9ac] pop	r12                                                       ; r12 = 0x7f000008c220 -> 3000000028
[main] [INS] [002dd9ae] pop	r13                                                       ; r13 = 0x1
[main] [INS] [002dd9b0] pop	r14                                                       ; r14 = 0x63e760 -> fbad2884
[main] [INS] [002dd9b2] pop	r15                                                       ; r15 = 0x0
[main] [INS] [002dd9b4] ret	
[main] [INS] [002ad9aa] cmp	r15, rax                                                  ; 0x0 vs 0x0
[main] [INS] [002ad9ad] jne	0x2ad53d
[main] [INS] [002ad9b3] mov	eax, 0x7fffffff                                           ; eax = 0x7fffffff
[main] [INS] [002ad9b8] sub	eax, r13d                                                 ; eax = 0x7ffffffe
[main] [INS] [002ad9bb] cdqe	
[main] [INS] [002ad9bd] cmp	r15, rax                                                  ; 0x0 vs 0x7ffffffe
[main] [INS] [002ad9c0] jg	0x2ad780
[main] [INS] [002ad9c6] mov	rcx, qword ptr [rbp - 0x4c8]                              ; rcx = 0x3ab2d -> 2074736574614c00
[main] [INS] [002ad9cd] add	r13d, r15d                                                ; r13d = 0x1
[main] [INS] [002ad9d0] cmp	byte ptr [rcx], 0                                         ; 0x0 vs 0x0
[main] [INS] [002ad9d3] jne	0x2ad64a
[main] [INS] [002ad9d9] jmp	0x2ad543                                                  ; jmp(0x2ad543)
[main] [INS] [002ad543] test	dword ptr [r14], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [002ad54a] jne	0x2ad55d
[main] [INS] [002ad54c] mov	rdx, qword ptr [r14 + 0x88]                               ; rdx = 0x63f8c0 -> 200000001
[main] [INS] [002ad553] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [002ad557] je	0x2ad730
[main] [INS] [002ad55d] mov	edx, dword ptr [rbp - 0x4b4]                              ; edx = 0x0
[main] [INS] [002ad563] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [002ad565] je	0x2ad586
[main] [INS] [002ad586] mov	rbx, qword ptr [rbp - 0x38]                               ; rbx = 0x59424d4f444e4100
[main] [INS] [002ad58a] xor	rbx, qword ptr fs:[0x28]                                  ; rbx = 0x0
[main] [INS] [002ad593] mov	eax, r13d                                                 ; eax = 0x1
[main] [INS] [002ad596] jne	0x2b00ed
[main] [INS] [002ad59c] lea	rsp, [rbp - 0x28]                                         ; rsp = 0x7f000008c1e8 -> 63e760
[main] [INS] [002ad5a0] pop	rbx                                                       ; rbx = 0x63e760 -> fbad2884
[main] [INS] [002ad5a1] pop	r12                                                       ; r12 = 0x5
[main] [INS] [002ad5a3] pop	r13                                                       ; r13 = 0x0
[main] [INS] [002ad5a5] pop	r14                                                       ; r14 = 0x1
[main] [INS] [002ad5a7] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [002ad5a9] pop	rbp                                                       ; rbp = 0x1
[main] [INS] [002ad5aa] ret	
[main] [INS] [003844c6] and	dword ptr [rbx + 0x74], 0xffffffeb                        ; store(0x63e7d4,0xffffffeb)
[main] [INS] [003844ca] test	dword ptr [rbx], 0x8000                                  ; 0xfbad2884 vs 0x8000
[main] [INS] [003844d0] mov	esi, eax                                                  ; esi = 0x1
[main] [INS] [003844d2] jne	0x384513
[main] [INS] [003844d4] mov	rdx, qword ptr [rbx + 0x88]                               ; rdx = 0x63f8c0 -> 100000001
[main] [INS] [003844db] sub	dword ptr [rdx + 4], 1                                    ; store(0x63f8c4,0x1)
[main] [INS] [003844df] jne	0x384513
[main] [INS] [003844e1] mov	qword ptr [rdx + 8], 0                                    ; store(0x63f8c8,0x0)
[main] [INS] [003844e9] cmp	dword ptr [rip + 0x2be408], 0                             ; 0x0 vs 0x0
[main] [INS] [003844f0] je	0x3844f9
[main] [INS] [003844f9] dec	dword ptr [rdx]                                           ; mem is (0x0)
[main] [INS] [003844fb] je	0x384513
[main] [INS] [00384513] mov	rcx, qword ptr [rsp + 0x18]                               ; rcx = 0x59424d4f444e4100
[main] [INS] [00384518] xor	rcx, qword ptr fs:[0x28]                                  ; rcx = 0x0
[main] [INS] [00384521] mov	eax, esi                                                  ; eax = 0x1
[main] [INS] [00384523] jne	0x38452f
[main] [INS] [00384525] add	rsp, 0xd8                                                 ; rsp = 0x7f000008c2f8 -> 7f000008c410
[main] [INS] [0038452c] pop	rbx                                                       ; rbx = 0x7f000008c410 -> ff00000002
[main] [INS] [0038452d] pop	rbp                                                       ; rbp = 0x5
[main] [INS] [0038452e] ret	
[main] [INS] [0000ef09] mov	rsi, qword ptr [rip + 0x23a508]                           ; rsi = 0x63e760 -> fbad2884
[main] [INS] [0000ef10] mov	edi, 0xa                                                  ; edi = 0xa
[main] [INS] [0000ef15] add	qword ptr [rip + 0x238603], 1                             ; store(0x247520,0x1)
[main] [INS] [0000ef1d] call	0x5770                                                   ; call(0x5770)
[main] [INS] [00005770] jmp	qword ptr [rip + 0x23f782]                                ; jmp(0x2d97e0)
[main] [INS] [002d97e0] test	byte ptr [rsi + 0x74], 0x80                              ; 0x0 vs 0x80
[main] [INS] [002d97e4] mov	r8d, edi                                                  ; r8d = 0xa
[main] [INS] [002d97e7] mov	rdx, rsi                                                  ; rdx = 0x63e760 -> fbad2884
[main] [INS] [002d97ea] movzx	r10d, dil                                               ; r10d = 0xa
[main] [INS] [002d97ee] jne	0x2d9810
[main] [INS] [002d97f0] mov	rax, qword ptr [rsi + 0x28]                               ; rax = 0x90018ca4 -> 0
[main] [INS] [002d97f4] cmp	rax, qword ptr [rsi + 0x30]                               ; 0x90018ca4 vs 0x90019c60
[main] [INS] [002d97f8] jae	0x2d98e0
[main] [INS] [002d97fe] lea	rcx, [rax + 1]                                            ; rcx = 0x90018ca5 -> 0
[main] [INS] [002d9802] mov	qword ptr [rsi + 0x28], rcx                               ; store(0x63e788,0x90018ca5) -> 0
[main] [INS] [002d9806] mov	byte ptr [rax], dil                                       ; store(0x90018ca4,0xa)
[main] [INS] [002d9809] mov	eax, r10d                                                 ; eax = 0xa
[main] [INS] [002d980c] ret	
[main] [INS] [0000ef22] add	qword ptr [rip + 0x2385fe], 1                             ; store(0x247528,0x1)
[main] [INS] [0000ef2a] mov	rax, qword ptr [rbx + 0x40]                               ; rax = 0x0
[main] [INS] [0000ef2e] cmp	rax, qword ptr [rip + 0x23a4ab]                           ; 0x0 vs 0x0
[main] [INS] [0000ef35] mov	dword ptr [rip + 0x23a4bd], 0                             ; store(0x2493fc,0x0)
[main] [INS] [0000ef3f] je	0xefc0
[main] [INS] [0000efc0] mov	rax, qword ptr [rbx + 0x30]                               ; rax = 0x0
[main] [INS] [0000efc4] test	rax, rax                                                 ; 0x0 vs 0x0
[main] [INS] [0000efc7] je	0xefdb
[main] [INS] [0000efdb] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000efdd] mov	eax, dword ptr [rip + 0x23a421]                           ; eax = 0xffffffff
[main] [INS] [0000efe3] cmp	dword ptr [rbx + 4], eax                                  ; 0xff vs 0xffffffff
[main] [INS] [0000efe6] je	0xf040
[main] [INS] [0000efe8] add	rsp, 8                                                    ; rsp = 0x7f000008c318 -> 76
[main] [INS] [0000efec] mov	eax, ebp                                                  ; eax = 0x0
[main] [INS] [0000efee] pop	rbx                                                       ; rbx = 0x76
[main] [INS] [0000efef] pop	rbp                                                       ; rbp = 0x76
[main] [INS] [0000eff0] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eff2] pop	r13                                                       ; r13 = 0x9003a05b -> 7800000600ff76
[main] [INS] [0000eff4] pop	r14                                                       ; r14 = 0x9004208f -> 62
[main] [INS] [0000eff6] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [0000eff8] ret	
[main] [INS] [00029f7e] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f80] mov	r9d, eax                                                  ; r9d = 0x0
[main] [INS] [00029f83] jg	0x2f6d4
[main] [INS] [00029f89] add	qword ptr [rip + 0x22419f], 1                             ; store(0x24e130,0x1)
[main] [INS] [00029f91] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f93] jne	0x2f6d7
[main] [INS] [00029f99] add	qword ptr [rip + 0x224197], 1                             ; store(0x24e138,0x1)
[main] [INS] [00029fa1] movzx	eax, byte ptr [r13 + 6]                                 ; eax = 0x78
[main] [INS] [00029fa6] add	r13, 6                                                    ; r13 = 0x9003a061 -> 700ff76180078
[main] [INS] [00029faa] add	qword ptr [rip + 0x224196], 1                             ; store(0x24e148,0x1)
[main] [INS] [00029fb2] jmp	0x28b50                                                   ; jmp(0x28b50)
[main] [INS] [00028b50] add	qword ptr [rip + 0x225008], 1                             ; store(0x24db60,0x1)
[main] [INS] [00028b58] jmp	0x288b7                                                   ; jmp(0x288b7)
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x78
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x78 vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x78
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x78
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffea198
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x29aa8 -> ed894c0155b70f41
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x29aa8)
[main] [INS] [00029aa8] movzx	edx, word ptr [r13 + 1]                                 ; edx = 0x1800 -> 120000011b
[main] [INS] [00029aad] mov	rbp, r13                                                  ; rbp = 0x9003a061 -> 700ff76180078
[main] [INS] [00029ab0] rol	dx, 8                                                     ; dx = 0x18
[main] [INS] [00029ab4] movzx	edx, dx                                                 ; edx = 0x18
[main] [INS] [00029ab7] sub	rbp, rdx                                                  ; rbp = 0x9003a049 -> 300ff7618007d
[main] [INS] [00029aba] movzx	edx, byte ptr [rbp]                                     ; edx = 0x7d
[main] [INS] [00029abe] cmp	dl, 0x87                                                  ; 0x7d vs 0x87
[main] [INS] [00029ac1] ja	0x2d495
[main] [INS] [00029ac7] xor	esi, esi                                                  ; esi = 0x0
[main] [INS] [00029ac9] cmp	dl, 0x81                                                  ; 0x7d vs 0x81
[main] [INS] [00029acc] je	0x2d495
[main] [INS] [00029ad2] lea	ecx, [rdx - 0x7d]                                         ; ecx = 0x0
[main] [INS] [00029ad5] cmp	cl, 3                                                     ; 0x0 vs 0x3
[main] [INS] [00029ad8] jbe	0x2feef
[main] [INS] [0002feef] mov	eax, dword ptr [rsp + 0x68]                               ; eax = 0x2
[main] [INS] [0002fef3] mov	r13, r12                                                  ; r13 = 0x7f000008c7c0 -> 3
[main] [INS] [0002fef6] add	qword ptr [rip + 0x21e362], 1                             ; store(0x24e260,0x1)
[main] [INS] [0002fefe] mov	qword ptr [r13 + 0xb8], r14                               ; store(0x7f000008c878,0x9004208f) -> 62
[main] [INS] [0002ff05] mov	r9d, 1                                                    ; r9d = 0x1
[main] [INS] [0002ff0b] mov	dword ptr [r12 + 0xcc], eax                               ; store(0x7f000008c88c,0x2)
[main] [INS] [0002ff13] mov	rax, qword ptr [rsp + 8]                                  ; rax = 0x9004208f -> 62
[main] [INS] [0002ff18] mov	qword ptr [r12 + 0xb0], rax                               ; store(0x7f000008c870,0x9004208f) -> 62
[main] [INS] [0002ff20] jmp	0x2893f                                                   ; jmp(0x2893f)
[main] [INS] [0002893f] mov	rdi, qword ptr [rsp + 0x188]                              ; rdi = 0x59424d4f444e4100
[main] [INS] [00028947] xor	rdi, qword ptr fs:[0x28]                                  ; rdi = 0x0
[main] [INS] [00028950] mov	eax, r9d                                                  ; eax = 0x1
[main] [INS] [00028953] jne	0x30232
[main] [INS] [00028959] add	rsp, 0x198                                                ; rsp = 0x7f000008c4e8 -> 7f000008c7c0
[main] [INS] [00028960] pop	rbx                                                       ; rbx = 0x7f000008c7c0 -> 3
[main] [INS] [00028961] pop	rbp                                                       ; rbp = 0x2
[main] [INS] [00028962] pop	r12                                                       ; r12 = 0x0
[main] [INS] [00028964] pop	r13                                                       ; r13 = 0x9003a049 -> 300ff7618007d
[main] [INS] [00028966] pop	r14                                                       ; r14 = 0x9004208e -> 6261
[main] [INS] [00028968] pop	r15                                                       ; r15 = 0x3f910 -> fffe9220fffe9850
[main] [INS] [0002896a] ret	
[main] [INS] [000299dc] cmp	eax, 1                                                    ; 0x1 vs 0x1
[main] [INS] [000299df] pop	r8                                                        ; r8 = 0x1
[main] [INS] [000299e1] pop	r9                                                        ; r9 = 0x29f7e -> 4b8f0fc18941c085
[main] [INS] [000299e3] je	0x2d9ee
[main] [INS] [0002d9ee] mov	rax, qword ptr [rbx + 0xb0]                               ; rax = 0x9004208f -> 62
[main] [INS] [0002d9f5] add	qword ptr [rip + 0x22065b], 1                             ; store(0x24e058,0x1)
[main] [INS] [0002d9fd] mov	r12, rbx                                                  ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0002da00] movzx	edx, byte ptr [r13]                                     ; edx = 0x7d
[main] [INS] [0002da05] mov	ebp, dword ptr [rsp + 0x10]                               ; ebp = 0x0
[main] [INS] [0002da09] mov	qword ptr [rsp + 8], rax                                  ; store(0x7f000008c538,0x9004208f) -> 62
[main] [INS] [0002da0e] cmp	dl, 0x78                                                  ; 0x7d vs 0x78
[main] [INS] [0002da11] je	0x30237
[main] [INS] [0002da17] add	qword ptr [rip + 0x220671], 1                             ; store(0x24e090,0x1)
[main] [INS] [0002da1f] test	ebp, ebp                                                 ; 0x0 vs 0x0
[main] [INS] [0002da21] je	0x2e074
[main] [INS] [0002e074] movzx	edx, word ptr [r13 + 1]                                 ; edx = 0x1800 -> 120000011b
[main] [INS] [0002e079] rol	dx, 8                                                     ; dx = 0x18
[main] [INS] [0002e07d] movzx	edx, dx                                                 ; edx = 0x18
[main] [INS] [0002e080] add	rdx, r13                                                  ; rdx = 0x9003a061 -> 700ff76180078
[main] [INS] [0002e083] cmp	byte ptr [rdx], 0x77                                      ; 0x78 vs 0x77
[main] [INS] [0002e086] jne	0x2e0b9
[main] [INS] [0002e0b9] mov	eax, dword ptr [r12 + 0xcc]                               ; eax = 0x2
[main] [INS] [0002e0c1] add	qword ptr [rip + 0x21ffd7], 1                             ; store(0x24e0a0,0x1)
[main] [INS] [0002e0c9] lea	r13, [rdx + 3]                                            ; r13 = 0x9003a064 -> 611d01000700ff76
[main] [INS] [0002e0cd] mov	dword ptr [rsp + 0x68], eax                               ; store(0x7f000008c598,0x2)
[main] [INS] [0002e0d1] movzx	eax, byte ptr [rdx + 3]                                 ; eax = 0x76
[main] [INS] [0002e0d5] jmp	0x28b50                                                   ; jmp(0x28b50)
[main] [INS] [00028b50] add	qword ptr [rip + 0x225008], 1                             ; store(0x24db60,0x1)
[main] [INS] [00028b58] jmp	0x288b7                                                   ; jmp(0x288b7)
[main] [INS] [000288b7] movzx	ebp, al                                                 ; ebp = 0x76
[main] [INS] [000288ba] cmp	al, 0xa1                                                  ; 0x76 vs 0xa1
[main] [INS] [000288bc] mov	ebx, ebp                                                  ; ebx = 0x76
[main] [INS] [000288be] ja	0x2b430
[main] [INS] [000288c4] movzx	edx, al                                                 ; edx = 0x76
[main] [INS] [000288c7] movsxd	rdx, dword ptr [r15 + rdx*4]                           ; rdx = 0xfffffffffffea578
[main] [INS] [000288cb] add	rdx, r15                                                  ; rdx = 0x29e88 -> 48002262e9158b48
[main] [INS] [000288ce] jmp	rdx                                                       ; jmp(0x29e88)
[main] [INS] [00029e88] mov	rdx, qword ptr [rip + 0x2262e9]                           ; rdx = 0xeb80 -> "AWAVAUAT"
[main] [INS] [00029e8f] test	rdx, rdx                                                 ; 0xeb80 vs 0xeb80
[main] [INS] [00029e92] je	0x29fa1
[main] [INS] [00029e98] mov	dword ptr [rsp + 0xc0], 2                                 ; store(0x7f000008c5f0,0x2)
[main] [INS] [00029ea3] movzx	eax, byte ptr [r13 + 1]                                 ; eax = 0xff
[main] [INS] [00029ea8] mov	rdi, r14                                                  ; rdi = 0x9004208e -> 6261
[main] [INS] [00029eab] mov	rcx, qword ptr [r12 + 0xa8]                               ; rcx = 0x90042090 -> 0
[main] [INS] [00029eb3] add	qword ptr [rip + 0x224265], 1                             ; store(0x24e120,0x1)
[main] [INS] [00029ebb] mov	dword ptr [rsp + 0xc4], eax                               ; store(0x7f000008c5f4,0xff)
[main] [INS] [00029ec2] mov	rax, qword ptr [r12 + 0x18]                               ; rax = 0x90018700 -> ffffffffffffffff
[main] [INS] [00029ec7] mov	qword ptr [rsp + 0xc8], rax                               ; store(0x7f000008c5f8,0x90018700) -> ffffffffffffffff
[main] [INS] [00029ecf] mov	rax, qword ptr [r12 + 0xa0]                               ; rax = 0x9004208e -> 6261
[main] [INS] [00029ed7] sub	rcx, rax                                                  ; rcx = 0x2
[main] [INS] [00029eda] sub	rdi, rax                                                  ; rdi = 0x0
[main] [INS] [00029edd] mov	qword ptr [rsp + 0xd0], rax                               ; store(0x7f000008c600,0x9004208e) -> 6261
[main] [INS] [00029ee5] mov	dword ptr [rsp + 0xd8], ecx                               ; store(0x7f000008c608,0x2)
[main] [INS] [00029eec] mov	rcx, qword ptr [rsp + 8]                                  ; rcx = 0x9004208f -> 62
[main] [INS] [00029ef1] mov	dword ptr [rsp + 0xe0], edi                               ; store(0x7f000008c610,0x0)
[main] [INS] [00029ef8] mov	edi, dword ptr [rsp + 0x68]                               ; edi = 0x2
[main] [INS] [00029efc] sub	rcx, rax                                                  ; rcx = 0x1
[main] [INS] [00029eff] mov	dword ptr [rsp + 0xdc], ecx                               ; store(0x7f000008c60c,0x1)
[main] [INS] [00029f06] movzx	eax, word ptr [r13 + 2]                                 ; eax = 0x700
[main] [INS] [00029f0b] rol	ax, 8                                                     ; ax = 0x7
[main] [INS] [00029f0f] movzx	eax, ax                                                 ; eax = 0x7
[main] [INS] [00029f12] mov	dword ptr [rsp + 0xf8], eax                               ; store(0x7f000008c628,0x7)
[main] [INS] [00029f19] movzx	eax, word ptr [r13 + 4]                                 ; eax = 0x100
[main] [INS] [00029f1e] rol	ax, 8                                                     ; ax = 0x1
[main] [INS] [00029f22] movzx	eax, ax                                                 ; eax = 0x1
[main] [INS] [00029f25] mov	dword ptr [rsp + 0xfc], eax                               ; store(0x7f000008c62c,0x1)
[main] [INS] [00029f2c] mov	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f2e] shr	eax, 0x1f                                                 ; eax = 0x0
[main] [INS] [00029f31] add	eax, edi                                                  ; eax = 0x2
[main] [INS] [00029f33] sar	eax, 1                                                    ; eax = 0x1
[main] [INS] [00029f35] mov	dword ptr [rsp + 0xe4], eax                               ; store(0x7f000008c614,0x1)
[main] [INS] [00029f3c] movzx	eax, word ptr [r12 + 0xd0]                              ; eax = 0x0
[main] [INS] [00029f45] test	eax, eax                                                 ; 0x0 vs 0x0
[main] [INS] [00029f47] je	0x2dbd0
[main] [INS] [0002dbd0] mov	dword ptr [rsp + 0xe8], 0xffffffff                        ; store(0x7f000008c618,0xffffffff)
[main] [INS] [0002dbdb] add	qword ptr [rip + 0x220545], 1                             ; store(0x24e128,0x1)
[main] [INS] [0002dbe3] jmp	0x29f54                                                   ; jmp(0x29f54)
[main] [INS] [00029f54] mov	rax, qword ptr [r12 + 0xf8]                               ; rax = 0x0
[main] [INS] [00029f5c] lea	rdi, [rsp + 0xc0]                                         ; rdi = 0x7f000008c5f0 -> ff00000002
[main] [INS] [00029f64] mov	qword ptr [rsp + 0xf0], rax                               ; store(0x7f000008c620,0x0)
[main] [INS] [00029f6c] mov	rax, qword ptr [r12 + 0x108]                              ; rax = 0x0
[main] [INS] [00029f74] mov	qword ptr [rsp + 0x100], rax                              ; store(0x7f000008c630,0x0)
[main] [INS] [00029f7c] call	rdx                                                      ; call(0xeb80)
[main] [INS] [0000eb80] push	r15                                                      ; push(0x3f910) -> fffe9220fffe9850
[main] [INS] [0000eb82] push	r14                                                      ; push(0x9004208e) -> 6261
[main] [INS] [0000eb84] push	r13                                                      ; push(0x9003a064) -> 611d01000700ff76
[main] [INS] [0000eb86] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb88] push	rbp                                                      ; push(0x76)
[main] [INS] [0000eb89] push	rbx                                                      ; push(0x76)
[main] [INS] [0000eb8a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb8c] mov	rbx, rdi                                                  ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [0000eb8f] sub	rsp, 8                                                    ; rsp = 0x7f000008c4f0 -> 2
[main] [INS] [0000eb93] mov	eax, dword ptr [rip + 0x23a873]                           ; eax = 0x0
[main] [INS] [0000eb99] add	qword ptr [rip + 0x23885f], 1                             ; store(0x247400,0x1)
[main] [INS] [0000eba1] mov	edx, eax                                                  ; edx = 0x0
[main] [INS] [0000eba3] or	edx, dword ptr [rip + 0x23a853]                            ; edx = 0x0
[main] [INS] [0000eba9] je	0xed06
[main] [INS] [0000ed06] mov	esi, dword ptr [rbx + 0x1c]                               ; esi = 0x1
[main] [INS] [0000ed09] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed0c] mov	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208e -> 6261
[main] [INS] [0000ed10] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a064) -> 611d01000700ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c5f0) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208e -> 6261
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c4c0 -> 63e760
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb23] test	esi, esi                                                 ; 0x1 vs 0x1
[main] [INS] [0000eb25] jle	0xeb78
[main] [INS] [0000eb27] lea	eax, [rsi - 1]                                            ; eax = 0x0
[main] [INS] [0000eb2a] xor	ebp, ebp                                                  ; ebp = 0x0
[main] [INS] [0000eb2c] lea	r13, [rbx + rax + 1]                                      ; r13 = 0x9004208f -> 62
[main] [INS] [0000eb31] nop	dword ptr [rax]
[main] [INS] [0000eb38] add	rbx, 1                                                    ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb3c] movzx	edi, byte ptr [rbx - 1]                                 ; edi = 0x61
[main] [INS] [0000eb40] mov	rsi, r12                                                  ; rsi = 0x0
[main] [INS] [0000eb43] add	qword ptr [rip + 0x238865], 1                             ; store(0x2473b0,0x1)
[main] [INS] [0000eb4b] call	0xe970                                                   ; call(0xe970)
[main] [INS] [0000e970] mov	edx, dword ptr [rip + 0x23aa7e]                           ; edx = 0x0
[main] [INS] [0000e976] push	r12                                                      ; push(0x0)
[main] [INS] [0000e978] push	rbp                                                      ; push(0x0)
[main] [INS] [0000e979] mov	rbp, rsi                                                  ; rbp = 0x0
[main] [INS] [0000e97c] push	rbx                                                      ; push(0x9004208f) -> 62
[main] [INS] [0000e97d] mov	ebx, edi                                                  ; ebx = 0x61
[main] [INS] [0000e97f] test	edx, edx                                                 ; 0x0 vs 0x0
[main] [INS] [0000e981] je	0xea40
[main] [INS] [0000ea40] lea	eax, [rdi - 0x20]                                         ; eax = 0x41
[main] [INS] [0000ea43] cmp	eax, 0x5e                                                 ; 0x41 vs 0x5e
[main] [INS] [0000ea46] setbe	al                                                      ; al = 0x1
[main] [INS] [0000ea49] add	qword ptr [rip + 0x2388cf], 1                             ; store(0x247320,0x1)
[main] [INS] [0000ea51] jmp	0xe99d                                                    ; jmp(0xe99d)
[main] [INS] [0000e99d] test	al, al                                                   ; 0x1 vs 0x1
[main] [INS] [0000e99f] je	0xe9e8
[main] [INS] [0000e9a1] add	qword ptr [rip + 0x23897f], 1                             ; store(0x247328,0x1)
[main] [INS] [0000e9a9] test	rbp, rbp                                                 ; 0x0 vs 0x0
[main] [INS] [0000e9ac] mov	r12d, 1                                                   ; r12d = 0x1
[main] [INS] [0000e9b2] je	0xe9dc
[main] [INS] [0000e9dc] mov	eax, r12d                                                 ; eax = 0x1
[main] [INS] [0000e9df] pop	rbx                                                       ; rbx = 0x9004208f -> 62
[main] [INS] [0000e9e0] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000e9e1] pop	r12                                                       ; r12 = 0x0
[main] [INS] [0000e9e3] ret	
[main] [INS] [0000eb50] add	qword ptr [rip + 0x238850], 1                             ; store(0x2473a8,0x1)
[main] [INS] [0000eb58] add	ebp, eax                                                  ; ebp = 0x1
[main] [INS] [0000eb5a] cmp	r13, rbx                                                  ; 0x9004208f vs 0x9004208f
[main] [INS] [0000eb5d] jne	0xeb38
[main] [INS] [0000eb5f] add	qword ptr [rip + 0x238851], 1                             ; store(0x2473b8,0x1)
[main] [INS] [0000eb67] add	rsp, 8                                                    ; rsp = 0x7f000008c4c8 -> 7f000008c5f0
[main] [INS] [0000eb6b] mov	eax, ebp                                                  ; eax = 0x1
[main] [INS] [0000eb6d] pop	rbx                                                       ; rbx = 0x7f000008c5f0 -> ff00000002
[main] [INS] [0000eb6e] pop	rbp                                                       ; rbp = 0x0
[main] [INS] [0000eb6f] pop	r12                                                       ; r12 = 0x7f000008c7c0 -> 3
[main] [INS] [0000eb71] pop	r13                                                       ; r13 = 0x9003a064 -> 611d01000700ff76
[main] [INS] [0000eb73] ret	
[main] [INS] [0000ed15] movsxd	rdi, dword ptr [rbx + 0x1c]                            ; rdi = 0x1
[main] [INS] [0000ed19] mov	esi, dword ptr [rbx + 0x20]                               ; esi = 0x0
[main] [INS] [0000ed1c] mov	rdx, rbp                                                  ; rdx = 0x0
[main] [INS] [0000ed1f] add	qword ptr [rip + 0x238741], 1                             ; store(0x247468,0x1)
[main] [INS] [0000ed27] mov	r14d, eax                                                 ; r14d = 0x1
[main] [INS] [0000ed2a] sub	esi, edi                                                  ; esi = 0xffffffff
[main] [INS] [0000ed2c] add	rdi, qword ptr [rbx + 0x10]                               ; rdi = 0x9004208f -> 62
[main] [INS] [0000ed30] call	0xeb00                                                   ; call(0xeb00)
[main] [INS] [0000eb00] push	r13                                                      ; push(0x9003a064) -> 611d01000700ff76
[main] [INS] [0000eb02] push	r12                                                      ; push(0x7f000008c7c0) -> 3
[main] [INS] [0000eb04] mov	r12, rdx                                                  ; r12 = 0x0
[main] [INS] [0000eb07] push	rbp                                                      ; push(0x0)
[main] [INS] [0000eb08] push	rbx                                                      ; push(0x7f000008c5f0) -> ff00000002
[main] [INS] [0000eb09] mov	rbx, rdi                                                  ; rbx = 0x9004208f -> 62
[main] [INS] [0000eb0c] sub	rsp, 8                                                    ; rsp = 0x7f000008c4c0 -> 63e760
[main] [INS] [0000eb10] test	esi, esi                                                 ; 0xffffffff vs 0xffffffff
[main] [INS] [0000eb12] jns	0xeb23
[main] [INS] [0000eb14] call	0x5700                                                   ; call(0x5700)
[main] [INS] [00005700] jmp	qword ptr [rip + 0x23f7ba]                                ; jmp(0x303620)
[main] [INS] [00303620] pxor	xmm0, xmm0                                               ; xmm0 = 0x0
[main] [INS] [00303624] pxor	xmm1, xmm1                                               ; xmm1 = 0x0
[main] [INS] [00303628] pxor	xmm2, xmm2                                               ; xmm2 = 0x0
[main] [INS] [0030362c] pxor	xmm3, xmm3                                               ; xmm3 = 0x0
[main] [INS] [00303630] mov	rax, rdi                                                  ; rax = 0x9004208f -> 62
[main] [INS] [00303633] mov	rcx, rdi                                                  ; rcx = 0x9004208f -> 62
[main] [INS] [00303636] and	rcx, 0xfff                                                ; rcx = 0x8f
[main] [INS] [0030363d] cmp	rcx, 0xfcf                                                ; 0x8f vs 0xfcf
[main] [INS] [00303644] ja	0x3036b0
17:32:47:asan______:WARNIN:
Crash Summary:
  Exploitable: UNKNOWN
  Reason: heap-overflow
  Crashing Instruction: 0x303646
  Crashing Memory Access: READ 0x90042097 (buf + 0x8007)
  Origin Inst: 0x5820 realloc(ptr=0x0, new_size=0x8000)

17:32:47:taint_____:NOTICE:Execution finished.
17:32:47:taint_grap:WARNIN:Memory use has not been defined inst addr: 303646 mem_addr: 9004208f
17:32:47:taint_____:INFO__:Parsing DWARF info
